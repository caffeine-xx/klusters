<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.1">
  <compounddef id="eventsprovider_8cpp" kind="file">
    <compoundname>eventsprovider.cpp</compoundname>
    <includes local="no">qstringlist.h</includes>
    <includes local="no">qfileinfo.h</includes>
    <includes local="no">qregexp.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">kurl.h</includes>
    <includes local="no">kprocess.h</includes>
    <includes local="no">kio/netaccess.h</includes>
    <includes local="no">ktempfile.h</includes>
    <includes local="no">unistd.h</includes>
    <includes refid="eventsprovider_8h" local="yes">eventsprovider.h</includes>
    <includes refid="timer_8h" local="yes">timer.h</includes>
    <incdepgraph>
      <node id="1139">
        <label>eventsprovider.h</label>
        <link refid="eventsprovider_8h-source"/>
        <childnode refid="1140" relation="include">
        </childnode>
        <childnode refid="1142" relation="include">
        </childnode>
        <childnode refid="1144" relation="include">
        </childnode>
        <childnode refid="1145" relation="include">
        </childnode>
        <childnode refid="1141" relation="include">
        </childnode>
        <childnode refid="1146" relation="include">
        </childnode>
        <childnode refid="1147" relation="include">
        </childnode>
      </node>
      <node id="1130">
        <label>qregexp.h</label>
      </node>
      <node id="1133">
        <label>iomanip</label>
      </node>
      <node id="1146">
        <label>qfile.h</label>
      </node>
      <node id="1140">
        <label>dataprovider.h</label>
        <link refid="dataprovider_8h-source"/>
        <childnode refid="1141" relation="include">
        </childnode>
        <childnode refid="1134" relation="include">
        </childnode>
      </node>
      <node id="1141">
        <label>qobject.h</label>
      </node>
      <node id="1134">
        <label>kurl.h</label>
      </node>
      <node id="1142">
        <label>array.h</label>
        <link refid="array_8h-source"/>
        <childnode refid="1143" relation="include">
        </childnode>
        <childnode refid="1131" relation="include">
        </childnode>
      </node>
      <node id="1145">
        <label>qptrlist.h</label>
      </node>
      <node id="1132">
        <label>fstream</label>
      </node>
      <node id="1138">
        <label>unistd.h</label>
      </node>
      <node id="1137">
        <label>ktempfile.h</label>
      </node>
      <node id="1127">
        <label>eventsprovider.cpp</label>
        <link refid="eventsprovider.cpp"/>
        <childnode refid="1128" relation="include">
        </childnode>
        <childnode refid="1129" relation="include">
        </childnode>
        <childnode refid="1130" relation="include">
        </childnode>
        <childnode refid="1131" relation="include">
        </childnode>
        <childnode refid="1132" relation="include">
        </childnode>
        <childnode refid="1133" relation="include">
        </childnode>
        <childnode refid="1134" relation="include">
        </childnode>
        <childnode refid="1135" relation="include">
        </childnode>
        <childnode refid="1136" relation="include">
        </childnode>
        <childnode refid="1137" relation="include">
        </childnode>
        <childnode refid="1138" relation="include">
        </childnode>
        <childnode refid="1139" relation="include">
        </childnode>
        <childnode refid="1148" relation="include">
        </childnode>
      </node>
      <node id="1147">
        <label>math.h</label>
      </node>
      <node id="1148">
        <label>timer.h</label>
        <link refid="timer_8h-source"/>
        <childnode refid="1149" relation="include">
        </childnode>
      </node>
      <node id="1149">
        <label>sys/time.h</label>
      </node>
      <node id="1131">
        <label>iostream</label>
      </node>
      <node id="1135">
        <label>kprocess.h</label>
      </node>
      <node id="1129">
        <label>qfileinfo.h</label>
      </node>
      <node id="1136">
        <label>kio/netaccess.h</label>
      </node>
      <node id="1143">
        <label>cstring</label>
      </node>
      <node id="1128">
        <label>qstringlist.h</label>
      </node>
      <node id="1144">
        <label>types.h</label>
        <link refid="types_8h-source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="">
      <memberdef kind="function" id="eventsprovider_8cpp_18a51eda3185265c0a1a8282a2bb6c522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const EventDescription &amp;s1, const EventDescription &amp;s2)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classEventDescription" kindref="compound">EventDescription</ref> &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classEventDescription" kindref="compound">EventDescription</ref> &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/eventsprovider.cpp" line="1386" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/eventsprovider.cpp" bodystart="1386" bodyend="1389"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="">
      <memberdef kind="function" id="eventsprovider_8cpp_18a51eda3185265c0a1a8282a2bb6c522" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const EventDescription &amp;s1, const EventDescription &amp;s2)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classEventDescription" kindref="compound">EventDescription</ref> &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classEventDescription" kindref="compound">EventDescription</ref> &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/eventsprovider.cpp" line="1386" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/eventsprovider.cpp" bodystart="1386" bodyend="1389"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventsprovider.cpp<sp/><sp/>-<sp/><sp/>description</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>begin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Wed<sp/>Apr<sp/>14<sp/>2004</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>copyright<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(C)<sp/>2004<sp/>by<sp/>Lynn<sp/>Hazan</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>email<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>lynn.hazan.myrealbox.com</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//QT<sp/>include<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qstringlist.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qfileinfo.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qregexp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//General<sp/>C++<sp/>include<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Required<sp/>for<sp/>formated<sp/>I/O.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>files<sp/>for<sp/>KDE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kurl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kprocess.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kio/netaccess.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ktempfile.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//Unix<sp/>include<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//include<sp/>files<sp/>for<sp/>the<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;eventsprovider.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;timer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="classEventsProvider_1f5a5408a39df110a761c0a05010c138f" kindref="member">EventsProvider::EventsProvider</ref>(KURL<sp/>fileUrl,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentSamplingRate,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position):<sp/><ref refid="classDataProvider" kindref="compound">DataProvider</ref>(fileUrl),nbEvents(0),</highlight></codeline>
<codeline lineno="43"><highlight class="normal">eventPosition(static_cast&lt;float&gt;(position)<sp/>/<sp/>100.0),modified(false){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/>this-&gt;currentSamplingRate<sp/>=<sp/>static_cast&lt;float&gt;(static_cast&lt;float&gt;(currentSamplingRate)<sp/>/<sp/>1000.0);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/></highlight><highlight class="comment">//Find<sp/>the<sp/>event<sp/>file<sp/>identifier<sp/>and<sp/>use<sp/>it<sp/>as<sp/>the<sp/>name<sp/>for<sp/>the<sp/>provider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/></highlight><highlight class="comment">//the<sp/>file<sp/>name<sp/>is<sp/>X.id.evt<sp/>(id<sp/>is<sp/>a<sp/>3<sp/>character<sp/>identifier)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/>QString<sp/>fileName<sp/>=<sp/>fileUrl.fileName();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startingIndex<sp/>=<sp/>fileName.findRev(</highlight><highlight class="stringliteral">&quot;evt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startingIndex<sp/>==<sp/>static_cast&lt;int&gt;(fileName.length())<sp/>-<sp/>3){</highlight><highlight class="comment">//X.id.evt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBStartingIndex<sp/>=<sp/>fileName.findRev(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">,startingIndex<sp/>-<sp/>2);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>name<sp/>=<sp/>fileName.mid(nBStartingIndex<sp/>+<sp/>1,(startingIndex<sp/>-<sp/>1)<sp/>-<sp/>(nBStartingIndex<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="comment">//X.evt.id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBStartingIndex<sp/>=<sp/>fileName.findRev(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>name<sp/>=<sp/>fileName.right(static_cast&lt;int&gt;(fileName.length())<sp/>-<sp/>(nBStartingIndex<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">EventsProvider::~EventsProvider(){</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;in<sp/>~EventsProvider<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classEventsProvider_1cceb976433725bd97a19f3c546fa7cfd" kindref="member">EventsProvider::loadData</ref>(){</highlight></codeline>
<codeline lineno="66"><highlight class="normal">RestartTimer();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>number<sp/>of<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/>KProcess<sp/>childproc;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/>childproc.setUseShell(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/>KTempFile<sp/>counterFile<sp/>=<sp/>KTempFile();</highlight><highlight class="comment">//make<sp/>a<sp/>unique<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/>childproc<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;wc<sp/>-l<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="classDataProvider_12fa94f4ef65e78995b0182cbe9a03b55" kindref="member">fileName</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>&gt;<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;counterFile.name();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/>childproc.start(KProcess::NotifyOnExit);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/>sleep(1);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/>QFileInfo<sp/>fi(counterFile.name());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!fi.exists()){</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;!fi.exists()&quot;</highlight><highlight class="normal">&lt;&lt;endl;<sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>sleep(1);<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/>}<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/>QFile<sp/>tmpFile(counterFile.name());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>tmpFile.open(IO_ReadOnly);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//If<sp/>the<sp/>number<sp/>of<sp/>events<sp/>could<sp/>not<sp/>be<sp/>determined,<sp/>stop<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!status){</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>cout&lt;&lt;counterFile.name()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>could<sp/>not<sp/>be<sp/>opened&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>events.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>timeStamps.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COUNT_ERROR;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>reader<sp/>on<sp/>the<sp/>temp<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/>QTextStream<sp/>tmpFileStream(&amp;tmpFile);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/>QString<sp/>infoLine<sp/>=<sp/>tmpFileStream.readLine();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/>QString<sp/>info;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(infoLine<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>info<sp/>=<sp/>infoLine.stripWhiteSpace();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>fileName<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<ref refid="classDataProvider_12fa94f4ef65e78995b0182cbe9a03b55" kindref="member">fileName</ref>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>counterFile<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;counterFile.name()&lt;&lt;endl;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>info<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;info&lt;&lt;endl;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>QStringList<sp/>parts<sp/>=<sp/>QStringList::split(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>info);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>nbEvents<sp/>=<sp/>parts[0].toLong();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>tmpFile.close();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;nbEvents<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;nbEvents&lt;&lt;endl;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/></highlight><highlight class="comment">//Remove<sp/>the<sp/>temporary<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/>KProcess<sp/>childproc2;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/>childproc2.setUseShell(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/>childproc2<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;rm<sp/>-f<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;counterFile.name();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/>childproc2.start(KProcess::NotifyOnExit);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(infoLine<sp/>==<sp/>NULL<sp/>||<sp/>nbEvents<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="classEventsProvider_1c929d39f562537cd44d7413739673376" kindref="member">initializeEmptyProvider</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>number<sp/>of<sp/>events<sp/>could<sp/>not<sp/>be<sp/>determined,<sp/>stop<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>events.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>timeStamps.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>COUNT_ERROR;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>reader<sp/>on<sp/>the<sp/>eventFile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/>QFile<sp/>eventFile(<ref refid="classDataProvider_12fa94f4ef65e78995b0182cbe9a03b55" kindref="member">fileName</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/>status<sp/>=<sp/>eventFile.open(IO_ReadOnly);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!status){</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>events.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>timeStamps.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OPEN_ERROR;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>size<sp/>of<sp/>the<sp/>Arrays<sp/>containing<sp/>the<sp/>time<sp/>and<sp/>ids<sp/>of<sp/>the<sp/>events.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/>events.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(1,nbEvents);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/>timeStamps.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(1,nbEvents);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/>QTextStream<sp/>fileStream(&amp;eventFile);<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/>QString<sp/>line;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineCounter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/>QStringList<sp/>list;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(line<sp/>=<sp/>fileStream.readLine();<sp/>!line.isNull()<sp/>&amp;&amp;<sp/>lineCounter&lt;<sp/>nbEvents;line<sp/>=<sp/>fileStream.readLine()){</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>line<sp/>=<sp/>line.stripWhiteSpace();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index1<sp/>=<sp/>line.find(QRegExp(</highlight><highlight class="stringliteral">&quot;\\s&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index2<sp/>=<sp/>line.find(QRegExp(</highlight><highlight class="stringliteral">&quot;\\S&quot;</highlight><highlight class="normal">),index1);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>timeStamps[lineCounter]<sp/>=<sp/>line.left(index1).toDouble();<sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="classEventDescription" kindref="compound">EventDescription</ref><sp/>label<sp/>=<sp/>line.right(line.length()<sp/>-<sp/>index2);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>events[lineCounter]<sp/>=<sp/>label;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eventDescriptionCounter.contains(label)){</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>eventDescriptionCounter.insert(label,eventDescriptionCounter[label]<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>eventDescriptionCounter.insert(label,1);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>lineCounter<sp/>++;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/>eventFile.close();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Loading<sp/>evt<sp/>file<sp/>into<sp/>memory:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;Timer()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>number<sp/>of<sp/>events<sp/>read<sp/>has<sp/>to<sp/>be<sp/>coherent<sp/>with<sp/>the<sp/>number<sp/>of<sp/>events<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lineCounter<sp/>!=<sp/>nbEvents){</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>events.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>timeStamps.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>INCORRECT_CONTENT;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/></highlight><highlight class="comment">//Assign<sp/>an<sp/>id<sp/>to<sp/>each<sp/>event<sp/>description</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>iterator<sp/>iterates<sp/>on<sp/>the<sp/>keys<sp/>sorted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/>QMap&lt;EventDescription,int&gt;::Iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>maxSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sumOfSquares<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>eventDescriptionCounter.begin();<sp/>iterator<sp/>!=<sp/>eventDescriptionCounter.end();<sp/>++iterator){</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>eventIds.insert(iterator.key(),id);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>idsDescriptions.insert(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,iterator.key());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>static_cast&lt;long&gt;(iterator.key().length());</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(length<sp/>&gt;<sp/>maxSize)<sp/>maxSize<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>sum<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>sumOfSquares<sp/>+=<sp/>(length<sp/>*<sp/>length);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">++;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/></highlight><highlight class="comment">//Compute<sp/>the<sp/>length<sp/>to<sp/>use<sp/>to<sp/>display<sp/>the<sp/>descrption<sp/>of<sp/>the<sp/>events<sp/>in<sp/>the<sp/>event<sp/>palette.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>descriptionLength<sp/>=<sp/>min(mean<sp/>+<sp/>1<sp/>*<sp/>standard<sp/>deviation,<sp/>maxsize)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mean<sp/>=<sp/>sum<sp/>/<sp/>eventIds.size();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/></highlight><highlight class="comment">//variance(X)<sp/>=<sp/>mean(X^2)<sp/>-<sp/>mean(X)^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>variance<sp/>=<sp/><sp/>(sumOfSquares<sp/>/<sp/>eventIds.size())<sp/>-<sp/>(mean<sp/>*<sp/>mean);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/></highlight><highlight class="comment">//standard<sp/>deviation<sp/>=<sp/>square<sp/>root<sp/>of<sp/>the<sp/>variance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>stdVar<sp/>=<sp/>static_cast&lt;long&gt;(sqrt(static_cast&lt;double&gt;(variance)));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/>descriptionLength<sp/>=<sp/>static_cast&lt;int&gt;(QMIN((mean<sp/>+<sp/>stdVar),maxSize));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/></highlight><highlight class="comment">//Be<sp/>sure<sp/>that<sp/>the<sp/>length<sp/>is<sp/>minimum<sp/>2<sp/>digits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/>descriptionLength<sp/>=<sp/>QMAX(descriptionLength,2);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/></highlight><highlight class="comment">//Initialize<sp/>the<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/>previousStartTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/>previousStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/>previousEndIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/>previousEndTime<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,nbEvents)));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/>fileMaxTime<sp/>=<sp/>previousEndTime;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OK;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEventsProvider_1c929d39f562537cd44d7413739673376" kindref="member">EventsProvider::initializeEmptyProvider</ref>(){</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/>modified<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/>nbEvents<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/>events.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/>timeStamps.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/>descriptionLength<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/></highlight><highlight class="comment">//Initialize<sp/>the<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/>previousStartTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/>previousStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/>previousEndIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/>previousEndTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/>fileMaxTime<sp/>=<sp/>0;<sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEventsProvider_1d6dec09f16591b2f53cbddbdc96babb1" kindref="member">EventsProvider::requestData</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>startTime,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>endTime,QObject*<sp/>initiator,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>startTimeInRecordingUnits){</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>retrieveData(startTime,endTime,initiator);</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EventsProvider::retrieveData(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>startTime,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>endTime,QObject*<sp/>initiator){<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><ref refid="classArray" kindref="compound">Array&lt;dataType&gt;</ref><sp/>times;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><ref refid="classArray" kindref="compound">Array&lt;int&gt;</ref><sp/>ids;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbEvents<sp/>==<sp/>0<sp/>||<sp/>startTime<sp/>&gt;<sp/>fileMaxTime){</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Send<sp/>the<sp/>information<sp/>to<sp/>the<sp/>receiver.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="classEventsProvider_1e48e4f307cc9fbbb278b1c776f897a17" kindref="member">dataReady</ref>(times,ids,initiator,name);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(endTime<sp/>&gt;<sp/>fileMaxTime)<sp/>endTime<sp/>=<sp/>fileMaxTime;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>startIndex<sp/>=<sp/>previousStartIndex;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>endIndex<sp/>=<sp/>previousEndIndex;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dicotomyBreak<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>time;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/></highlight><highlight class="comment">//Look<sp/>up<sp/>for<sp/>the<sp/>closest<sp/>starting<sp/>index<sp/>to<sp/>the<sp/>one<sp/>corresponding<sp/>to<sp/>startTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/></highlight><highlight class="comment">//Dicotomy<sp/>will<sp/>be<sp/>used<sp/>with<sp/>a<sp/>stop<sp/>at<sp/>dicotomyBreak.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((startTime<sp/>!=<sp/>previousStartTime)<sp/>&amp;&amp;<sp/>(startTime<sp/>!=<sp/>previousEndTime)){</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/>startIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(endTime<sp/>&lt;=<sp/>previousStartTime)<sp/>endIndex<sp/>=<sp/>previousStartIndex;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(endTime<sp/>&lt;=<sp/>previousEndTime)<sp/>endIndex<sp/>=<sp/>previousEndIndex;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(endTime<sp/>&gt;<sp/>previousEndTime)<sp/>endIndex<sp/>=<sp/>nbEvents;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>&lt;<sp/>previousStartTime){</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/>startIndex<sp/>=<sp/>static_cast&lt;int&gt;(previousStartIndex<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIndex<sp/>&lt;=<sp/>0)<sp/>startIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(endTime<sp/>&lt;=<sp/>previousStartTime)<sp/>endIndex<sp/>=<sp/>previousStartIndex;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(endTime<sp/>&lt;=<sp/>previousEndTime)<sp/>endIndex<sp/>=<sp/>previousEndIndex;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(endTime<sp/>&gt;<sp/>previousEndTime)<sp/>endIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>&lt;<sp/>previousEndTime<sp/>&amp;&amp;<sp/>startTime<sp/>&gt;<sp/>previousStartTime){</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/>startIndex<sp/>=<sp/>previousStartIndex<sp/>+<sp/>static_cast&lt;int&gt;((previousEndIndex<sp/>-<sp/>previousStartIndex<sp/>+<sp/>1)/<sp/>2);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(endTime<sp/>&lt;=<sp/>previousEndTime)<sp/>endIndex<sp/>=<sp/>previousEndIndex;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(endTime<sp/>&gt;<sp/>previousEndTime)<sp/>endIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>&gt;<sp/>previousEndTime){</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>startIndex<sp/>=<sp/>previousEndIndex;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/>endIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>newStartIndex<sp/>=<sp/>startIndex;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>newEndIndex<sp/>=<sp/>endIndex;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//dicotomy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((newEndIndex<sp/>-<sp/>newStartIndex<sp/>+<sp/>1)<sp/>&gt;<sp/>dicotomyBreak){</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>==<sp/>startTime)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&gt;<sp/>startTime){</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>previousStart<sp/>=<sp/>newStartIndex;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>previousStart<sp/>-<sp/>((newEndIndex<sp/>-<sp/>previousStart<sp/>+<sp/>1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&lt;=<sp/>0){</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>newEndIndex<sp/>=<sp/>previousStart;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>newStartIndex<sp/>+<sp/>((newEndIndex<sp/>-<sp/>newStartIndex<sp/>+<sp/>1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&gt;<sp/>nbEvents){</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//look<sp/>up<sp/>for<sp/>the<sp/>startIndex<sp/>index<sp/>by<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&lt;<sp/>startTime<sp/>&amp;&amp;<sp/>(newStartIndex<sp/>&lt;<sp/>nbEvents)){</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(time<sp/>&lt;<sp/>startTime){</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex++;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&gt;<sp/>nbEvents){</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));<sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&gt;<sp/>startTime<sp/>&amp;&amp;<sp/>(newStartIndex<sp/>&gt;<sp/>1)){</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(time<sp/>&gt;<sp/>startTime){</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex--;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&lt;=<sp/>0){</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));<sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));<sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&lt;<sp/>startTime){</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newStartIndex++;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));<sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>startIndex<sp/>=<sp/>newStartIndex;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/>}</highlight><highlight class="comment">//end<sp/>(startTime<sp/>!=<sp/>previousStartTime)<sp/>||<sp/>(startTime<sp/>!=<sp/>previousEndTime)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>==<sp/>previousStartTime)<sp/>startIndex<sp/>=<sp/>previousStartIndex;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>==<sp/>previousEndTime){</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,previousEndIndex)))<sp/>&lt;<sp/>startTime){</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>startIndex<sp/>=<sp/>previousEndIndex<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIndex<sp/>&gt;<sp/>nbEvents)<sp/>startIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>startIndex<sp/>=<sp/>previousEndIndex;<sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(endTime<sp/>&lt;=<sp/>previousEndTime)<sp/>endIndex<sp/>=<sp/>previousEndIndex;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(endTime<sp/>&gt;<sp/>previousEndTime)<sp/>endIndex<sp/>=<sp/>nbEvents;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/></highlight><highlight class="comment">//Store<sp/>the<sp/>information<sp/>for<sp/>the<sp/>next<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/>previousStartTime<sp/>=<sp/>startTime;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/>previousStartIndex<sp/>=<sp/>startIndex;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/></highlight><highlight class="comment">//look<sp/>up<sp/>for<sp/>the<sp/>event<sp/>ids<sp/>and<sp/>indexes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>exact<sp/>size<sp/>(&lt;=&gt;<sp/>number<sp/>of<sp/>events<sp/>is<sp/>not<sp/>known<sp/>yet,<sp/>so<sp/>the<sp/>size<sp/>of<sp/>data<sp/>is<sp/>set<sp/>to<sp/>the<sp/>maximum<sp/>possible)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/>times.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(1,(endIndex<sp/>-<sp/>startIndex<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/>ids.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(1,(endIndex<sp/>-<sp/>startIndex<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,startIndex)));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(time<sp/>&lt;=<sp/>endTime<sp/>&amp;&amp;<sp/>startIndex<sp/>&lt;=<sp/>nbEvents){</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>times(1,count<sp/>+<sp/>1)<sp/>=<sp/>static_cast&lt;dataType&gt;(floor(0.5<sp/>+(timeStamps(1,startIndex)<sp/>-<sp/>static_cast&lt;float&gt;(startTime))<sp/>*<sp/>currentSamplingRate));</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>ids(1,count<sp/>+<sp/>1)<sp/>=<sp/>eventIds[events(1,startIndex)];</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>startIndex++;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIndex<sp/>&gt;<sp/>nbEvents)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,startIndex)));</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/></highlight><highlight class="comment">//Store<sp/>the<sp/>data<sp/>in<sp/>a<sp/>array<sp/>of<sp/>the<sp/>good<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><ref refid="classArray" kindref="compound">Array&lt;dataType&gt;</ref><sp/>finalTimes;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><ref refid="classArray" kindref="compound">Array&lt;int&gt;</ref><sp/>finalIds;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/>finalTimes.setSize(1,count);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/>finalIds.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(1,count);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/>finalTimes.copySubset(times,count);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/>finalIds.<ref refid="classArray_119bcb349c3fccf22dfdbdf5076cb9a78" kindref="member">copySubset</ref>(ids,count);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/></highlight><highlight class="comment">//Store<sp/>the<sp/>information<sp/>for<sp/>the<sp/>next<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/>previousEndTime<sp/>=<sp/>endTime;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/>previousEndIndex<sp/>=<sp/>startIndex<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/></highlight><highlight class="comment">//Send<sp/>the<sp/>information<sp/>to<sp/>the<sp/>receiver.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/>emit<sp/><ref refid="classEventsProvider_1e48e4f307cc9fbbb278b1c776f897a17" kindref="member">dataReady</ref>(finalTimes,finalIds,initiator,name);</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEventsProvider_13c5819196ba81514cdf34eec143ee34e" kindref="member">EventsProvider::requestNextEventData</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>startTime,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timeFrame,QValueList&lt;int&gt;<sp/>selectedIds,QObject*<sp/>initiator){<sp/><sp/></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>initialStartTime<sp/>=<sp/>startTime;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/></highlight><highlight class="comment">//Compute<sp/>the<sp/>start<sp/>time<sp/>for<sp/>the<sp/>event<sp/>look<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/>startTime<sp/>=<sp/>initialStartTime<sp/>+<sp/>static_cast&lt;long&gt;(timeFrame<sp/>*<sp/>eventPosition);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/></highlight><highlight class="comment">//first<sp/>look<sp/>up<sp/>for<sp/>the<sp/>index<sp/>corresponding<sp/>to<sp/>the<sp/>startTime<sp/>and<sp/>then<sp/>for<sp/>the<sp/>first<sp/>valid<sp/>event<sp/>(contained<sp/>in<sp/>selectedIds)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/></highlight><highlight class="comment">//after<sp/>that<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><ref refid="classArray" kindref="compound">Array&lt;dataType&gt;</ref><sp/>times;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><ref refid="classArray" kindref="compound">Array&lt;int&gt;</ref><sp/>ids;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>&gt;<sp/>fileMaxTime){</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Send<sp/>the<sp/>information<sp/>to<sp/>the<sp/>receiver.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="classEventsProvider_1e48e4f307cc9fbbb278b1c776f897a17" kindref="member">dataReady</ref>(times,ids,initiator,name);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>startIndex<sp/>=<sp/>previousStartIndex;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/></highlight><highlight class="comment">//By<sp/>default<sp/>we<sp/>will<sp/>go<sp/>up<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>endTime<sp/>=<sp/>fileMaxTime;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>endIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dicotomyBreak<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>time;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/></highlight><highlight class="comment">//Look<sp/>up<sp/>for<sp/>the<sp/>closest<sp/>starting<sp/>index<sp/>to<sp/>the<sp/>one<sp/>corresponding<sp/>to<sp/>startTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/></highlight><highlight class="comment">//Dicotomy<sp/>will<sp/>be<sp/>used<sp/>with<sp/>a<sp/>stop<sp/>at<sp/>dicotomyBreak.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((startTime<sp/>!=<sp/>previousStartTime)<sp/>&amp;&amp;<sp/>(startTime<sp/>!=<sp/>previousEndTime)){</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/>startIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>&lt;<sp/>previousStartTime){</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/>startIndex<sp/>=<sp/>static_cast&lt;int&gt;(previousStartIndex<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIndex<sp/>&lt;=<sp/>0)<sp/>startIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>&lt;<sp/>previousEndTime<sp/>&amp;&amp;<sp/>startTime<sp/>&gt;<sp/>previousStartTime){</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/>startIndex<sp/>=<sp/>previousStartIndex<sp/>+<sp/>static_cast&lt;int&gt;((previousEndIndex<sp/>-<sp/>previousStartIndex<sp/>+<sp/>1)/<sp/>2);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>&gt;<sp/>previousEndTime){</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/>startIndex<sp/>=<sp/>previousEndIndex;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>newStartIndex<sp/>=<sp/>startIndex;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>newEndIndex<sp/>=<sp/>endIndex;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//dicotomy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((newEndIndex<sp/>-<sp/>newStartIndex<sp/>+<sp/>1)<sp/>&gt;<sp/>dicotomyBreak){</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>==<sp/>startTime)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&gt;<sp/>startTime){</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>previousStart<sp/>=<sp/>newStartIndex;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>previousStart<sp/>-<sp/>((newEndIndex<sp/>-<sp/>previousStart<sp/>+<sp/>1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&lt;=<sp/>0){</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>newEndIndex<sp/>=<sp/>previousStart;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>newStartIndex<sp/>+<sp/>((newEndIndex<sp/>-<sp/>newStartIndex<sp/>+<sp/>1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&gt;<sp/>nbEvents){</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//look<sp/>up<sp/>for<sp/>the<sp/>startIndex<sp/>index<sp/>by<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&lt;<sp/>startTime<sp/>&amp;&amp;<sp/>(newStartIndex<sp/>&lt;<sp/>nbEvents)){</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(time<sp/>&lt;<sp/>startTime){</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex++;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&gt;<sp/>nbEvents){</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&gt;<sp/>startTime<sp/>&amp;&amp;<sp/>(newStartIndex<sp/>&gt;<sp/>1)){</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(time<sp/>&gt;<sp/>startTime){</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex--;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&lt;=<sp/>0){</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&lt;<sp/>startTime){</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newStartIndex++;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>startIndex<sp/>=<sp/>newStartIndex;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/>}</highlight><highlight class="comment">//end<sp/>(startTime<sp/>!=<sp/>previousStartTime)<sp/>||<sp/>(startTime<sp/>!=<sp/>previousEndTime)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>==<sp/>previousStartTime)<sp/>startIndex<sp/>=<sp/>previousStartIndex;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>==<sp/>previousEndTime){<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,previousEndIndex)))<sp/>&lt;<sp/>startTime){</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>startIndex<sp/>=<sp/>previousEndIndex<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIndex<sp/>&gt;<sp/>nbEvents)<sp/>startIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>startIndex<sp/>=<sp/>previousEndIndex;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/></highlight><highlight class="comment">//the<sp/>found<sp/>event<sp/>will<sp/>be<sp/>placed<sp/>at<sp/>eventPosition*100<sp/>%<sp/>of<sp/>the<sp/>timeFrame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/></highlight><highlight class="comment">//check<sp/>that<sp/>the<sp/>event<sp/>corresponding<sp/>to<sp/>the<sp/>current<sp/>startIndex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/></highlight><highlight class="comment">//is<sp/>not<sp/>the<sp/>one<sp/>already<sp/>at<sp/>eventPosition,<sp/>if<sp/>so<sp/>take<sp/>the<sp/>following<sp/>start<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,startIndex)));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/>dataType<sp/>startingTime<sp/>=<sp/>QMAX(time<sp/>-<sp/>static_cast&lt;long&gt;(timeFrame<sp/>*<sp/>eventPosition),0);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((time<sp/>==<sp/>startTime)<sp/>&amp;&amp;<sp/>(startIndex<sp/>&lt;<sp/>nbEvents)){</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>startIndex++;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,startIndex)));</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/>}<sp/></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/></highlight><highlight class="comment">//look<sp/>up<sp/>for<sp/>the<sp/>first<sp/>event<sp/>contained<sp/>in<sp/>selectedIds<sp/>which<sp/>exist<sp/>after<sp/>startTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>eventIds[events(1,startIndex)];</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(selectedIds.contains(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>startIndex++;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIndex<sp/>&gt;<sp/>nbEvents){</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/>startIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/></highlight><highlight class="comment">//check<sp/>that<sp/>a<sp/>valid<sp/>index<sp/>has<sp/>been<sp/>found<sp/>(the<sp/>startIndex<sp/>corresponds<sp/>to<sp/>an<sp/>event<sp/>included<sp/>in<sp/>selectedIds)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/></highlight><highlight class="comment">//if<sp/>that<sp/>is<sp/>not<sp/>the<sp/>case<sp/>return<sp/>startTime<sp/>as<sp/>the<sp/>startingTime<sp/>=&gt;<sp/>no<sp/>change<sp/>will<sp/>be<sp/>done<sp/>in<sp/>the<sp/>view)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>eventIds[events(1,startIndex)];</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!selectedIds.contains(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><ref refid="classArray" kindref="compound">Array&lt;dataType&gt;</ref><sp/>finalTimes;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><ref refid="classArray" kindref="compound">Array&lt;int&gt;</ref><sp/>finalIds;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="classEventsProvider_1543c534fb1baf205ef89cb37df7a212a" kindref="member">nextEventDataReady</ref>(finalTimes,finalIds,initiator,name,initialStartTime);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,startIndex)));</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/></highlight><highlight class="comment">//compute<sp/>the<sp/>final<sp/>starting<sp/>time<sp/>and<sp/>the<sp/>corresponding<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/>startingTime<sp/>=<sp/>QMAX(time<sp/>-<sp/>static_cast&lt;long&gt;(timeFrame<sp/>*<sp/>eventPosition),0);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>newStartIndex<sp/>=<sp/>startIndex;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(time<sp/>&gt;<sp/>startingTime){</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>newStartIndex--;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&lt;=<sp/>0){</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&lt;<sp/>startingTime){</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex++;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/>startIndex<sp/>=<sp/>newStartIndex;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/></highlight><highlight class="comment">//Store<sp/>the<sp/>information<sp/>for<sp/>the<sp/>next<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/>previousStartTime<sp/>=<sp/>startingTime;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/>previousStartIndex<sp/>=<sp/>startIndex;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/></highlight><highlight class="comment">//look<sp/>up<sp/>for<sp/>the<sp/>event<sp/>ids<sp/>and<sp/>indexes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>exact<sp/>size<sp/>(&lt;=&gt;<sp/>number<sp/>of<sp/>events<sp/>is<sp/>not<sp/>known<sp/>yet,<sp/>so<sp/>the<sp/>size<sp/>of<sp/>data<sp/>is<sp/>set<sp/>to<sp/>the<sp/>maximum<sp/>possible)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/>times.setSize(1,(endIndex<sp/>-<sp/>startIndex<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/>ids.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(1,(endIndex<sp/>-<sp/>startIndex<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,startIndex)));</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/>endTime<sp/>=<sp/>startingTime<sp/>+<sp/>timeFrame;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(time<sp/>&lt;=<sp/>endTime<sp/>&amp;&amp;<sp/>startIndex<sp/>&lt;=<sp/>nbEvents){</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>times(1,count<sp/>+<sp/>1)<sp/>=<sp/>static_cast&lt;dataType&gt;(floor(0.5<sp/>+(time<sp/>-<sp/>startingTime)<sp/>*<sp/>currentSamplingRate));</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>ids(1,count<sp/>+<sp/>1)<sp/>=<sp/>eventIds[events(1,startIndex)];</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>startIndex++;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIndex<sp/>&gt;<sp/>nbEvents)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,startIndex)));</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/></highlight><highlight class="comment">//Store<sp/>the<sp/>data<sp/>in<sp/>a<sp/>array<sp/>of<sp/>the<sp/>good<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><ref refid="classArray" kindref="compound">Array&lt;dataType&gt;</ref><sp/>finalTimes;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><ref refid="classArray" kindref="compound">Array&lt;int&gt;</ref><sp/>finalIds;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/>finalTimes.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(1,count);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/>finalIds.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(1,count);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/>finalTimes.copySubset(times,count);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/>finalIds.<ref refid="classArray_119bcb349c3fccf22dfdbdf5076cb9a78" kindref="member">copySubset</ref>(ids,count);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/></highlight><highlight class="comment">//Store<sp/>the<sp/>information<sp/>for<sp/>the<sp/>next<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/>previousEndTime<sp/>=<sp/>endTime;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/>previousEndIndex<sp/>=<sp/>startIndex<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/></highlight><highlight class="comment">//Send<sp/>the<sp/>information<sp/>to<sp/>the<sp/>receiver.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/>emit<sp/><ref refid="classEventsProvider_1543c534fb1baf205ef89cb37df7a212a" kindref="member">nextEventDataReady</ref>(finalTimes,finalIds,initiator,name,startingTime);<sp/></highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEventsProvider_1e0c949e211c42562429ca95b9a260499" kindref="member">EventsProvider::requestPreviousEventData</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>startTime,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timeFrame,QValueList&lt;int&gt;<sp/>selectedIds,QObject*<sp/>initiator){</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>initialStartTime<sp/>=<sp/>startTime;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/></highlight><highlight class="comment">//Compute<sp/>the<sp/>start<sp/>time<sp/>for<sp/>the<sp/>event<sp/>look<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/>startTime<sp/>=<sp/>initialStartTime<sp/>+<sp/>static_cast&lt;long&gt;(timeFrame<sp/>*<sp/>eventPosition);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="comment">//first<sp/>look<sp/>up<sp/>for<sp/>the<sp/>index<sp/>corresponding<sp/>to<sp/>the<sp/>startTime<sp/>and<sp/>then<sp/>for<sp/>the<sp/>first<sp/>valid<sp/>event<sp/>(contained<sp/>in<sp/>selectedIds)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="comment">//before<sp/>that<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">//first<sp/>look<sp/>up<sp/>for<sp/>the<sp/>index<sp/>corresponding<sp/>to<sp/>the<sp/>startTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><ref refid="classArray" kindref="compound">Array&lt;dataType&gt;</ref><sp/>times;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><ref refid="classArray" kindref="compound">Array&lt;int&gt;</ref><sp/>ids;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>startIndex<sp/>=<sp/>previousStartIndex;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/></highlight><highlight class="comment">//By<sp/>default<sp/>we<sp/>will<sp/>go<sp/>up<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>endTime<sp/>=<sp/>fileMaxTime;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>endIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dicotomyBreak<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>time;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/></highlight><highlight class="comment">//Look<sp/>up<sp/>for<sp/>the<sp/>closest<sp/>starting<sp/>index<sp/>to<sp/>the<sp/>one<sp/>corresponding<sp/>to<sp/>startTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/></highlight><highlight class="comment">//Dicotomy<sp/>will<sp/>be<sp/>used<sp/>with<sp/>a<sp/>stop<sp/>at<sp/>dicotomyBreak.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((startTime<sp/>!=<sp/>previousStartTime)<sp/>&amp;&amp;<sp/>(startTime<sp/>!=<sp/>previousEndTime)){</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/>startIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>&lt;<sp/>previousStartTime){</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/>startIndex<sp/>=<sp/>static_cast&lt;int&gt;(previousStartIndex<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIndex<sp/>&lt;=<sp/>0)<sp/>startIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>&lt;<sp/>previousEndTime<sp/>&amp;&amp;<sp/>startTime<sp/>&gt;<sp/>previousStartTime){</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/>startIndex<sp/>=<sp/>previousStartIndex<sp/>+<sp/>static_cast&lt;int&gt;((previousEndIndex<sp/>-<sp/>previousStartIndex<sp/>+<sp/>1)/<sp/>2);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>&gt;<sp/>previousEndTime){</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/>startIndex<sp/>=<sp/>previousEndIndex;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>newStartIndex<sp/>=<sp/>startIndex;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>newEndIndex<sp/>=<sp/>endIndex;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//dicotomy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((newEndIndex<sp/>-<sp/>newStartIndex<sp/>+<sp/>1)<sp/>&gt;<sp/>dicotomyBreak){</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>==<sp/>startTime)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&gt;<sp/>startTime){</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>previousStart<sp/>=<sp/>newStartIndex;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>previousStart<sp/>-<sp/>((newEndIndex<sp/>-<sp/>previousStart<sp/>+<sp/>1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&lt;=<sp/>0){</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>newEndIndex<sp/>=<sp/>previousStart;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>newStartIndex<sp/>+<sp/>((newEndIndex<sp/>-<sp/>newStartIndex<sp/>+<sp/>1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&gt;<sp/>nbEvents){</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//look<sp/>up<sp/>for<sp/>the<sp/>startIndex<sp/>index<sp/>by<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&lt;<sp/>startTime<sp/>&amp;&amp;<sp/>(newStartIndex<sp/>&lt;<sp/>nbEvents)){</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(time<sp/>&lt;<sp/>startTime){</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex++;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&gt;<sp/>nbEvents){</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&gt;<sp/>startTime){</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newStartIndex--;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&gt;<sp/>startTime<sp/>&amp;&amp;<sp/>(newStartIndex<sp/>&gt;<sp/>1)){</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(time<sp/>&gt;<sp/>startTime){</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex--;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&lt;=<sp/>0){</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&lt;<sp/>startTime)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>startIndex<sp/>=<sp/>newStartIndex;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/>}</highlight><highlight class="comment">//end<sp/>(startTime<sp/>!=<sp/>previousStartTime)<sp/>||<sp/>(startTime<sp/>!=<sp/>previousEndTime)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>==<sp/>previousStartTime)<sp/>startIndex<sp/>=<sp/>previousStartIndex;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>==<sp/>previousEndTime){</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,previousEndIndex)))<sp/>&lt;<sp/>startTime){</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>startIndex<sp/>=<sp/>previousEndIndex<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIndex<sp/>&gt;<sp/>nbEvents)<sp/>startIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>startIndex<sp/>=<sp/>previousEndIndex;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/></highlight><highlight class="comment">//look<sp/>up<sp/>for<sp/>the<sp/>first<sp/>event<sp/>contained<sp/>in<sp/>selectedIds<sp/>which<sp/>exist<sp/>before<sp/>startTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/></highlight><highlight class="comment">//the<sp/>found<sp/>event<sp/>will<sp/>be<sp/>placed<sp/>at<sp/>eventPosition*100<sp/>%<sp/>of<sp/>the<sp/>timeFrame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/></highlight><highlight class="comment">//check<sp/>that<sp/>the<sp/>event<sp/>corresponding<sp/>to<sp/>the<sp/>startIndex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/></highlight><highlight class="comment">//is<sp/>not<sp/>the<sp/>one<sp/>already<sp/>at<sp/>eventPosition,<sp/>if<sp/>so<sp/>take<sp/>the<sp/>previous<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,startIndex)));</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/>dataType<sp/>startingTime<sp/>=<sp/>QMAX(time<sp/>-<sp/>static_cast&lt;long&gt;(timeFrame<sp/>*<sp/>eventPosition),0);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((time<sp/>==<sp/>startTime)<sp/>&amp;&amp;<sp/>(startIndex<sp/>&gt;<sp/>1)){</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>startIndex--;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,startIndex)));<sp/></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/>}<sp/></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/></highlight><highlight class="comment">//now,<sp/>look<sp/>up<sp/>for<sp/>the<sp/>first<sp/>event<sp/>contained<sp/>in<sp/>selectedIds<sp/>which<sp/>exist<sp/>before<sp/>endTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>eventIds[events(1,startIndex)];</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(selectedIds.contains(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>startIndex--;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIndex<sp/>&lt;=<sp/>0){</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/>startIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/></highlight><highlight class="comment">//check<sp/>that<sp/>a<sp/>valid<sp/>index<sp/>has<sp/>been<sp/>found:<sp/>the<sp/>startIndex<sp/>corresponds<sp/>to<sp/>an<sp/>event<sp/>included<sp/>in<sp/>selectedIds</highlight></codeline>
<codeline lineno="732"><highlight class="comment"></highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//if<sp/>that<sp/>is<sp/>not<sp/>the<sp/>case<sp/>return<sp/>startTime<sp/>as<sp/>the<sp/>startingTime<sp/>=&gt;<sp/>no<sp/>change<sp/>will<sp/>be<sp/>done<sp/>in<sp/>the<sp/>view)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>eventIds[events(1,startIndex)];</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,startIndex)));</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!selectedIds.contains(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>||<sp/>time<sp/>&gt;<sp/>startTime){</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><ref refid="classArray" kindref="compound">Array&lt;dataType&gt;</ref><sp/>finalTimes;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><ref refid="classArray" kindref="compound">Array&lt;int&gt;</ref><sp/>finalIds;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="classEventsProvider_1ce6a554d8f1d5c68dca9487d47f497a8" kindref="member">previousEventDataReady</ref>(finalTimes,finalIds,initiator,name,initialStartTime);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/></highlight><highlight class="comment">//compute<sp/>the<sp/>final<sp/>starting<sp/>time<sp/>and<sp/>the<sp/>corresponding<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/>startingTime<sp/>=<sp/>QMAX(time<sp/>-<sp/>static_cast&lt;long&gt;(timeFrame<sp/>*<sp/>eventPosition),0);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>newStartIndex<sp/>=<sp/>startIndex;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(time<sp/>&gt;<sp/>startingTime){</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>newStartIndex--;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&lt;=<sp/>0){</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&lt;<sp/>startingTime){</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex++;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/>startIndex<sp/>=<sp/>newStartIndex;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/></highlight><highlight class="comment">//Store<sp/>the<sp/>information<sp/>for<sp/>the<sp/>next<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/>previousStartTime<sp/>=<sp/>startingTime;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/>previousStartIndex<sp/>=<sp/>startIndex;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/></highlight><highlight class="comment">//look<sp/>up<sp/>for<sp/>the<sp/>event<sp/>ids<sp/>and<sp/>indexes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>exact<sp/>size<sp/>(&lt;=&gt;<sp/>number<sp/>of<sp/>events<sp/>is<sp/>not<sp/>known<sp/>yet,<sp/>so<sp/>the<sp/>size<sp/>of<sp/>data<sp/>is<sp/>set<sp/>to<sp/>the<sp/>maximum<sp/>possible)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/>times.setSize(1,(endIndex<sp/>-<sp/>startIndex<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/>ids.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(1,(endIndex<sp/>-<sp/>startIndex<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,startIndex)));</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/>endTime<sp/>=<sp/>startingTime<sp/>+<sp/>timeFrame;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(time<sp/>&lt;=<sp/>endTime<sp/>&amp;&amp;<sp/>startIndex<sp/>&lt;=<sp/>nbEvents){</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>times(1,count<sp/>+<sp/>1)<sp/>=<sp/>static_cast&lt;dataType&gt;(floor(0.5<sp/>+(time<sp/>-<sp/>startingTime)<sp/>*<sp/>currentSamplingRate));</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>ids(1,count<sp/>+<sp/>1)<sp/>=<sp/>eventIds[events(1,startIndex)];</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>startIndex++;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIndex<sp/>&gt;<sp/>nbEvents)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,startIndex)));</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/></highlight><highlight class="comment">//Store<sp/>the<sp/>data<sp/>in<sp/>a<sp/>array<sp/>of<sp/>the<sp/>good<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><ref refid="classArray" kindref="compound">Array&lt;dataType&gt;</ref><sp/>finalTimes;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><ref refid="classArray" kindref="compound">Array&lt;int&gt;</ref><sp/>finalIds;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/>finalTimes.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(1,count);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/>finalIds.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(1,count);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/>finalTimes.copySubset(times,count);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/>finalIds.<ref refid="classArray_119bcb349c3fccf22dfdbdf5076cb9a78" kindref="member">copySubset</ref>(ids,count);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/></highlight><highlight class="comment">//Store<sp/>the<sp/>information<sp/>for<sp/>the<sp/>next<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/>previousEndTime<sp/>=<sp/>endTime;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/>previousEndIndex<sp/>=<sp/>startIndex<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/></highlight><highlight class="comment">//Send<sp/>the<sp/>information<sp/>to<sp/>the<sp/>receiver.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/>emit<sp/><ref refid="classEventsProvider_1ce6a554d8f1d5c68dca9487d47f497a8" kindref="member">previousEventDataReady</ref>(finalTimes,finalIds,initiator,name,startingTime);<sp/><sp/></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEventsProvider_1467a0837455cab20b9ffe80aefed2495" kindref="member">EventsProvider::modifiedEvent</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selectedEventId,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newTime){</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>modified<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timeIndex<sp/>=<sp/>findIndex(time,selectedEventId);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>newTimeIndex<sp/>=<sp/>findIndex(newTime,selectedEventId);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><ref refid="classEventDescription" kindref="compound">EventDescription</ref><sp/>selectedEvent<sp/>=<sp/>idsDescriptions[selectedEventId];</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>the<sp/>redo<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>eventsRedo.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/>timeStampsRedo.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>eventDescriptionCounterRedo.clear();</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Prepare<sp/>the<sp/>undo<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>eventsUndo<sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>timeStampsUndo<sp/>=<sp/>timeStamps;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/>eventDescriptionCounterUndo<sp/>=<sp/>eventDescriptionCounter;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeIndex<sp/>==<sp/>newTimeIndex){</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/>events(1,timeIndex)<sp/>=<sp/>selectedEvent;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/>timeStamps(1,timeIndex)<sp/>=<sp/>newTime;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>fileMaxTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/>fileMaxTime<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,nbEvents)));</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Moved<sp/>forward</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newTime<sp/>&gt;<sp/>time){</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>timeIndex;<sp/>i<sp/>&lt;<sp/>(newTimeIndex<sp/>-<sp/>1);++i){</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>events(1,i)<sp/>=<sp/>events(1,i+1);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStamps(1,i)<sp/>=<sp/>timeStamps(1,i+1);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newTime<sp/>&gt;<sp/>timeStamps(1,newTimeIndex)){</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>events(1,newTimeIndex<sp/>-<sp/>1)<sp/>=<sp/>events(1,newTimeIndex);<sp/></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStamps(1,newTimeIndex<sp/>-<sp/>1)<sp/>=<sp/>timeStamps(1,newTimeIndex);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>events(1,newTimeIndex)<sp/>=<sp/>selectedEvent;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStamps(1,newTimeIndex)<sp/>=<sp/>newTime;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>events(1,newTimeIndex<sp/>-<sp/>1)<sp/>=<sp/>selectedEvent;<sp/><sp/></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStamps(1,newTimeIndex<sp/>-<sp/>1)<sp/>=<sp/>newTime;<sp/></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>fileMaxTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/>fileMaxTime<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,nbEvents)));</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Moved<sp/>backward</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newTime<sp/>&lt;<sp/>time){</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>timeIndex;<sp/>i<sp/>&gt;<sp/>(newTimeIndex<sp/>+<sp/>1);--i){</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>events(1,i)<sp/>=<sp/>events(1,i-1);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStamps(1,i)<sp/>=<sp/>timeStamps(1,i-1);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newTime<sp/>&lt;<sp/>timeStamps(1,newTimeIndex)){</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>events(1,newTimeIndex<sp/>+<sp/>1)<sp/>=<sp/>events(1,newTimeIndex);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStamps(1,newTimeIndex<sp/>+<sp/>1)<sp/>=<sp/>timeStamps(1,newTimeIndex);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>events(1,newTimeIndex)<sp/>=<sp/>selectedEvent;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStamps(1,newTimeIndex)<sp/>=<sp/>newTime;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>events(1,newTimeIndex<sp/>+<sp/>1)<sp/>=<sp/>selectedEvent;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStamps(1,newTimeIndex<sp/>+<sp/>1)<sp/>=<sp/>newTime;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>fileMaxTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/>fileMaxTime<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,nbEvents)));</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/>previousStartTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/>previousStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/>previousEndIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/>previousEndTime<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,nbEvents)));</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>EventsProvider::findIndex(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>eventTime,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eventId){<sp/><sp/></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eventTime<sp/>&gt;<sp/>fileMaxTime)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nbEvents;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>startTime<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>eventTime));</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/></highlight><highlight class="comment">//By<sp/>default<sp/>we<sp/>will<sp/>go<sp/>up<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>endIndex<sp/>=<sp/>nbEvents;<sp/><sp/></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>startIndex<sp/>=<sp/>previousStartIndex;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>dicotomyBreak<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>time;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/></highlight><highlight class="comment">//Look<sp/>up<sp/>for<sp/>the<sp/>closest<sp/>starting<sp/>index<sp/>to<sp/>the<sp/>one<sp/>corresponding<sp/>to<sp/>startTime</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/></highlight><highlight class="comment">//Dicotomy<sp/>will<sp/>be<sp/>used<sp/>with<sp/>a<sp/>stop<sp/>at<sp/>dicotomyBreak.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((startTime<sp/>!=<sp/>previousStartTime)<sp/>&amp;&amp;<sp/>(startTime<sp/>!=<sp/>previousEndTime)){</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>==<sp/>0)<sp/>startIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>&lt;<sp/>previousStartTime){</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/>startIndex<sp/>=<sp/>static_cast&lt;int&gt;(previousStartIndex<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIndex<sp/>&lt;=<sp/>0)<sp/>startIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>&lt;<sp/>previousEndTime<sp/>&amp;&amp;<sp/>startTime<sp/>&gt;<sp/>previousStartTime){</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/>startIndex<sp/>=<sp/>previousStartIndex<sp/>+<sp/>static_cast&lt;int&gt;((previousEndIndex<sp/>-<sp/>previousStartIndex<sp/>+<sp/>1)/<sp/>2);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>&gt;<sp/>previousEndTime)startIndex<sp/>=<sp/>previousEndIndex;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>newStartIndex<sp/>=<sp/>startIndex;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>newEndIndex<sp/>=<sp/>endIndex;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//dicotomy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((newEndIndex<sp/>-<sp/>newStartIndex<sp/>+<sp/>1)<sp/>&gt;<sp/>dicotomyBreak){</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>==<sp/>startTime)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&gt;<sp/>startTime){</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>previousStart<sp/>=<sp/>newStartIndex;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>previousStart<sp/>-<sp/>((newEndIndex<sp/>-<sp/>previousStart<sp/>+<sp/>1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&lt;=<sp/>0){</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>newEndIndex<sp/>=<sp/>previousStart;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>newStartIndex<sp/>+<sp/>((newEndIndex<sp/>-<sp/>newStartIndex<sp/>+<sp/>1)<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&gt;<sp/>nbEvents){</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//look<sp/>up<sp/>for<sp/>the<sp/>startIndex<sp/>index<sp/>by<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&lt;<sp/>startTime<sp/>&amp;&amp;<sp/>(newStartIndex<sp/>&lt;<sp/>(nbEvents))){</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(time<sp/>&lt;<sp/>startTime){</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex++;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&gt;<sp/>nbEvents){</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&gt;<sp/>startTime<sp/>&amp;&amp;<sp/>(newStartIndex<sp/>&gt;<sp/>1)){</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(time<sp/>&gt;<sp/>startTime){</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>newStartIndex--;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newStartIndex<sp/>&lt;=<sp/>0){</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>newStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&lt;<sp/>startTime){</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newStartIndex++;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,newStartIndex)));</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/>startIndex<sp/>=<sp/>newStartIndex;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/>}</highlight><highlight class="comment">//end<sp/>(startTime<sp/>!=<sp/>previousStartTime)<sp/>||<sp/>(startTime<sp/>!=<sp/>previousEndTime)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>==<sp/>previousStartTime)<sp/>startIndex<sp/>=<sp/>previousStartIndex;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startTime<sp/>==<sp/>previousEndTime){</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,previousEndIndex)))<sp/>&lt;<sp/>startTime){</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>startIndex<sp/>=<sp/>previousEndIndex<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(startIndex<sp/>&gt;<sp/>nbEvents)<sp/>startIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>startIndex<sp/>=<sp/>previousEndIndex;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eventId<sp/>!=<sp/>-1){</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>eventIds[events(1,startIndex)];</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>!=<sp/>eventId){</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff1<sp/>=<sp/>fabs(timeStamps(1,startIndex)<sp/>-<sp/>timeStamps(1,startIndex<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff2<sp/>=<sp/>fabs(timeStamps(1,startIndex<sp/>+<sp/>1)<sp/>-<sp/>timeStamps(1,startIndex));</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(diff1<sp/>&lt;<sp/>diff2<sp/>&amp;&amp;<sp/>eventIds[events(1,startIndex<sp/>-<sp/>1)]<sp/>==<sp/>eventId)<sp/>startIndex--;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(diff1<sp/>&lt;<sp/>diff2<sp/>&amp;&amp;<sp/>eventIds[events(1,startIndex<sp/>-<sp/>1)]<sp/>!=<sp/>eventId<sp/>&amp;&amp;<sp/>eventIds[events(1,startIndex<sp/>+<sp/>1)]<sp/>==<sp/>eventId<sp/>)<sp/>startIndex++;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(diff2<sp/>&lt;<sp/>diff1<sp/>&amp;&amp;<sp/>eventIds[events(1,startIndex<sp/>+<sp/>1)]<sp/>==<sp/>eventId)<sp/>startIndex++;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>startIndex;</highlight></codeline>
<codeline lineno="985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEventsProvider_133b3b25df10d7f1cd1056e4a5cd89606" kindref="member">EventsProvider::undo</ref>(){</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/>modified<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight><highlight class="comment">//in<sp/>case<sp/>the<sp/>user<sp/>saved<sp/>and<sp/>then<sp/>undo,<sp/>this<sp/>will<sp/>allowed<sp/>to<sp/>save<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/>eventsRedo<sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/>timeStampsRedo<sp/>=<sp/>timeStamps;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/>eventDescriptionCounterRedo<sp/>=<sp/>eventDescriptionCounter;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/>events<sp/>=<sp/>eventsUndo;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/>timeStamps<sp/>=<sp/>timeStampsUndo;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/>eventDescriptionCounter<sp/>=<sp/>eventDescriptionCounterUndo;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/></highlight><highlight class="comment">//update<sp/>the<sp/>number<sp/>of<sp/>events<sp/>in<sp/>case<sp/>some<sp/>have<sp/>been<sp/>removed<sp/>or<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/>nbEvents<sp/>=<sp/>events.<ref refid="classArray_1bf8d9f719e657139795c7804422c70fc" kindref="member">nbOfColumns</ref>();</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/></highlight><highlight class="comment">//Clear<sp/>the<sp/>undo<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/>eventsUndo.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/>timeStampsUndo.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/>eventDescriptionCounterUndo.clear();</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/>previousStartTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/>previousStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbEvents<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/>previousEndIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/>previousEndTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/>fileMaxTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/>previousEndIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>previousEndTime<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,nbEvents)));</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/>fileMaxTime<sp/>=<sp/>previousEndTime;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eventDescriptionCounter.count()<sp/>&lt;<sp/>eventDescriptionCounterRedo.count()){</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>QMap&lt;EventDescription,int&gt;::Iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>eventDescriptionCounterRedo.begin();<sp/>iterator<sp/>!=<sp/>eventDescriptionCounterRedo.end();<sp/>++iterator){</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!eventDescriptionCounter.contains(iterator.key())){</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>removeEventDescription(iterator.key());</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eventDescriptionCounter.count()<sp/>&gt;<sp/>eventDescriptionCounterRedo.count()){</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/>QMap&lt;EventDescription,int&gt;::Iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>eventDescriptionCounter.begin();<sp/>iterator<sp/>!=<sp/>eventDescriptionCounter.end();<sp/>++iterator){</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!eventDescriptionCounterRedo.contains(iterator.key())){</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>addEventDescription(iterator.key());</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEventsProvider_1699d0aa9a45ee2f51fb2d955fcfd52ce" kindref="member">EventsProvider::redo</ref>(){</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/>modified<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight><highlight class="comment">//in<sp/>case<sp/>the<sp/>user<sp/>saved<sp/>and<sp/>then<sp/>undo,<sp/>this<sp/>will<sp/>allowed<sp/>to<sp/>save<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/>eventsUndo<sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/>timeStampsUndo<sp/>=<sp/>timeStamps;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/>eventDescriptionCounterUndo<sp/>=<sp/>eventDescriptionCounter;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/>events<sp/>=<sp/>eventsRedo;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/>timeStamps<sp/>=<sp/>timeStampsRedo;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/>eventDescriptionCounter<sp/>=<sp/>eventDescriptionCounterRedo;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/></highlight><highlight class="comment">//update<sp/>the<sp/>number<sp/>of<sp/>events<sp/>in<sp/>case<sp/>some<sp/>have<sp/>been<sp/>removed<sp/>or<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/>nbEvents<sp/>=<sp/>events.<ref refid="classArray_1bf8d9f719e657139795c7804422c70fc" kindref="member">nbOfColumns</ref>();</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/></highlight><highlight class="comment">//Clear<sp/>the<sp/>redo<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/>eventsRedo.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/>timeStampsRedo.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/>eventDescriptionCounterRedo.clear();</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/>previousStartTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/>previousStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbEvents<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/>previousEndIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/>previousEndTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/>fileMaxTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/>previousEndIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>previousEndTime<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,nbEvents)));</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/>fileMaxTime<sp/>=<sp/>previousEndTime;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eventDescriptionCounter.count()<sp/>&lt;<sp/>eventDescriptionCounterUndo.count()){</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>QMap&lt;EventDescription,int&gt;::Iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>eventDescriptionCounterUndo.begin();<sp/>iterator<sp/>!=<sp/>eventDescriptionCounterUndo.end();<sp/>++iterator){</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!eventDescriptionCounter.contains(iterator.key())){</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>removeEventDescription(iterator.key());</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eventDescriptionCounter.count()<sp/>&gt;<sp/>eventDescriptionCounterUndo.count()){</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/>QMap&lt;EventDescription,int&gt;::Iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>eventDescriptionCounter.begin();<sp/>iterator<sp/>!=<sp/>eventDescriptionCounter.end();<sp/>++iterator){</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!eventDescriptionCounterUndo.contains(iterator.key())){</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>addEventDescription(iterator.key());</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="1092"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEventsProvider_13c2a61d9efc69320fc9aa7e5b42e6a72" kindref="member">EventsProvider::clearUndoRedoData</ref>(){</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>the<sp/>redo<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>eventsRedo.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/>timeStampsRedo.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/>eventDescriptionCounterRedo.clear();</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>the<sp/>undo<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/>eventsUndo.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/>timeStampsUndo.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/>eventDescriptionCounterUndo.clear();</highlight></codeline>
<codeline lineno="1104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classEventsProvider_16f55d7200cc8ab7b038123309805fbb0" kindref="member">EventsProvider::save</ref>(QFile*<sp/>eventFile){</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/>QTextStream<sp/>fileStream(eventFile);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/>fileStream.precision(12);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;i&lt;=nbEvents;++i)<sp/>fileStream&lt;&lt;timeStamps(1,i)&lt;&lt;</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">&lt;&lt;events(1,i)&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>eventFile-&gt;status();<sp/></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(status<sp/>==<sp/>IO_Ok)<sp/>modified<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEventsProvider_19653a7e52887010e832669bc532fd485" kindref="member">EventsProvider::removeEvent</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selectedEventId,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time){</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/>modified<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timeIndex;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbEvents<sp/>!=<sp/>1)<sp/>timeIndex<sp/>=<sp/>findIndex(time,selectedEventId);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/></highlight><highlight class="comment">//Clear<sp/>the<sp/>redo<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/>eventsRedo.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/>timeStampsRedo.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/>eventDescriptionCounterRedo.clear();</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/></highlight><highlight class="comment">//Prepare<sp/>the<sp/>undo<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/>eventsUndo<sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/>timeStampsUndo<sp/>=<sp/>timeStamps;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/>eventDescriptionCounterUndo<sp/>=<sp/>eventDescriptionCounter;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><ref refid="classEventDescription" kindref="compound">EventDescription</ref><sp/>description<sp/>=<sp/>idsDescriptions[selectedEventId];</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/>eventDescriptionCounter[description]<sp/>=<sp/>eventDescriptionCounter[description]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eventDescriptionCounter[description]<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>removeEventDescription(description);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/>eventDescriptionCounter.remove(description);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbEvents<sp/>!=<sp/>1){</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/>events.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(1,nbEvents<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/>timeStamps.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(1,nbEvents<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/>events.<ref refid="classpArray_14617ff68b547a432a930314d4ab7042f" kindref="member">copySubset</ref>(eventsUndo,1,(timeIndex<sp/>-<sp/>1),1);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/>events.<ref refid="classpArray_14617ff68b547a432a930314d4ab7042f" kindref="member">copySubset</ref>(eventsUndo,(timeIndex<sp/>+<sp/>1),nbEvents,timeIndex);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/>timeStamps.<ref refid="classArray_119bcb349c3fccf22dfdbdf5076cb9a78" kindref="member">copySubset</ref>(timeStampsUndo,1,(timeIndex<sp/>-<sp/>1),1);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/>timeStamps.<ref refid="classArray_119bcb349c3fccf22dfdbdf5076cb9a78" kindref="member">copySubset</ref>(timeStampsUndo,(timeIndex<sp/>+<sp/>1),nbEvents,timeIndex);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/>nbEvents--;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/>previousStartTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/>previousStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/>previousEndIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/>previousEndTime<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,nbEvents)));</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/>fileMaxTime<sp/>=<sp/>previousEndTime;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/>events.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/>timeStamps.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/>nbEvents<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/>previousStartTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/>previousStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/>previousEndIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/>previousEndTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>fileMaxTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEventsProvider_1da7ddce431ab341fd442edd8a3656d49" kindref="member">EventsProvider::addEvent</ref>(QString<sp/>eventDescriptionToAdd,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time){</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/>modified<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>the<sp/>redo<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/>eventsRedo.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/>timeStampsRedo.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/>eventDescriptionCounterRedo.clear();</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Prepare<sp/>the<sp/>undo<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/>eventsUndo<sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/>timeStampsUndo<sp/>=<sp/>timeStamps;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>eventDescriptionCounterUndo<sp/>=<sp/>eventDescriptionCounter;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbEvents<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timeIndex<sp/>=<sp/>findIndex(time);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>timeAtTimeIndex<sp/>=<sp/>timeStamps(1,timeIndex);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/>events.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(1,nbEvents<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/>timeStamps.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(1,nbEvents<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&lt;=<sp/>timeAtTimeIndex){</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>events.<ref refid="classpArray_14617ff68b547a432a930314d4ab7042f" kindref="member">copySubset</ref>(eventsUndo,1,(timeIndex<sp/>-<sp/>1),1);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>events(1,timeIndex)<sp/>=<sp/><ref refid="classEventDescription" kindref="compound">EventDescription</ref>(eventDescriptionToAdd);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>events.<ref refid="classpArray_14617ff68b547a432a930314d4ab7042f" kindref="member">copySubset</ref>(eventsUndo,timeIndex,nbEvents,timeIndex<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStamps.<ref refid="classArray_119bcb349c3fccf22dfdbdf5076cb9a78" kindref="member">copySubset</ref>(timeStampsUndo,1,(timeIndex<sp/>-<sp/>1),1);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStamps(1,timeIndex)<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStamps.<ref refid="classArray_119bcb349c3fccf22dfdbdf5076cb9a78" kindref="member">copySubset</ref>(timeStampsUndo,timeIndex,nbEvents,timeIndex<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>events.<ref refid="classpArray_14617ff68b547a432a930314d4ab7042f" kindref="member">copySubset</ref>(eventsUndo,1,timeIndex,1);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>events(1,timeIndex<sp/>+<sp/>1)<sp/>=<sp/><ref refid="classEventDescription" kindref="compound">EventDescription</ref>(eventDescriptionToAdd);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/>events.<ref refid="classpArray_14617ff68b547a432a930314d4ab7042f" kindref="member">copySubset</ref>(eventsUndo,timeIndex<sp/>+<sp/>1,nbEvents,timeIndex<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStamps.<ref refid="classArray_119bcb349c3fccf22dfdbdf5076cb9a78" kindref="member">copySubset</ref>(timeStampsUndo,1,timeIndex,1);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStamps(1,timeIndex<sp/>+<sp/>1)<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>timeStamps.<ref refid="classArray_119bcb349c3fccf22dfdbdf5076cb9a78" kindref="member">copySubset</ref>(timeStampsUndo,timeIndex<sp/>+<sp/>1,nbEvents,timeIndex<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fileMaxTime<sp/>&lt;<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>time)))<sp/>fileMaxTime<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>time));</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//New<sp/>(empty)<sp/>event<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/>events.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(1,1);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/>timeStamps.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(1,1);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/>events(1,1)<sp/>=<sp/><ref refid="classEventDescription" kindref="compound">EventDescription</ref>(eventDescriptionToAdd);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/>timeStamps(1,1)<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/>fileMaxTime<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>time));</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/>nbEvents++;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>previousStartTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>previousStartIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/>previousEndIndex<sp/>=<sp/>nbEvents;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/>previousEndTime<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>timeStamps(1,nbEvents)));</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>the<sp/>added<sp/>event<sp/>description<sp/>is<sp/>a<sp/>new<sp/>event<sp/>description.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>newDescription<sp/>=<sp/>!eventIds.contains(<ref refid="classEventDescription" kindref="compound">EventDescription</ref>(eventDescriptionToAdd));<sp/><sp/></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/></highlight><highlight class="comment">//Add<sp/>the<sp/>new<sp/>description<sp/>to<sp/>the<sp/>list<sp/>of<sp/>existing<sp/>ones<sp/>and<sp/>compute<sp/>the<sp/>new<sp/>descriptionLength</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newDescription)<sp/>addEventDescription(eventDescriptionToAdd);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>eventDescriptionCounter[eventDescriptionToAdd]<sp/>=<sp/>eventDescriptionCounter[eventDescriptionToAdd]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EventsProvider::addEventDescription(QString<sp/>eventDescriptionToAdd){</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/>QMap&lt;int,int&gt;<sp/>oldNewEventIds;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/>QMap&lt;int,int&gt;<sp/>newOldEventIds;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/>QMap&lt;EventDescription,int&gt;<sp/>eventIdsTmp;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/></highlight><highlight class="comment">//Add<sp/>the<sp/>new<sp/>description<sp/>to<sp/>the<sp/>list<sp/>of<sp/>existing<sp/>ones<sp/>and<sp/>compute<sp/>the<sp/>new<sp/>descriptionLength</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/>idsDescriptions.clear();</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/>QValueList&lt;EventDescription&gt;<sp/>descriptions<sp/>=<sp/>eventIds.keys();</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/>descriptions.append(<ref refid="classEventDescription" kindref="compound">EventDescription</ref>(eventDescriptionToAdd));</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/>qHeapSort(descriptions);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>maxSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sumOfSquares<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;<sp/>static_cast&lt;int&gt;(descriptions.size());++i){</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><ref refid="classEventDescription" kindref="compound">EventDescription</ref><sp/>description<sp/>=<sp/>descriptions[i];</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(description<sp/>!=<sp/>eventDescriptionToAdd){</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/>oldNewEventIds.insert(eventIds[description],i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/>newOldEventIds.insert(i<sp/>+<sp/>1,eventIds[description]);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/>eventIdsTmp.insert(description,i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/>idsDescriptions.insert(i<sp/>+<sp/>1,description);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>static_cast&lt;long&gt;(description.length());</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(length<sp/>&gt;<sp/>maxSize)<sp/>maxSize<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/>sum<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/>sumOfSquares<sp/>+=<sp/>(length<sp/>*<sp/>length);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/></highlight><highlight class="comment">//Rebuild<sp/>eventIds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/>eventIds.clear();</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/>QMap&lt;EventDescription,int&gt;::Iterator<sp/>it;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>eventIdsTmp.begin();<sp/>it<sp/>!=<sp/>eventIdsTmp.end();<sp/>++it){</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/>eventIds.insert(it.key(),it.data());</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/></highlight><highlight class="comment">//Compute<sp/>the<sp/>length<sp/>to<sp/>use<sp/>to<sp/>display<sp/>the<sp/>description<sp/>of<sp/>the<sp/>events<sp/>in<sp/>the<sp/>event<sp/>palette.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>descriptionLength<sp/>=<sp/>min(mean<sp/>+<sp/>1<sp/>*<sp/>standard<sp/>deviation,<sp/>maxsize)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mean<sp/>=<sp/>sum<sp/>/<sp/>eventIds.size();</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/></highlight><highlight class="comment">//variance(X)<sp/>=<sp/>mean(X^2)<sp/>-<sp/>mean(X)^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>variance<sp/>=<sp/><sp/>(sumOfSquares<sp/>/<sp/>eventIds.size())<sp/>-<sp/>(mean<sp/>*<sp/>mean);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/></highlight><highlight class="comment">//standard<sp/>deviation<sp/>=<sp/>square<sp/>root<sp/>of<sp/>the<sp/>variance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>stdVar<sp/>=<sp/>static_cast&lt;long&gt;(sqrt(static_cast&lt;double&gt;(variance)));</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/>descriptionLength<sp/>=<sp/>static_cast&lt;int&gt;(QMIN((mean<sp/>+<sp/>stdVar),maxSize));</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/></highlight><highlight class="comment">//Be<sp/>sure<sp/>that<sp/>the<sp/>length<sp/>is<sp/>minimum<sp/>2<sp/>digits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/>descriptionLength<sp/>=<sp/>QMAX(descriptionLength,2);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/>eventDescriptionCounter.insert(eventDescriptionToAdd,1);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/>emit<sp/><ref refid="classEventsProvider_13780ad0f0a5cb7514a2903e2ef51d599" kindref="member">newEventDescriptionCreated</ref>(name,oldNewEventIds,newOldEventIds,eventDescriptionToAdd);<sp/></highlight></codeline>
<codeline lineno="1287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EventsProvider::removeEventDescription(QString<sp/>eventDescriptionToRemove){<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/>QMap&lt;int,int&gt;<sp/>oldNewEventIds;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/>QMap&lt;int,int&gt;<sp/>newOldEventIds;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/>QMap&lt;EventDescription,int&gt;<sp/>eventIdsTmp;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>removedEventId<sp/>=<sp/>eventIds[eventDescriptionToRemove];</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/></highlight><highlight class="comment">//Remove<sp/>the<sp/>description<sp/>of<sp/>the<sp/>list<sp/>of<sp/>existing<sp/>ones<sp/>and<sp/>compute<sp/>the<sp/>new<sp/>descriptionLength</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/>idsDescriptions.clear();</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/>QValueList&lt;EventDescription&gt;<sp/>descriptions<sp/>=<sp/>eventIds.keys();</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/>QValueList&lt;EventDescription&gt;<sp/>newDescriptions<sp/>=<sp/>eventIds.keys();</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/>newDescriptions.remove(<ref refid="classEventDescription" kindref="compound">EventDescription</ref>(eventDescriptionToRemove));</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/>qHeapSort(newDescriptions);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>maxSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sumOfSquares<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i&lt;<sp/>static_cast&lt;int&gt;(newDescriptions.size());++i){</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><ref refid="classEventDescription" kindref="compound">EventDescription</ref><sp/>description<sp/>=<sp/>newDescriptions[i];</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>oldNewEventIds.insert(eventIds[description],i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/>newOldEventIds.insert(i<sp/>+<sp/>1,eventIds[description]);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/>eventIdsTmp.insert(description,i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/>idsDescriptions.insert(i<sp/>+<sp/>1,description);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>static_cast&lt;long&gt;(description.length());</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(length<sp/>&gt;<sp/>maxSize)<sp/>maxSize<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/>sum<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/>sumOfSquares<sp/>+=<sp/>(length<sp/>*<sp/>length);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/></highlight><highlight class="comment">//Rebuild<sp/>eventIds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/>eventIds.clear();</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/>QMap&lt;EventDescription,int&gt;::Iterator<sp/>it;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>eventIdsTmp.begin();<sp/>it<sp/>!=<sp/>eventIdsTmp.end();<sp/>++it){</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/>eventIds.insert(it.key(),it.data());</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/></highlight><highlight class="comment">//the<sp/>default<sp/>length<sp/>is<sp/>2<sp/>digits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eventIds.size()<sp/>==<sp/>0)<sp/>descriptionLength<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Compute<sp/>the<sp/>length<sp/>to<sp/>use<sp/>to<sp/>display<sp/>the<sp/>descrption<sp/>of<sp/>the<sp/>events<sp/>in<sp/>the<sp/>event<sp/>palette.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>descriptionLength<sp/>=<sp/>min(mean<sp/>+<sp/>1<sp/>*<sp/>standard<sp/>deviation,<sp/>maxsize)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mean<sp/>=<sp/>sum<sp/>/<sp/>eventIds.size();</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//variance(X)<sp/>=<sp/>mean(X^2)<sp/>-<sp/>mean(X)^2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>variance<sp/>=<sp/><sp/>(sumOfSquares<sp/>/<sp/>eventIds.size())<sp/>-<sp/>(mean<sp/>*<sp/>mean);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//standard<sp/>deviation<sp/>=<sp/>square<sp/>root<sp/>of<sp/>the<sp/>variance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>stdVar<sp/>=<sp/>static_cast&lt;long&gt;(sqrt(static_cast&lt;double&gt;(variance)));</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>descriptionLength<sp/>=<sp/>static_cast&lt;int&gt;(QMIN((mean<sp/>+<sp/>stdVar),maxSize));</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Be<sp/>sure<sp/>that<sp/>the<sp/>length<sp/>is<sp/>minimum<sp/>2<sp/>digits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>descriptionLength<sp/>=<sp/>QMAX(descriptionLength,2);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/>emit<sp/><ref refid="classEventsProvider_1e22f5448150f167a147c16a27ef61c95" kindref="member">eventDescriptionRemoved</ref>(name,oldNewEventIds,newOldEventIds,removedEventId,eventDescriptionToRemove);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEventsProvider_1db689c023b77cb984bbc2ac07ccae257" kindref="member">EventsProvider::renameEvent</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selectedEventId,QString<sp/>newEventDescription,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time){</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/>modified<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/></highlight><highlight class="comment">//Clear<sp/>the<sp/>redo<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/>eventsRedo.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/>timeStampsRedo.<ref refid="classArray_109210c530a317d5c6d6f8006d2df55e6" kindref="member">setSize</ref>(0,0);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/>eventDescriptionCounterRedo.clear();</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/></highlight><highlight class="comment">//Prepare<sp/>the<sp/>undo<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/>eventsUndo<sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/>timeStampsUndo<sp/>=<sp/>timeStamps;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/>eventDescriptionCounterUndo<sp/>=<sp/>eventDescriptionCounter;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/></highlight><highlight class="comment">//remove<sp/>the<sp/>old<sp/>event<sp/>description</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><ref refid="classEventDescription" kindref="compound">EventDescription</ref><sp/>description<sp/>=<sp/>idsDescriptions[selectedEventId];</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/>eventDescriptionCounter[description]<sp/>=<sp/>eventDescriptionCounter[description]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eventDescriptionCounter[description]<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/>removeEventDescription(description);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/>eventDescriptionCounter.remove(description);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/></highlight><highlight class="comment">//replace<sp/>the<sp/>old<sp/>description<sp/>by<sp/>the<sp/>new<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbEvents<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timeIndex<sp/>=<sp/>findIndex(time);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/>events(1,timeIndex)<sp/>=<sp/><ref refid="classEventDescription" kindref="compound">EventDescription</ref>(newEventDescription);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/></highlight><highlight class="comment">//New<sp/>(empty)<sp/>event<sp/>file,<sp/>should<sp/>never<sp/>be<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>the<sp/>newEventDescription<sp/>is<sp/>a<sp/>new<sp/>event<sp/>description.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>newDescription<sp/>=<sp/>!eventIds.contains(<ref refid="classEventDescription" kindref="compound">EventDescription</ref>(newEventDescription));</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/></highlight><highlight class="comment">//Add<sp/>the<sp/>new<sp/>description<sp/>to<sp/>the<sp/>list<sp/>of<sp/>existing<sp/>ones<sp/>and<sp/>compute<sp/>the<sp/>new<sp/>descriptionLength</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newDescription)<sp/>addEventDescription(newEventDescription);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>eventDescriptionCounter[newEventDescription]<sp/>=<sp/>eventDescriptionCounter[newEventDescription]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="comment">//Operator<sp/>&lt;<sp/>on<sp/>EventDescription<sp/>to<sp/>sort<sp/>them<sp/>in<sp/>an<sp/>case-insensitive<sp/>maner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEventDescription" kindref="compound">EventDescription</ref>&amp;<sp/>s1,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classEventDescription" kindref="compound">EventDescription</ref>&amp;<sp/>s2){</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s1.lower()<sp/>==<sp/>s2.lower())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(static_cast&lt;QString&gt;(s1)<sp/>&lt;<sp/>static_cast&lt;QString&gt;(s2));</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(static_cast&lt;QString&gt;(s1.lower())<sp/>&lt;<sp/>static_cast&lt;QString&gt;(s2.lower()));</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/lynn/CMBN/Klusters/klusters/src/eventsprovider.cpp"/>
  </compounddef>
</doxygen>
