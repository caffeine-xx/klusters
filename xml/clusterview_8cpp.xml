<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.1">
  <compounddef id="clusterview_8cpp" kind="file">
    <compoundname>clusterview.cpp</compoundname>
    <includes refid="clusterview_8h" local="yes">clusterview.h</includes>
    <includes refid="klustersview_8h" local="yes">klustersview.h</includes>
    <includes refid="klustersdoc_8h" local="yes">klustersdoc.h</includes>
    <includes refid="data_8h" local="yes">data.h</includes>
    <includes refid="itemcolors_8h" local="yes">itemcolors.h</includes>
    <includes refid="timer_8h" local="yes">timer.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">qpaintdevice.h</includes>
    <includes local="no">qapplication.h</includes>
    <includes local="no">qcursor.h</includes>
    <includes local="no">qpaintdevicemetrics.h</includes>
    <includes local="no">kiconloader.h</includes>
    <incdepgraph>
      <node id="513">
        <label>qpaintdevicemetrics.h</label>
      </node>
      <node id="469">
        <label>baseframe.h</label>
        <link refid="baseframe_8h-source"/>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="462" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
      </node>
      <node id="459">
        <label>qtimer.h</label>
      </node>
      <node id="460">
        <label>qregion.h</label>
      </node>
      <node id="490">
        <label>qfile.h</label>
      </node>
      <node id="484">
        <label>pair.h</label>
        <link refid="pair_8h-source"/>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
      </node>
      <node id="506">
        <label>dataprovider.h</label>
        <link refid="dataprovider_8h-source"/>
        <childnode refid="498" relation="include">
        </childnode>
        <childnode refid="493" relation="include">
        </childnode>
      </node>
      <node id="473">
        <label>klustersview.h</label>
        <link refid="klustersview_8h-source"/>
        <childnode refid="474" relation="include">
        </childnode>
        <childnode refid="475" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="476" relation="include">
        </childnode>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="480" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="496" relation="include">
        </childnode>
      </node>
      <node id="503">
        <label>qiconview.h</label>
      </node>
      <node id="461">
        <label>qvaluelist.h</label>
      </node>
      <node id="466">
        <label>viewwidget.h</label>
        <link refid="viewwidget_8h-source"/>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="469" relation="include">
        </childnode>
      </node>
      <node id="462">
        <label>zoomwindow.h</label>
        <link refid="zoomwindow_8h-source"/>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="465" relation="include">
        </childnode>
      </node>
      <node id="485">
        <label>qstring.h</label>
      </node>
      <node id="486">
        <label>stdlib.h</label>
      </node>
      <node id="498">
        <label>qobject.h</label>
      </node>
      <node id="507">
        <label>channelcolors.h</label>
        <link refid="channelcolors_8h-source"/>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
      </node>
      <node id="493">
        <label>kurl.h</label>
      </node>
      <node id="514">
        <label>kiconloader.h</label>
      </node>
      <node id="463">
        <label>qrect.h</label>
      </node>
      <node id="494">
        <label>stdexcept</label>
      </node>
      <node id="497">
        <label>klustersdoc.h</label>
        <link refid="klustersdoc_8h-source"/>
        <childnode refid="498" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="499" relation="include">
        </childnode>
        <childnode refid="493" relation="include">
        </childnode>
        <childnode refid="475" relation="include">
        </childnode>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="480" relation="include">
        </childnode>
        <childnode refid="500" relation="include">
        </childnode>
        <childnode refid="505" relation="include">
        </childnode>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
      </node>
      <node id="481">
        <label>array.h</label>
        <link refid="array_8h-source"/>
        <childnode refid="482" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
      </node>
      <node id="468">
        <label>kstatusbar.h</label>
      </node>
      <node id="454">
        <label>qframe.h</label>
      </node>
      <node id="479">
        <label>qcolor.h</label>
      </node>
      <node id="478">
        <label>qptrlist.h</label>
      </node>
      <node id="464">
        <label>qpoint.h</label>
      </node>
      <node id="483">
        <label>sortabletable.h</label>
        <link refid="sortabletable_8h-source"/>
        <childnode refid="481" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
      </node>
      <node id="487">
        <label>clusteruserinformation.h</label>
        <link refid="clusteruserinformation_8h-source"/>
      </node>
      <node id="512">
        <label>qapplication.h</label>
      </node>
      <node id="504">
        <label>qtooltip.h</label>
      </node>
      <node id="511">
        <label>qpaintdevice.h</label>
      </node>
      <node id="474">
        <label>kprinter.h</label>
      </node>
      <node id="508">
        <label>clustersprovider.h</label>
        <link refid="clustersprovider_8h-source"/>
        <childnode refid="506" relation="include">
        </childnode>
        <childnode refid="481" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
        <childnode refid="480" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="498" relation="include">
        </childnode>
      </node>
      <node id="505">
        <label>tracesprovider.h</label>
        <link refid="tracesprovider_8h-source"/>
        <childnode refid="506" relation="include">
        </childnode>
        <childnode refid="481" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="498" relation="include">
        </childnode>
      </node>
      <node id="495">
        <label>vector</label>
      </node>
      <node id="501">
        <label>qvariant.h</label>
      </node>
      <node id="452">
        <label>clusterview.cpp</label>
        <link refid="clusterview.cpp"/>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="473" relation="include">
        </childnode>
        <childnode refid="497" relation="include">
        </childnode>
        <childnode refid="480" relation="include">
        </childnode>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
        <childnode refid="465" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
      </node>
      <node id="477">
        <label>itemcolors.h</label>
        <link refid="itemcolors_8h-source"/>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
      </node>
      <node id="475">
        <label>kdockwidget.h</label>
      </node>
      <node id="470">
        <label>qcursor.h</label>
      </node>
      <node id="455">
        <label>qpainter.h</label>
      </node>
      <node id="453">
        <label>clusterview.h</label>
        <link refid="clusterview_8h-source"/>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
        <childnode refid="462" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
      </node>
      <node id="465">
        <label>math.h</label>
      </node>
      <node id="509">
        <label>timer.h</label>
        <link refid="timer_8h-source"/>
        <childnode refid="510" relation="include">
        </childnode>
      </node>
      <node id="467">
        <label>qwidget.h</label>
      </node>
      <node id="510">
        <label>sys/time.h</label>
      </node>
      <node id="471">
        <label>iostream</label>
      </node>
      <node id="476">
        <label>qvaluevector.h</label>
      </node>
      <node id="492">
        <label>qthread.h</label>
      </node>
      <node id="499">
        <label>qfileinfo.h</label>
      </node>
      <node id="500">
        <label>clusterPalette.h</label>
        <link refid="clusterPalette_8h-source"/>
        <childnode refid="501" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="502" relation="include">
        </childnode>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="504" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
      </node>
      <node id="458">
        <label>qpointarray.h</label>
      </node>
      <node id="488">
        <label>qdict.h</label>
      </node>
      <node id="496">
        <label>correlationview.h</label>
        <link refid="correlationview_8h-source"/>
        <childnode refid="462" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="480" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
      </node>
      <node id="489">
        <label>qmap.h</label>
      </node>
      <node id="491">
        <label>qmutex.h</label>
      </node>
      <node id="456">
        <label>qstyle.h</label>
      </node>
      <node id="457">
        <label>qpixmap.h</label>
      </node>
      <node id="482">
        <label>cstring</label>
      </node>
      <node id="502">
        <label>qvbox.h</label>
      </node>
      <node id="480">
        <label>data.h</label>
        <link refid="data_8h-source"/>
        <childnode refid="481" relation="include">
        </childnode>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
        <childnode refid="487" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
        <childnode refid="488" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
        <childnode refid="489" relation="include">
        </childnode>
        <childnode refid="490" relation="include">
        </childnode>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="492" relation="include">
        </childnode>
        <childnode refid="493" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="465" relation="include">
        </childnode>
        <childnode refid="495" relation="include">
        </childnode>
      </node>
      <node id="472">
        <label>types.h</label>
        <link refid="types_8h-source"/>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusterview.cpp<sp/><sp/>-<sp/><sp/>description</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>begin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Thu<sp/>Aug<sp/>21<sp/>2003</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>copyright<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(C)<sp/>2003<sp/>by<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>email<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//include<sp/>files<sp/>for<sp/>the<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;clusterview.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;klustersview.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;klustersdoc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;data.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;itemcolors.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;timer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//General<sp/>C++<sp/>include<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>files<sp/>for<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qpaintdevice.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qapplication.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qcursor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qpaintdevicemetrics.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>files<sp/>for<sp/>kde</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kiconloader.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>ClusterView::NEW_CLUSTER_COLOR(green);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>ClusterView::DELETE_NOISE_COLOR(220,220,220);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QColor<sp/>ClusterView::DELETE_ARTEFACT_COLOR(red);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">ClusterView::ClusterView(<ref refid="classKlustersDoc" kindref="compound">KlustersDoc</ref>&amp;<sp/>doc,<ref refid="classKlustersView" kindref="compound">KlustersView</ref>&amp;<sp/>view,QColor<sp/>backgroundColor,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeInterval,KStatusBar<sp/>*<sp/>statusBar,QWidget*<sp/>parent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowTopLeft<sp/>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowBottomRight,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>border)<sp/>:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="classViewWidget" kindref="compound">ViewWidget</ref>(doc,view,backgroundColor,statusBar,parent,name,minSize,maxSize,windowTopLeft,windowBottomRight,border),</highlight></codeline>
<codeline lineno="49"><highlight class="normal">selectionPolygon(0),<sp/>nbSelectionPoints(0),polygonClosed(false),existLastMovingLine(false)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>default<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>mode<sp/>=<sp/>ZOOM;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Initialize<sp/>internal<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>timeDimension<sp/>=<sp/>doc.<ref refid="classKlustersDoc_196ee8dbf3a50f580d76f024c281f7a45" kindref="member">data</ref>().<ref refid="classData_19e7862ce1718816a81ccb73fc5a94ff7" kindref="member">timeDimension</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>samplingInterval<sp/>=<sp/>doc.<ref refid="classKlustersDoc_196ee8dbf3a50f580d76f024c281f7a45" kindref="member">data</ref>().<ref refid="classData_181cde961a691fcf747281d8bace62f05" kindref="member">intervalOfSampling</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>setTimeStepInSecond(timeInterval);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>dimension<sp/>of<sp/>the<sp/>window<sp/>and<sp/>the<sp/>values<sp/>of<sp/>dimensionX<sp/>and<sp/>dimensionY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>updatedDimensions(view.<ref refid="classKlustersView_1b08defbbf0a202c34e6a4f1cac30d0de" kindref="member">abscissaDimension</ref>(),view.<ref refid="classKlustersView_14e268de32e62d7d36365b68f29c65204" kindref="member">ordinateDimension</ref>());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>KIconLoader<sp/>*loader<sp/>=<sp/>KGlobal::iconLoader();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>newClusterCursor<sp/>=<sp/>QCursor(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;new_cluster_cursor&quot;</highlight><highlight class="normal">,<sp/>KIcon::User),0,0);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>newClustersCursor<sp/>=<sp/>QCursor(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;new_clusters_cursor&quot;</highlight><highlight class="normal">,<sp/>KIcon::User),0,0);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>deleteNoiseCursor<sp/>=<sp/>QCursor(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;delete_noise_cursor&quot;</highlight><highlight class="normal">,<sp/>KIcon::User),0,0);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>deleteArtefactCursor<sp/>=<sp/>QCursor(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;delete_artefact_cursor&quot;</highlight><highlight class="normal">,<sp/>KIcon::User),0,0);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>selectTimeCursor<sp/>=<sp/>QCursor(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;select_time_cursor&quot;</highlight><highlight class="normal">,<sp/>KIcon::User),0,0);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>default<sp/>tool<sp/>is<sp/>the<sp/>zoom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>setCursor(zoomCursor);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Allowed<sp/>the<sp/>mouse<sp/>tracking<sp/>to<sp/>draw<sp/>the<sp/>tracking<sp/>lines<sp/>and<sp/>write<sp/>the<sp/>mouse<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>setMouseTracking(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">ClusterView::~ClusterView(){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;in<sp/>~ClusterView():<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClusterView::drawClusters(QPainter&amp;<sp/>painter,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QValueList&lt;int&gt;&amp;<sp/>clustersList,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>drawCircles){<sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Loop<sp/>on<sp/>the<sp/>clusters<sp/>to<sp/>be<sp/>drawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::const_iterator<sp/>clusterIterator;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="classItemColors" kindref="compound">ItemColors</ref>&amp;<sp/>clusterColors<sp/>=<sp/><ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_16cae6993a1d1aadb8d9350095c83d580" kindref="member">clusterColors</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="classData" kindref="compound">Data</ref>&amp;<sp/>clusteringData<sp/>=<sp/><ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_196ee8dbf3a50f580d76f024c281f7a45" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(clusterIterator<sp/>=<sp/>clustersList.begin();<sp/>clusterIterator<sp/>!=<sp/>clustersList.end();<sp/>++clusterIterator){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>color<sp/>associated<sp/>with<sp/>the<sp/>cluster<sp/>and<sp/>set<sp/>the<sp/>color<sp/>to<sp/>use<sp/>to<sp/>this<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.setPen(clusterColors.<ref refid="classItemColors_15331e934e03ba6a5bb2cae1eae5d75bc" kindref="member">color</ref>(*clusterIterator));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>iterator<sp/>on<sp/>the<sp/>spikes<sp/>of<sp/>the<sp/>current<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classData_1_1Iterator" kindref="compound">Data::Iterator</ref><sp/>spikeIterator<sp/>=<sp/>clusteringData.<ref refid="classData_185adc3b2ca498fa8ddf9a69a42be2f17" kindref="member">iterator</ref>(static_cast&lt;dataType&gt;(*clusterIterator));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Iterate<sp/>over<sp/>the<sp/>spikes<sp/>of<sp/>the<sp/>cluster<sp/>and<sp/>draw<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(drawCircles)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;spikeIterator.<ref refid="classData_1_1Iterator_1f402d66c7ab21ed998782b82793333fa" kindref="member">hasNext</ref>();spikeIterator.<ref refid="classData_1_1Iterator_184945d0435b67546fa0b89f51ec4086d" kindref="member">next</ref>()){</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QPoint<sp/>point<sp/>=<sp/>spikeIterator(dimensionX,dimensionY);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.setBrush(clusterColors.<ref refid="classItemColors_15331e934e03ba6a5bb2cae1eae5d75bc" kindref="member">color</ref>(*clusterIterator));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.drawEllipse(point.x()<sp/>-<sp/>1,point.y()<sp/>-<sp/>1,2,2);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;spikeIterator.<ref refid="classData_1_1Iterator_1f402d66c7ab21ed998782b82793333fa" kindref="member">hasNext</ref>();spikeIterator.<ref refid="classData_1_1Iterator_184945d0435b67546fa0b89f51ec4086d" kindref="member">next</ref>()){</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.drawPoint(spikeIterator(dimensionX,dimensionY));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>painter.setBrush(NoBrush);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classClusterView_19c392ec9d1bb56b601824fa735dac828" kindref="member">ClusterView::drawContents</ref>(QPainter*<sp/>p){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>UPDATE<sp/>||<sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>REDRAW){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>viewport<sp/>=<sp/>contentsRect();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Resize<sp/>the<sp/>double<sp/>buffer<sp/>with<sp/>the<sp/>width<sp/>and<sp/>the<sp/>height<sp/>of<sp/>the<sp/>widget(QFrame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>.resize(viewport.width(),viewport.height());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>painter<sp/>to<sp/>paint<sp/>on<sp/>the<sp/>double<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>QPainter<sp/>painter;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.begin(&amp;<ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>window<sp/>(part<sp/>of<sp/>the<sp/>word<sp/>I<sp/>want<sp/>to<sp/>show)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>QRect<sp/>r((QRect)<ref refid="classBaseFrame_15b9fe7f64b7737c193c4427a5ab8c271" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.setWindow(r.left(),r.top(),r.width()-1,r.height()-1);</highlight><highlight class="comment">//hack<sp/>because<sp/>Qt<sp/>QRect<sp/>is<sp/>used<sp/>differently<sp/>in<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>REDRAW){</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Reset<sp/>the<sp/>variables<sp/>associates<sp/>with<sp/>the<sp/>polygon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Resize<sp/>selectionPolygon<sp/>to<sp/>remove<sp/>all<sp/>the<sp/>last<sp/>selected<sp/>area,<sp/>reinitialize<sp/>nbSelectionPoints<sp/>accordingly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>selectionPolygon.resize(0);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nbSelectionPoints<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Fill<sp/>the<sp/>double<sp/>buffer<sp/>with<sp/>the<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>.fill(backgroundColor());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>axes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawAxes(painter);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Paint<sp/>all<sp/>the<sp/>clusters<sp/>in<sp/>the<sp/>shownClusters<sp/>list<sp/>(in<sp/>the<sp/>double<sp/>buffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>drawClusters(painter,<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>());<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>UPDATE){</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Erase<sp/>any<sp/>polygon<sp/>of<sp/>selection<sp/>and<sp/>reset<sp/>the<sp/>associated<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resetSelectionPolygon();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Paint<sp/>the<sp/>the<sp/>clusters<sp/>to<sp/>update<sp/>contain<sp/>in<sp/>clusterUpdateList</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classViewWidget_1bccba002ff28008b32f8082553f6fca8" kindref="member">clusterUpdateList</ref>.size()&gt;0)drawClusters(painter,<ref refid="classViewWidget_1bccba002ff28008b32f8082553f6fca8" kindref="member">clusterUpdateList</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>the<sp/>update<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classViewWidget_1bccba002ff28008b32f8082553f6fca8" kindref="member">clusterUpdateList</ref>.clear();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reset<sp/>transformation<sp/>due<sp/>to<sp/>setWindow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.resetXForm()<sp/>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>time<sp/>axis<sp/>information<sp/>if<sp/>the<sp/>time<sp/>is<sp/>displayed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>drawTimeInformation(painter);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Closes<sp/>the<sp/>painter<sp/>on<sp/>the<sp/>double<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.end();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Back<sp/>to<sp/>the<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REFRESH;<sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>drawContentsMode<sp/>==<sp/>REFRESH,<sp/>we<sp/>reuse<sp/>the<sp/>double<sp/>buffer<sp/>(pixmap)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>double<sp/>buffer<sp/>(pixmap)<sp/>by<sp/>copying<sp/>it<sp/>into<sp/>the<sp/>paint<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>p-&gt;drawPixmap(0,<sp/>0,<sp/><ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClusterView::resetSelectionPolygon(){</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(selectionPolygon.size()&gt;0){<sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Erase<sp/>the<sp/>existing<sp/>polygon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Select<sp/>the<sp/>appropriate<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/>QColor<sp/>color<sp/>=<sp/>selectPolygonColor(<ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>polygon<sp/>was<sp/>closed,<sp/>erase<sp/>the<sp/>closing<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(polygonClosed){</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QPainter<sp/>painter;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.begin(&amp;<ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>window<sp/>(part<sp/>of<sp/>the<sp/>word<sp/>I<sp/>want<sp/>to<sp/>show)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QRect<sp/>r((QRect)<ref refid="classBaseFrame_15b9fe7f64b7737c193c4427a5ab8c271" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.setWindow(r.left(),r.top(),r.width()-1,r.height()-1);</highlight><highlight class="comment">//hack<sp/>because<sp/>Qt<sp/>QRect<sp/>is<sp/>used<sp/>differently<sp/>in<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.setRasterOp(XorROP);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.setPen(color);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Erase<sp/>the<sp/>closing<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.drawLine(selectionPolygon.point(0),selectionPolygon.point(selectionPolygon.size()-1));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(existLastMovingLine)painter.drawPoint(selectionPolygon.point(selectionPolygon.size()-1));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reset<sp/>existLastMovingLine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>existLastMovingLine<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.end();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>polygonClosed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(selectionPolygon.size()&gt;0)<sp/>eraseTheLastDrawnLine(color);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Reset<sp/>the<sp/>variables<sp/>associates<sp/>with<sp/>the<sp/>polygon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Resize<sp/>selectionPolygon<sp/>to<sp/>remove<sp/>all<sp/>the<sp/>last<sp/>selected<sp/>area,<sp/>reinitialize<sp/>nbSelectionPoints<sp/>accordingly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/>selectionPolygon.resize(0);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/>nbSelectionPoints<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClusterView::eraseTheLastDrawnLine(QColor<sp/>polygonColor){</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Paint<sp/>in<sp/>the<sp/>buffer<sp/>to<sp/>allow<sp/>the<sp/>selection<sp/>to<sp/>be<sp/>redrawn<sp/>after<sp/>a<sp/>refresh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>QPainter<sp/>painter;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>painter.begin(&amp;<ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>window<sp/>(part<sp/>of<sp/>the<sp/>word<sp/>I<sp/>want<sp/>to<sp/>show)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>QRect<sp/>r((QRect)<ref refid="classBaseFrame_15b9fe7f64b7737c193c4427a5ab8c271" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>painter.setWindow(r.left(),r.top(),r.width()-1,r.height()-1);</highlight><highlight class="comment">//hack<sp/>because<sp/>Qt<sp/>QRect<sp/>is<sp/>used<sp/>differently<sp/>in<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>painter.setRasterOp(XorROP);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>painter.setPen(polygonColor);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>user<sp/>did<sp/>not<sp/>move<sp/>since<sp/>the<sp/>last<sp/>left<sp/>click<sp/>(no<sp/>mouseMoveEvent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbSelectionPoints<sp/>==<sp/>selectionPolygon.size()){<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Treat<sp/>the<sp/>case<sp/>when<sp/>we<sp/>reach<sp/>the<sp/>first<sp/>point<sp/>of<sp/>the<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbSelectionPoints<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Resize<sp/>selectionPolygon<sp/>to<sp/>remove<sp/>the<sp/>point<sp/>from<sp/>selectionPolygon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>selectionPolygon.resize(0);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nbSelectionPoints<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Erase<sp/>the<sp/>last<sp/>line<sp/>drawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawPolyline(selectionPolygon,selectionPolygon.size()-2);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Resize<sp/>selectionPolygon<sp/>to<sp/>remove<sp/>the<sp/>last<sp/>point<sp/>from<sp/>selectionPolygon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>selectionPolygon.resize(selectionPolygon.size()-1);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nbSelectionPoints<sp/>=<sp/>selectionPolygon.size();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>user<sp/>moved<sp/>since<sp/>the<sp/>last<sp/>left<sp/>click,<sp/>a<sp/>line<sp/>has<sp/>been<sp/>drawn<sp/>in<sp/>the<sp/>mouseMoveEvent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Treat<sp/>the<sp/>case<sp/>when<sp/>we<sp/>reach<sp/>the<sp/>first<sp/>point<sp/>of<sp/>the<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbSelectionPoints<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Erase<sp/>the<sp/>last<sp/>line<sp/>drawn<sp/>(in<sp/>mouseMoveEvent).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawPolyline(selectionPolygon,selectionPolygon.size()-2);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CAUTION,<sp/>Do<sp/>not<sp/>remove<sp/>this<sp/>line<sp/>otherwise<sp/>strang<sp/>dots<sp/>will<sp/>appear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawPoint(selectionPolygon.point(selectionPolygon.size()-2));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Erase<sp/>the<sp/>last<sp/>line<sp/>drawn<sp/>(in<sp/>mouseMoveEvent)<sp/>plus<sp/>the<sp/>line<sp/>between<sp/>the<sp/>2<sp/>last<sp/>selected<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(selected<sp/>by<sp/>a<sp/>left<sp/>click<sp/>of<sp/>the<sp/>user)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawPolyline(selectionPolygon,selectionPolygon.size()-3);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Resize<sp/>selectionPolygon<sp/>to<sp/>remove<sp/>the<sp/>2<sp/>last<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(the<sp/>last<sp/>selected<sp/>and<sp/>the<sp/>one<sp/>set<sp/>in<sp/>mouseMoveEvent)<sp/>from<sp/>selectionPolygon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>selectionPolygon.resize(selectionPolygon.size()-2);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>nbSelectionPoints<sp/>=<sp/>selectionPolygon.size();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>painter.end();</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClusterView::eraseTheLastMovingLine(QColor<sp/>polygonColor){</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>user<sp/>moved<sp/>since<sp/>the<sp/>last<sp/>left<sp/>click,<sp/>a<sp/>line<sp/>has<sp/>been<sp/>drawn<sp/>in<sp/>the<sp/>mouseMoveEvent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbSelectionPoints<sp/>!=<sp/>selectionPolygon.size()){</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>existLastMovingLine<sp/>to<sp/>true<sp/>to<sp/>correctely<sp/>erase<sp/>the<sp/>closed<sp/>polygon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>existLastMovingLine<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Paint<sp/>in<sp/>the<sp/>buffer<sp/>to<sp/>allow<sp/>the<sp/>selection<sp/>to<sp/>be<sp/>redrawn<sp/>after<sp/>a<sp/>refresh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>QPainter<sp/>painter;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.begin(&amp;<ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>window<sp/>(part<sp/>of<sp/>the<sp/>word<sp/>I<sp/>want<sp/>to<sp/>show)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>QRect<sp/>r((QRect)<ref refid="classBaseFrame_15b9fe7f64b7737c193c4427a5ab8c271" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.setWindow(r.left(),r.top(),r.width()-1,r.height()-1);</highlight><highlight class="comment">//hack<sp/>because<sp/>Qt<sp/>QRect<sp/>is<sp/>used<sp/>differently<sp/>in<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.setRasterOp(XorROP);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.setPen(polygonColor);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Treat<sp/>the<sp/>case<sp/>when<sp/>we<sp/>reach<sp/>the<sp/>first<sp/>point<sp/>of<sp/>the<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbSelectionPoints<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Erase<sp/>the<sp/>last<sp/>line<sp/>drawn<sp/>(in<sp/>mouseMoveEvent).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawPolyline(selectionPolygon,selectionPolygon.size()-2);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CAUTION,<sp/>Do<sp/>not<sp/>remove<sp/>this<sp/>line<sp/>otherwise<sp/>strang<sp/>dots<sp/>will<sp/>appear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawPoint(selectionPolygon.point(selectionPolygon.size()-2));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Erase<sp/>the<sp/>last<sp/>line<sp/>drawn<sp/>(in<sp/>mouseMoveEvent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawPolyline(selectionPolygon,selectionPolygon.size()-2);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Resize<sp/>selectionPolygon<sp/>to<sp/>remove<sp/>the<sp/>last<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(the<sp/>one<sp/>set<sp/>in<sp/>mouseMoveEvent)<sp/>from<sp/>selectionPolygon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>selectionPolygon.resize(selectionPolygon.size()-1);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>nbSelectionPoints<sp/>=<sp/>selectionPolygon.size();<sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.end();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClusterView::addClusterToUpdate(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clusterId){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Add<sp/>the<sp/>the<sp/>cluster<sp/>id<sp/>to<sp/>the<sp/>clusterUpdateList,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>it<sp/>will<sp/>be<sp/>updated<sp/>during<sp/>the<sp/>next<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>REFRESH){</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><ref refid="classViewWidget_1bccba002ff28008b32f8082553f6fca8" kindref="member">clusterUpdateList</ref>.append(clusterId);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>UPDATE;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>UPDATE)<ref refid="classViewWidget_1bccba002ff28008b32f8082553f6fca8" kindref="member">clusterUpdateList</ref>.append(clusterId);</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classClusterView_16ffcd1d8fe34d114476adee218d09669" kindref="member">ClusterView::updatedDimensions</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimensionX,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimensionY){<sp/><sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>this-&gt;dimensionX<sp/>=<sp/>dimensionX;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>this-&gt;dimensionY<sp/>=<sp/>dimensionY;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><ref refid="classData" kindref="compound">Data</ref>&amp;<sp/>clusteringData<sp/>=<sp/><ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_196ee8dbf3a50f580d76f024c281f7a45" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>maxForDimensionX<sp/>=<sp/>static_cast&lt;long&gt;(clusteringData.<ref refid="classData_17e746531a09640a04ae30a520a5b32ba" kindref="member">maxDimension</ref>(dimensionX));</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>minForDimensionX<sp/>=<sp/>static_cast&lt;long&gt;(clusteringData.<ref refid="classData_1fff0a3ea6d5ae25fe7bfe009be938803" kindref="member">minDimension</ref>(dimensionX));</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>maxForDimensionY<sp/>=<sp/>static_cast&lt;long&gt;(clusteringData.<ref refid="classData_17e746531a09640a04ae30a520a5b32ba" kindref="member">maxDimension</ref>(dimensionY));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>minForDimensionY<sp/>=<sp/>static_cast&lt;long&gt;(clusteringData.<ref refid="classData_1fff0a3ea6d5ae25fe7bfe009be938803" kindref="member">minDimension</ref>(dimensionY));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>min<sp/>and<sp/>max<sp/>are<sp/>chosen<sp/>in<sp/>a<sp/>maner<sp/>that<sp/>the<sp/>axis<sp/>are<sp/>always<sp/>visible<sp/>and<sp/>superior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//to<sp/>-40000000<sp/>(due<sp/>to<sp/>a<sp/>Qt<sp/>limitation<sp/>in<sp/>the<sp/>big<sp/>negative<sp/>values).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>maxForDimensionX<sp/>-<sp/>minForDimensionX;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>abscissaMin<sp/>=<sp/>static_cast&lt;long&gt;(QMIN(0,minForDimensionX)-width*0.05);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>abscissaMin<sp/>=<sp/>static_cast&lt;long&gt;(QMAX(abscissaMin,-1000000));<sp/></highlight><highlight class="comment">//<sp/>below<sp/>this<sp/>limit,<sp/>Qt<sp/>crashes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>abscissaMax<sp/>=<sp/>static_cast&lt;long&gt;(QMAX(0,maxForDimensionX)+width*0.05);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>maxForDimensionY<sp/>-<sp/>minForDimensionY;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>ordinateMin<sp/>=<sp/>static_cast&lt;long&gt;(-QMAX(0,maxForDimensionY)-height*0.05);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>ordinateMax<sp/>=<sp/>static_cast&lt;long&gt;(-QMIN(0,minForDimensionY)+height*0.05);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>ordinateMax<sp/>=<sp/>static_cast&lt;long&gt;(QMIN(ordinateMax,1000000));<sp/></highlight><highlight class="comment">//<sp/>below<sp/>-(this<sp/>limit),<sp/>Qt<sp/>crashes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>window<sp/>in<sp/>a<sp/>maner<sp/>to<sp/>always<sp/>see<sp/>the<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_15b9fe7f64b7737c193c4427a5ab8c271" kindref="member">window</ref><sp/>=<sp/><ref refid="classZoomWindow" kindref="compound">ZoomWindow</ref>(QRect(QPoint(abscissaMin,ordinateMin),QPoint(abscissaMax,ordinateMax)));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//reset<sp/>the<sp/>information<sp/>on<sp/>the<sp/>polygon<sp/>to<sp/>enable<sp/>a<sp/>mousetrack<sp/>in<sp/>mousemovEvent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>polygonClosed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classClusterView_1829d964b2b03c997e9e7098d2a17b12a" kindref="member">ClusterView::setMode</ref>(<ref refid="classBaseFrame_12d7e24808016f5b91c7232ab9b8fd148" kindref="member">BaseFrame::Mode</ref><sp/>selectedMode){</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>statusBar-&gt;clear();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>resetSelectionPolygon();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref><sp/>=<sp/>selectedMode;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>cursor<sp/>according<sp/>to<sp/>the<sp/>selected<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref>){</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DELETE_NOISE:</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>setCursor(deleteNoiseCursor);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DELETE_ARTEFACT:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>setCursor(deleteArtefactCursor);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NEW_CLUSTER:<sp/><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>setCursor(newClusterCursor);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NEW_CLUSTERS:<sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>setCursor(newClustersCursor);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZOOM:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>setCursor(<ref refid="classBaseFrame_1a6054da9012b308d2c041ec63df5b5cd" kindref="member">zoomCursor</ref>);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SELECT_TIME:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>setCursor(selectTimeCursor);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>new<sp/>doublebuffer<sp/>onto<sp/>the<sp/>widget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/>QPainter<sp/>p(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/>p.drawPixmap(0,<sp/>0,<sp/><ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classClusterView_15625cfa11cd85b65d59ef466f651bbff" kindref="member">ClusterView::mousePressEvent</ref>(QMouseEvent*<sp/>e){<sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Defining<sp/>a<sp/>time<sp/>window<sp/>t<sp/>oupdate<sp/>the<sp/>Traceview</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref><sp/>==<sp/>SELECT_TIME){</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/>QPoint<sp/>current<sp/>=<sp/><ref refid="classBaseFrame_11d2cf80aab1a6867fd30f61cb53f4dc5" kindref="member">viewportToWorld</ref>(e-&gt;x(),e-&gt;y());</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dimensionX<sp/>==<sp/>timeDimension){</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>dataType<sp/>time<sp/>=<sp/>static_cast&lt;dataType&gt;(current.x()<sp/>*<sp/>samplingInterval<sp/>/<sp/>static_cast&lt;double&gt;(1000));</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>emit<sp/>moveToTime(time);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dimensionY<sp/>==<sp/>timeDimension){</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>dataType<sp/>time<sp/>=<sp/>-static_cast&lt;dataType&gt;(current.y()<sp/>*<sp/>samplingInterval<sp/>/<sp/>static_cast&lt;double&gt;(1000));</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/>moveToTime(time);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>parent<sp/>implementation<sp/>takes<sp/>care<sp/>of<sp/>the<sp/>mode<sp/>ZOOM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//(rubber<sp/>band<sp/>and<sp/>calculation<sp/>of<sp/>the<sp/>firstClick)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1154d190f81125058199ed6770c5152b6" kindref="member">ViewWidget::mousePressEvent</ref>(e);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//If<sp/>there<sp/>is<sp/>a<sp/>polygon<sp/>to<sp/>draw<sp/>(one<sp/>of<sp/>the<sp/>selection<sp/>modes)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref><sp/>==<sp/>DELETE_NOISE<sp/>||<sp/><ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref><sp/>==<sp/>DELETE_ARTEFACT<sp/>||<sp/><ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref><sp/>==<sp/>NEW_CLUSTER<sp/>||<sp/><ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref><sp/>==<sp/>NEW_CLUSTERS){<sp/><sp/></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Select<sp/>the<sp/>appropriate<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>QColor<sp/>color<sp/>=<sp/>selectPolygonColor(<ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Erase<sp/>the<sp/>last<sp/>line<sp/>drawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(e-&gt;button()<sp/>==<sp/>QMouseEvent::RightButton){</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(selectionPolygon.size()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Erase<sp/>the<sp/>last<sp/>drawn<sp/>line<sp/>by<sp/>drawing<sp/>into<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eraseTheLastDrawnLine(color);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>new<sp/>doublebuffer<sp/>onto<sp/>the<sp/>widget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QPainter<sp/>p(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.drawPixmap(0,<sp/>0,<sp/><ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Close<sp/>the<sp/>polygon<sp/>of<sp/>selection<sp/>and<sp/>trigger<sp/>the<sp/>right<sp/>action<sp/>depending<sp/>on<sp/>the<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(e-&gt;button()<sp/>==<sp/>QMouseEvent::MidButton<sp/>&amp;&amp;<sp/>selectionPolygon.size()&gt;0){<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QRegion<sp/>selectionArea;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Paint<sp/>into<sp/>the<sp/>buffer<sp/>to<sp/>allow<sp/>the<sp/>selection<sp/>to<sp/>be<sp/>redrawn<sp/>after<sp/>a<sp/>refresh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QPainter<sp/>painter;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.begin(&amp;<ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>window<sp/>(part<sp/>of<sp/>the<sp/>word<sp/>I<sp/>want<sp/>to<sp/>show)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QRect<sp/>r((QRect)window);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.setWindow(r.left(),r.top(),r.width()-1,r.height()-1);</highlight><highlight class="comment">//hack<sp/>because<sp/>Qt<sp/>QRect<sp/>is<sp/>used<sp/>differently<sp/>in<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.setPen(color);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If,<sp/>once<sp/>the<sp/>last<sp/>moving<sp/>line<sp/>erase,<sp/>the<sp/>polygon<sp/>exists<sp/>and<sp/>has<sp/>at<sp/>least<sp/>3<sp/>points,<sp/>draw<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(selectionPolygon.size()&gt;2){</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//erase<sp/>the<sp/>last<sp/>line<sp/>drawn<sp/>if<sp/>the<sp/>user<sp/>moved<sp/>since<sp/>the<sp/>last<sp/>click</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eraseTheLastMovingLine(color);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>closing<sp/>line<sp/>of<sp/>the<sp/>polygon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.setRasterOp(XorROP);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawLine(selectionPolygon.point(0),selectionPolygon.point(selectionPolygon.size()-1));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>polygonClosed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Send<sp/>an<sp/>event<sp/>to<sp/>inform<sp/>that<sp/>the<sp/>data<sp/>have<sp/>to<sp/>be<sp/>recompute<sp/>accordingly<sp/>to<sp/>the<sp/>selection<sp/>polygon.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>asynchronous<sp/>event<sp/>will<sp/>allow<sp/>the<sp/>widget<sp/>to<sp/>close<sp/>the<sp/>polygon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//before<sp/>asking<sp/>the<sp/>document<sp/>to<sp/>compute<sp/>the<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ComputeEvent*<sp/>event<sp/>=<sp/>getComputeEvent(selectionPolygon.copy());</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::postEvent(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,event);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reset<sp/>the<sp/>polygon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>resetSelectionPolygon();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.end();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>new<sp/>doublebuffer<sp/>onto<sp/>the<sp/>widget<sp/>(show<sp/>the<sp/>closed<sp/>polygon)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QPainter<sp/>p(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.drawPixmap(0,<sp/>0,<sp/><ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>statusBar-&gt;clear();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;button()<sp/>==<sp/>QMouseEvent::LeftButton){<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QPoint<sp/>selectedPoint<sp/>=<sp/><ref refid="classBaseFrame_11d2cf80aab1a6867fd30f61cb53f4dc5" kindref="member">viewportToWorld</ref>(e-&gt;x(),e-&gt;y());</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbSelectionPoints<sp/>==<sp/>0)<sp/>selectionPolygon.putPoints(0,<sp/>1,<sp/>selectedPoint.x(),selectedPoint.y());</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>array<sp/>is<sp/>not<sp/>empty,<sp/>the<sp/>last<sp/>point<sp/>has<sp/>been<sp/>put<sp/>into<sp/>the<sp/>array<sp/>in<sp/>mouseMoveEvent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nbSelectionPoints<sp/>=<sp/>selectionPolygon.size();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classClusterView_12b44bdf430dfe5ac3e741f36e20c9e47" kindref="member">ClusterView::mouseReleaseEvent</ref>(QMouseEvent*<sp/>event){</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Trigger<sp/>parent<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_17b6086bb37e3ad0c56a8b8eb166b3d9e" kindref="member">ViewWidget::mouseReleaseEvent</ref>(event);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>statusBar-&gt;clear();</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classClusterView_1965a57cbb8e5b8748e6e2237c540b402" kindref="member">ClusterView::mouseMoveEvent</ref>(QMouseEvent*<sp/>e){</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Write<sp/>the<sp/>current<sp/>coordinates<sp/>in<sp/>the<sp/>statusbar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>QPoint<sp/>current<sp/>=<sp/><ref refid="classBaseFrame_11d2cf80aab1a6867fd30f61cb53f4dc5" kindref="member">viewportToWorld</ref>(e-&gt;x(),e-&gt;y());</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dimensionX<sp/>==<sp/>timeDimension){</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeInS<sp/>=<sp/>static_cast&lt;int&gt;(current.x()<sp/>*<sp/>samplingInterval<sp/>/<sp/>static_cast&lt;double&gt;(1000000));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/>statusBar-&gt;changeItem(</highlight><highlight class="stringliteral">&quot;Coordinates:<sp/>(&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(timeInS)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(-current.y())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">,1);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dimensionY<sp/>==<sp/>timeDimension){</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeInS<sp/>=<sp/>static_cast&lt;int&gt;(current.y()<sp/>*<sp/>samplingInterval<sp/>/<sp/>static_cast&lt;double&gt;(1000000));</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/>statusBar-&gt;changeItem(</highlight><highlight class="stringliteral">&quot;Coordinates:<sp/>(&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(current.x())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(-timeInS)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">,1);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>statusBar-&gt;changeItem(</highlight><highlight class="stringliteral">&quot;Coordinates:<sp/>(&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(current.x())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(-current.y())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">,1);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>parent<sp/>implementation<sp/>takes<sp/>care<sp/>of<sp/>the<sp/>rubber<sp/>band</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1e0bc9fac62c249065e52f3d393e84cf7" kindref="member">ViewWidget::mouseMoveEvent</ref>(e);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>user<sp/>is<sp/>closing<sp/>the<sp/>polygon<sp/>do<sp/>not<sp/>take<sp/>mousemove<sp/>event<sp/>into<sp/>account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!polygonClosed){</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//In<sp/>one<sp/>of<sp/>the<sp/>selection<sp/>modes<sp/>we<sp/>draw<sp/>the<sp/>tracking<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref><sp/>==<sp/>DELETE_NOISE<sp/>||<sp/><ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref><sp/>==<sp/>DELETE_ARTEFACT<sp/>||<sp/><ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref><sp/>==<sp/>NEW_CLUSTER<sp/>||<sp/><ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref><sp/>==<sp/>NEW_CLUSTERS){</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Select<sp/>the<sp/>appropriate<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QColor<sp/>color<sp/>=<sp/>selectPolygonColor(<ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>there<sp/>is<sp/>no<sp/>selection<sp/>point,<sp/>do<sp/>not<sp/>draw<sp/>a<sp/>tracking<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(selectionPolygon.size()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Paint<sp/>in<sp/>the<sp/>buffer<sp/>to<sp/>allow<sp/>the<sp/>selection<sp/>to<sp/>be<sp/>redrawn<sp/>after<sp/>a<sp/>refresh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QPainter<sp/>painter;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.begin(&amp;<ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>window<sp/>(part<sp/>of<sp/>the<sp/>word<sp/>I<sp/>want<sp/>to<sp/>show)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QRect<sp/>r((QRect)window);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.setWindow(r.left(),r.top(),r.width()-1,r.height()-1);</highlight><highlight class="comment">//hack<sp/>because<sp/>Qt<sp/>QRect<sp/>is<sp/>used<sp/>differently<sp/>in<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.setRasterOp(XorROP);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.setPen(color);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//First<sp/>mouseMoveEvent<sp/>after<sp/>the<sp/>last<sp/>mousePressEvent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbSelectionPoints<sp/>==<sp/>selectionPolygon.size()){</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Add<sp/>the<sp/>current<sp/>point<sp/>to<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectionPolygon.putPoints(selectionPolygon.size(),<sp/>1,<sp/>current.x(),current.y());</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawPolyline(selectionPolygon,selectionPolygon.size()-2);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Erase<sp/>the<sp/>previous<sp/>drawn<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawPolyline(selectionPolygon,selectionPolygon.size()-2);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Replace<sp/>the<sp/>last<sp/>point<sp/>by<sp/>the<sp/>current<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectionPolygon.setPoint(selectionPolygon.size()-1,current);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>new<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawPolyline(selectionPolygon,selectionPolygon.size()-2);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.end();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>new<sp/>doublebuffer<sp/>onto<sp/>the<sp/>widget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QPainter<sp/>p(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>p.drawPixmap(0,<sp/>0,<sp/><ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classClusterView_1c69a4ad405464c0ce68acf5654586e42" kindref="member">ClusterView::customEvent</ref>(QCustomEvent*<sp/>event){</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(event-&gt;type()<sp/>==<sp/>QEvent::User<sp/>+<sp/>700){</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>ComputeEvent*<sp/>computeEvent<sp/>=<sp/>(ComputeEvent*)<sp/>event;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>polygon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>QPointArray<sp/>polygon<sp/>=<sp/>computeEvent-&gt;polygon();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>QRegion<sp/>selectionArea;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>QPointArray<sp/>reviewPolygon;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Xdimension<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Ydimension<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>QRegion<sp/>uses<sp/>rectangles<sp/>to<sp/>define<sp/>its<sp/>area<sp/>and<sp/>the<sp/>number<sp/>of<sp/>rectangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//increases<sp/>with<sp/>the<sp/>height<sp/>of<sp/>the<sp/>region<sp/>(y<sp/>axis).<sp/>The<sp/>more<sp/>rectangles<sp/>the<sp/>longer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>search<sp/>of<sp/>one<sp/>point<sp/>in<sp/>the<sp/>region<sp/>will<sp/>take.<sp/>With<sp/>a<sp/>dimension<sp/>like<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>height<sp/>has<sp/>an<sp/>order<sp/>of<sp/>the<sp/>millon<sp/>(at<sp/>least<sp/>5<sp/>going<sp/>to<sp/>80<sp/>or<sp/>more)<sp/>given<sp/>a<sp/>huge<sp/>amount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//of<sp/>rectangles.<sp/>A<sp/>way<sp/>of<sp/>speeding<sp/>the<sp/>search<sp/>of<sp/>points<sp/>is<sp/>to<sp/>reduce<sp/>the<sp/>number<sp/>of<sp/>rectangles.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//To<sp/>do<sp/>so,<sp/>if<sp/>the<sp/>y<sp/>dimension<sp/>is<sp/>the<sp/>time,<sp/>x<sp/>and<sp/>y<sp/>axis<sp/>are<sp/>inverted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Caution:<sp/>in<sp/>Qt<sp/>graphical<sp/>coordinate<sp/>system,<sp/>the<sp/>Y<sp/>axis<sp/>is<sp/>inverted<sp/>(increasing<sp/>downwards),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//thus<sp/>a<sp/>point<sp/>(x,y)<sp/>is<sp/>drawn<sp/>as<sp/>(x,-y),<sp/>before<sp/>creating<sp/>the<sp/>region<sp/>the<sp/>points<sp/>are<sp/>reset<sp/>to<sp/>there<sp/>raw<sp/>value<sp/>(x,y).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_14e268de32e62d7d36365b68f29c65204" kindref="member">ordinateDimension</ref>()<sp/>!=<sp/>timeDimension){</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint<sp/>i<sp/>=<sp/>0;<sp/>i&lt;<sp/>polygon.size();++i){</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>reviewPolygon.putPoints(i,<sp/>1,polygon.point(i).x(),-polygon.point(i).y());</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Xdimension<sp/>=<sp/>dimensionX;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Ydimension<sp/>=<sp/>dimensionY;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint<sp/>i<sp/>=<sp/>0;<sp/>i&lt;<sp/>polygon.size();++i){</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>reviewPolygon.putPoints(i,<sp/>1,-polygon.point(i).y(),polygon.point(i).x());</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Xdimension<sp/>=<sp/>dimensionY;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>Ydimension<sp/>=<sp/>dimensionX;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>QRegion<sp/>with<sp/>the<sp/>new<sp/>selection<sp/>area<sp/>in<sp/>order<sp/>to<sp/>use<sp/>the<sp/>research<sp/>facilities<sp/>offer<sp/>by<sp/>a<sp/>QRegion.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>selectionArea<sp/>=<sp/>QRegion(reviewPolygon);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!selectionArea.isNull()){</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Call<sp/>any<sp/>appropriate<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref>){</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DELETE_NOISE:</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_1b97c6e163bd1f0cee959e993c5952552" kindref="member">deleteNoise</ref>(selectionArea,<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>(),Xdimension,Ydimension);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DELETE_ARTEFACT:</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_1814ccc9b6b96cf848f1198691ef93287" kindref="member">deleteArtifact</ref>(selectionArea,<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>(),Xdimension,Ydimension);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NEW_CLUSTER:</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_18a5a96626e4d9e368d8bc670a1bbd7bb" kindref="member">createNewCluster</ref>(selectionArea,<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>(),Xdimension,Ydimension);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NEW_CLUSTERS:</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_16fd0287ec2dd26cfff4081fd7c73fc44" kindref="member">createNewClusters</ref>(selectionArea,<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>(),Xdimension,Ydimension);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ZOOM:</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//nothing<sp/>to<sp/>do<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>QApplication::restoreOverrideCursor();<sp/></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClusterView::drawAxes(QPainter&amp;<sp/>painter){</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>painter.setPen(QColor(60,60,60));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>color<sp/>for<sp/>the<sp/>lines<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>painter.drawLine(abscissaMin,0,abscissaMax,0);<sp/></highlight><highlight class="comment">//<sp/>draw<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>painter.drawLine(0,ordinateMin,0,ordinateMax);<sp/></highlight><highlight class="comment">//<sp/>draw<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClusterView::drawTimeInformation(QPainter&amp;<sp/>painter){</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dimensionX<sp/>==<sp/>timeDimension){</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/>painter.setPen(QColor(60,60,60));<sp/></highlight><highlight class="comment">//set<sp/>the<sp/>color<sp/>for<sp/>the<sp/>lines<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>markHeight<sp/>=<sp/>static_cast&lt;int&gt;(abs(ordinateMax<sp/>-<sp/>ordinateMin));<sp/><sp/></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/>QFont<sp/>f(</highlight><highlight class="stringliteral">&quot;Helvetica&quot;</highlight><highlight class="normal">,9);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/>painter.setFont(f);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/>QRect<sp/>r((QRect)window);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>legendOrdinate<sp/>=<sp/><ref refid="classBaseFrame_1a66187fbc3b1a9978f7604a17a04071b" kindref="member">worldToViewportOrdinate</ref>(r.top())<sp/>+<sp/>20;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>abscissaMax;<sp/>i<sp/>+=<sp/>timeStepInRecordingUnit){</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>QPoint<sp/>topInViewport<sp/>=<sp/><ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(i,-markHeight);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>QPoint<sp/>bottomInViewport<sp/>=<sp/><ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(i,markHeight);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.drawLine(topInViewport,bottomInViewport);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.drawText(topInViewport.x()<sp/>+<sp/>1,legendOrdinate,QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(time));</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>time<sp/>+=<sp/>timeStepInSecond;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dimensionY<sp/>==<sp/>timeDimension){</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.setPen(QColor(60,60,60));<sp/></highlight><highlight class="comment">//set<sp/>the<sp/>color<sp/>for<sp/>the<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>QFont<sp/>f(</highlight><highlight class="stringliteral">&quot;Helvetica&quot;</highlight><highlight class="normal">,9);<sp/></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.setFont(f);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>QRect<sp/>r((QRect)window);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>legendAbsciss<sp/>=<sp/><ref refid="classBaseFrame_1282acf96cb3e2cf1889da54236d1623e" kindref="member">worldToViewportAbscissa</ref>(r.left());<sp/></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>markHeight<sp/>=<sp/>static_cast&lt;int&gt;(abs(abscissaMax<sp/>-<sp/>abscissaMin));</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ordinateMin<sp/>is<sp/>used<sp/>because<sp/>in<sp/>QT<sp/>coordinate<sp/>system<sp/>the<sp/>ordinate<sp/>axis<sp/>in<sp/>downwards<sp/>oriented</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//see<sp/>the<sp/>function<sp/>updatedDimensions<sp/>for<sp/>detail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>abs(ordinateMin);<sp/>i<sp/>+=<sp/>timeStepInRecordingUnit){</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QPoint<sp/>topInViewport<sp/>=<sp/><ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(-markHeight,-i);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QPoint<sp/>bottomInViewport<sp/>=<sp/><ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(markHeight,-i);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.drawLine(topInViewport,bottomInViewport);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.drawText(legendAbsciss,topInViewport.y(),QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(time));</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>time<sp/>+=<sp/>timeStepInSecond;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classClusterView_18a48d3dce82af1ac56f934b886a3bd81" kindref="member">ClusterView::print</ref>(QPainter&amp;<sp/>printPainter,QPaintDeviceMetrics&amp;<sp/>metrics,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>whiteBackground){</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>double<sp/>buffer<sp/>(pixmap)<sp/>by<sp/>copying<sp/>it<sp/>into<sp/>the<sp/>printer<sp/>device<sp/>throught<sp/>the<sp/>painter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>QRect<sp/>viewportOld<sp/>=<sp/>QRect(viewport.left(),viewport.top(),viewport.width(),viewport.height());</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>viewport<sp/>=<sp/>QRect(printPainter.viewport().left(),printPainter.viewport().top(),printPainter.viewport().width(),printPainter.viewport().height());</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>QRect<sp/>r<sp/>=<sp/>((QRect)window);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>window<sp/>(part<sp/>of<sp/>the<sp/>world<sp/>I<sp/>want<sp/>to<sp/>show)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>printPainter.setWindow(r.left(),r.top(),r.width()-1,r.height()-1);</highlight><highlight class="comment">//hack<sp/>because<sp/>Qt<sp/>QRect<sp/>is<sp/>used<sp/>differently<sp/>in<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Fill<sp/>the<sp/>background<sp/>with<sp/>the<sp/>background<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/>QRect<sp/>back<sp/>=<sp/>QRect(r.left(),r.top(),r.width(),r.height());</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>QColor<sp/>colorLegendTmp<sp/>=<sp/><ref refid="classBaseFrame_146ae781de9307957e8a1eb0a5f5a64c6" kindref="member">colorLegend</ref>;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>QColor<sp/>background=<sp/>backgroundColor();</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(whiteBackground){</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><ref refid="classBaseFrame_146ae781de9307957e8a1eb0a5f5a64c6" kindref="member">colorLegend</ref><sp/>=<sp/>black;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/>setPaletteBackgroundColor(white);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>printPainter.fillRect(back,backgroundColor());</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>printPainter.setClipRect(back,QPainter::CoordPainter);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>axes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>drawAxes(printPainter);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Paint<sp/>all<sp/>the<sp/>clusters<sp/>in<sp/>the<sp/>shownClusters<sp/>list<sp/>(in<sp/>the<sp/>double<sp/>buffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>drawClusters(printPainter,<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>(),</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//reset<sp/>transformation<sp/>due<sp/>to<sp/>setWindow<sp/>and<sp/>setViewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>printPainter.resetXForm();</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>time<sp/>axis<sp/>information<sp/>if<sp/>the<sp/>time<sp/>is<sp/>displayed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>drawTimeInformation(printPainter);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>printPainter.setClipping(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Restore<sp/>the<sp/>colors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(whiteBackground){</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><ref refid="classBaseFrame_146ae781de9307957e8a1eb0a5f5a64c6" kindref="member">colorLegend</ref><sp/>=<sp/>colorLegendTmp;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/>setPaletteBackgroundColor(background);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Restore<sp/>the<sp/>previous<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>viewport<sp/>=<sp/>QRect(viewportOld.left(),viewportOld.top(),viewportOld.width(),viewportOld.height());</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/lynn/CMBN/Klusters/klusters/src/clusterview.cpp"/>
  </compounddef>
</doxygen>
