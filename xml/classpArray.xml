<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.1">
  <compounddef id="classpArray" kind="class" prot="public">
    <compoundname>pArray</compoundname>
    <basecompoundref refid="classArray" prot="public" virt="non-virtual">Array&lt; T &gt;</basecompoundref>
    <includes refid="array_8h" local="no">array.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpArray_125f3419861137d9b0dea92a824dd0c24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pArray&lt; T &gt;::pArray</definition>
        <argsstring>()</argsstring>
        <name>pArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="184" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classpArray_1483b5080fb2a1c5d20c04858d0e834d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pArray&lt; T &gt;::~pArray</definition>
        <argsstring>()</argsstring>
        <name>~pArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="185" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classpArray_172ca638b08fb93c6dcf1b198466f9666" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pArray&lt; T &gt;::copyAndPrependColumn</definition>
        <argsstring>(pArray &amp;source)</argsstring>
        <name>copyAndPrependColumn</name>
        <param>
          <type><ref refid="classpArray" kindref="compound">pArray</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Copies data from <computeroutput>source</computeroutput> to the current object prepending an empty column. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classpArray" kindref="compound">pArray</ref> containing the data to put in the current <ref refid="classpArray" kindref="compound">pArray</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="192" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="192" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classpArray_14617ff68b547a432a930314d4ab7042f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pArray&lt; T &gt;::copySubset</definition>
        <argsstring>(pArray &amp;source, long lastColumnToCopy)</argsstring>
        <name>copySubset</name>
        <param>
          <type><ref refid="classpArray" kindref="compound">pArray</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>long</type>
          <declname>lastColumnToCopy</declname>
        </param>
        <briefdescription>
<para>Copies a subset of data from <computeroutput>source</computeroutput> to the current object. </para>        </briefdescription>
        <detaileddescription>
<para>Copy from the first column to the <computeroutput>lastColumnToCopy</computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classpArray" kindref="compound">pArray</ref> containing the data to put in the current <ref refid="classpArray" kindref="compound">pArray</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lastColumnToCopy</parametername>
</parameternamelist>
<parameterdescription>
<para>last column containing data to copy, start at 1. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="206" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="206" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classpArray_1e3fe8fe0ed2c87cc237f0d8105841956" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pArray&lt; T &gt;::copySubset</definition>
        <argsstring>(pArray &amp;source, long firstColumnToCopy, long lastColumnToCopy, long startingColumn)</argsstring>
        <name>copySubset</name>
        <param>
          <type><ref refid="classpArray" kindref="compound">pArray</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>long</type>
          <declname>firstColumnToCopy</declname>
        </param>
        <param>
          <type>long</type>
          <declname>lastColumnToCopy</declname>
        </param>
        <param>
          <type>long</type>
          <declname>startingColumn</declname>
        </param>
        <briefdescription>
<para>Copies a subset of data from <computeroutput>source</computeroutput> to the current object. </para>        </briefdescription>
        <detaileddescription>
<para>Copy from <computeroutput>firstColumnToCopy</computeroutput> to the <computeroutput>lastColumnToCopy</computeroutput> inserting them after <computeroutput>startingColumn</computeroutput>. Assumes that the <ref refid="classArray" kindref="compound">Array</ref> has the correct size. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classpArray" kindref="compound">pArray</ref> containing the data to put in the current <ref refid="classArray" kindref="compound">Array</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firstColumnToCopy</parametername>
</parameternamelist>
<parameterdescription>
<para>first column containing data to copy, start at 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lastColumnToCopy</parametername>
</parameternamelist>
<parameterdescription>
<para>last column containing data to copy, start at 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startingColumn</parametername>
</parameternamelist>
<parameterdescription>
<para>column from where to start copying to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="222" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="222" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classpArray_1934ba31fc52c0d84c8b791d688aaef9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpArray" kindref="compound">pArray</ref>&lt; T &gt; &amp;</type>
        <definition>pArray&lt;T&gt;&amp; pArray&lt; T &gt;::operator=</definition>
        <argsstring>(pArray&lt; T &gt; &amp;source)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classpArray" kindref="compound">pArray</ref>&lt; T &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="232" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="232" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classpArray_12b5ebbf6cb5266edf4a877984e0d03f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpArray" kindref="compound">pArray</ref>&lt; T &gt;</type>
        <definition>pArray&lt;T&gt; pArray&lt; T &gt;::operator=</definition>
        <argsstring>(pArray&lt; T &gt; &amp;source) const</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classpArray" kindref="compound">pArray</ref>&lt; T &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="245" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="245" bodyend="256"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This <ref refid="classpArray" kindref="compound">pArray</ref> class is a template class that provides arrays of classes containing pointers. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classpArray" kindref="compound">pArray</ref> stores the array elements directly in the array. <ref refid="classArray" kindref="compound">Array</ref> provides an easy way to acess the elements through the parenthesis operator. <simplesect kind="author"><para>Lynn Hazan </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1218">
        <label>pArray&lt; T &gt;</label>
        <link refid="classpArray"/>
        <childnode refid="1219" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1219">
        <label>Array&lt; T &gt;</label>
        <link refid="classArray"/>
      </node>
      <node id="1220">
        <label>pArray&lt; EventDescription &gt;</label>
        <link refid="classpArray"/>
        <childnode refid="1218" relation="template-instance">
          <edgelabel>&lt; EventDescription &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1223">
        <label>T</label>
      </node>
      <node id="1221">
        <label>pArray&lt; T &gt;</label>
        <link refid="classpArray"/>
        <childnode refid="1222" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1222">
        <label>Array&lt; T &gt;</label>
        <link refid="classArray"/>
        <childnode refid="1223" relation="usage">
          <edgelabel>array</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="176" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="176" bodyend="257"/>
    <listofallmembers>
      <member refid="classArray_1e2cc2a9a3218834ff71f023903e9fdbc" prot="protected" virt="non-virtual"><scope>pArray</scope><name>array</name></member>
      <member refid="classArray_1858c11d8580f0dbd55ae3ce7b2373c7f" prot="public" virt="non-virtual"><scope>pArray</scope><name>Array</name></member>
      <member refid="classArray_10a7e67e48d2bf8ebb26f743cfc3b50fc" prot="public" virt="non-virtual"><scope>pArray</scope><name>Array</name></member>
      <member refid="classpArray_172ca638b08fb93c6dcf1b198466f9666" prot="public" virt="non-virtual"><scope>pArray</scope><name>copyAndPrependColumn</name></member>
      <member refid="classArray_132ea3e37fa1d0559201c40a4e006c0d9" prot="public" virt="non-virtual" ambiguityscope="Array::"><scope>pArray</scope><name>copyAndPrependColumn</name></member>
      <member refid="classpArray_14617ff68b547a432a930314d4ab7042f" prot="public" virt="non-virtual"><scope>pArray</scope><name>copySubset</name></member>
      <member refid="classpArray_1e3fe8fe0ed2c87cc237f0d8105841956" prot="public" virt="non-virtual"><scope>pArray</scope><name>copySubset</name></member>
      <member refid="classArray_119bcb349c3fccf22dfdbdf5076cb9a78" prot="public" virt="non-virtual" ambiguityscope="Array::"><scope>pArray</scope><name>copySubset</name></member>
      <member refid="classArray_12c6b0b43b54141d99bf184a7bab00bb3" prot="public" virt="non-virtual" ambiguityscope="Array::"><scope>pArray</scope><name>copySubset</name></member>
      <member refid="classArray_15720d22bba044d2ad5d83ada79243b54" prot="public" virt="non-virtual"><scope>pArray</scope><name>fillWithZeros</name></member>
      <member refid="classArray_10327789f5c397680a6ae8c72913465ee" prot="protected" virt="non-virtual"><scope>pArray</scope><name>nbColumns</name></member>
      <member refid="classArray_1bf8d9f719e657139795c7804422c70fc" prot="public" virt="non-virtual"><scope>pArray</scope><name>nbOfColumns</name></member>
      <member refid="classArray_1d55af2bb256e18c4554faea8d8abce42" prot="public" virt="non-virtual"><scope>pArray</scope><name>nbOfRows</name></member>
      <member refid="classArray_11d10cb71d33f6278f2ebad5b063f521a" prot="protected" virt="non-virtual"><scope>pArray</scope><name>nbRows</name></member>
      <member refid="classArray_10f2072faaac6dd6d5dfe27b80bb71b12" prot="public" virt="non-virtual"><scope>pArray</scope><name>operator()</name></member>
      <member refid="classArray_110bb4f5caa5b050f58fb4867eb45eb06" prot="public" virt="non-virtual"><scope>pArray</scope><name>operator()</name></member>
      <member refid="classpArray_1934ba31fc52c0d84c8b791d688aaef9e" prot="public" virt="non-virtual"><scope>pArray</scope><name>operator=</name></member>
      <member refid="classpArray_12b5ebbf6cb5266edf4a877984e0d03f9" prot="public" virt="non-virtual"><scope>pArray</scope><name>operator=</name></member>
      <member refid="classArray_189229b69e79a04295a9b24e208ee46fd" prot="public" virt="non-virtual" ambiguityscope="Array::"><scope>pArray</scope><name>operator=</name></member>
      <member refid="classArray_1e5e7f655a73a01c40f36b62d27e33f7a" prot="public" virt="non-virtual"><scope>pArray</scope><name>operator[]</name></member>
      <member refid="classpArray_125f3419861137d9b0dea92a824dd0c24" prot="public" virt="non-virtual"><scope>pArray</scope><name>pArray</name></member>
      <member refid="classArray_109210c530a317d5c6d6f8006d2df55e6" prot="public" virt="non-virtual"><scope>pArray</scope><name>setSize</name></member>
      <member refid="classArray_132ccb701314abd4cc8775f188bfa6892" prot="public" virt="non-virtual"><scope>pArray</scope><name>~Array</name></member>
      <member refid="classpArray_1483b5080fb2a1c5d20c04858d0e834d1" prot="public" virt="non-virtual"><scope>pArray</scope><name>~pArray</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
