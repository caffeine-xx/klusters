<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.1">
  <compounddef id="correlationview_8cpp" kind="file">
    <compoundname>correlationview.cpp</compoundname>
    <includes refid="klustersview_8h" local="yes">klustersview.h</includes>
    <includes refid="klustersdoc_8h" local="yes">klustersdoc.h</includes>
    <includes refid="itemcolors_8h" local="yes">itemcolors.h</includes>
    <includes refid="correlationthread_8h" local="yes">correlationthread.h</includes>
    <includes refid="correlationview_8h" local="yes">correlationview.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">qpaintdevice.h</includes>
    <includes local="no">qcursor.h</includes>
    <includes local="no">qpaintdevicemetrics.h</includes>
    <includes local="no">kiconloader.h</includes>
    <incdepgraph>
      <node id="722">
        <label>qpaintdevicemetrics.h</label>
      </node>
      <node id="698">
        <label>baseframe.h</label>
        <link refid="baseframe_8h-source"/>
        <childnode refid="669" relation="include">
        </childnode>
        <childnode refid="696" relation="include">
        </childnode>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="700" relation="include">
        </childnode>
        <childnode refid="678" relation="include">
        </childnode>
      </node>
      <node id="707">
        <label>qtimer.h</label>
      </node>
      <node id="686">
        <label>qregion.h</label>
      </node>
      <node id="688">
        <label>qfile.h</label>
      </node>
      <node id="681">
        <label>pair.h</label>
        <link refid="pair_8h-source"/>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="678" relation="include">
        </childnode>
        <childnode refid="683" relation="include">
        </childnode>
      </node>
      <node id="717">
        <label>dataprovider.h</label>
        <link refid="dataprovider_8h-source"/>
        <childnode refid="709" relation="include">
        </childnode>
        <childnode refid="691" relation="include">
        </childnode>
      </node>
      <node id="665">
        <label>klustersview.h</label>
        <link refid="klustersview_8h-source"/>
        <childnode refid="666" relation="include">
        </childnode>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="669" relation="include">
        </childnode>
        <childnode refid="670" relation="include">
        </childnode>
        <childnode refid="671" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="695" relation="include">
        </childnode>
        <childnode refid="703" relation="include">
        </childnode>
      </node>
      <node id="664">
        <label>correlationview.cpp</label>
        <link refid="correlationview.cpp"/>
        <childnode refid="665" relation="include">
        </childnode>
        <childnode refid="708" relation="include">
        </childnode>
        <childnode refid="671" relation="include">
        </childnode>
        <childnode refid="720" relation="include">
        </childnode>
        <childnode refid="703" relation="include">
        </childnode>
        <childnode refid="678" relation="include">
        </childnode>
        <childnode refid="693" relation="include">
        </childnode>
        <childnode refid="683" relation="include">
        </childnode>
        <childnode refid="721" relation="include">
        </childnode>
        <childnode refid="699" relation="include">
        </childnode>
        <childnode refid="722" relation="include">
        </childnode>
        <childnode refid="723" relation="include">
        </childnode>
      </node>
      <node id="714">
        <label>qiconview.h</label>
      </node>
      <node id="674">
        <label>qvaluelist.h</label>
      </node>
      <node id="695">
        <label>viewwidget.h</label>
        <link refid="viewwidget_8h-source"/>
        <childnode refid="669" relation="include">
        </childnode>
        <childnode refid="696" relation="include">
        </childnode>
        <childnode refid="697" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="698" relation="include">
        </childnode>
      </node>
      <node id="700">
        <label>zoomwindow.h</label>
        <link refid="zoomwindow_8h-source"/>
        <childnode refid="701" relation="include">
        </childnode>
        <childnode refid="702" relation="include">
        </childnode>
        <childnode refid="693" relation="include">
        </childnode>
      </node>
      <node id="682">
        <label>qstring.h</label>
      </node>
      <node id="683">
        <label>stdlib.h</label>
      </node>
      <node id="709">
        <label>qobject.h</label>
      </node>
      <node id="718">
        <label>channelcolors.h</label>
        <link refid="channelcolors_8h-source"/>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="673" relation="include">
        </childnode>
        <childnode refid="674" relation="include">
        </childnode>
      </node>
      <node id="691">
        <label>kurl.h</label>
      </node>
      <node id="723">
        <label>kiconloader.h</label>
      </node>
      <node id="701">
        <label>qrect.h</label>
      </node>
      <node id="692">
        <label>stdexcept</label>
      </node>
      <node id="708">
        <label>klustersdoc.h</label>
        <link refid="klustersdoc_8h-source"/>
        <childnode refid="709" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="702" relation="include">
        </childnode>
        <childnode refid="710" relation="include">
        </childnode>
        <childnode refid="691" relation="include">
        </childnode>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="671" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="711" relation="include">
        </childnode>
        <childnode refid="716" relation="include">
        </childnode>
        <childnode refid="718" relation="include">
        </childnode>
        <childnode refid="719" relation="include">
        </childnode>
      </node>
      <node id="676">
        <label>array.h</label>
        <link refid="array_8h-source"/>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="678" relation="include">
        </childnode>
      </node>
      <node id="696">
        <label>qframe.h</label>
      </node>
      <node id="668">
        <label>kstatusbar.h</label>
      </node>
      <node id="673">
        <label>qcolor.h</label>
      </node>
      <node id="672">
        <label>qptrlist.h</label>
      </node>
      <node id="702">
        <label>qpoint.h</label>
      </node>
      <node id="679">
        <label>sortabletable.h</label>
        <link refid="sortabletable_8h-source"/>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
      </node>
      <node id="684">
        <label>clusteruserinformation.h</label>
        <link refid="clusteruserinformation_8h-source"/>
      </node>
      <node id="715">
        <label>qtooltip.h</label>
      </node>
      <node id="721">
        <label>qpaintdevice.h</label>
      </node>
      <node id="666">
        <label>kprinter.h</label>
      </node>
      <node id="719">
        <label>clustersprovider.h</label>
        <link refid="clustersprovider_8h-source"/>
        <childnode refid="717" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="709" relation="include">
        </childnode>
      </node>
      <node id="716">
        <label>tracesprovider.h</label>
        <link refid="tracesprovider_8h-source"/>
        <childnode refid="717" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="709" relation="include">
        </childnode>
      </node>
      <node id="694">
        <label>vector</label>
      </node>
      <node id="712">
        <label>qvariant.h</label>
      </node>
      <node id="671">
        <label>itemcolors.h</label>
        <link refid="itemcolors_8h-source"/>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="673" relation="include">
        </childnode>
        <childnode refid="674" relation="include">
        </childnode>
      </node>
      <node id="699">
        <label>qcursor.h</label>
      </node>
      <node id="667">
        <label>kdockwidget.h</label>
      </node>
      <node id="704">
        <label>qpainter.h</label>
      </node>
      <node id="693">
        <label>math.h</label>
      </node>
      <node id="720">
        <label>correlationthread.h</label>
        <link refid="correlationthread_8h-source"/>
        <childnode refid="703" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="681" relation="include">
        </childnode>
        <childnode refid="690" relation="include">
        </childnode>
      </node>
      <node id="669">
        <label>qwidget.h</label>
      </node>
      <node id="678">
        <label>iostream</label>
      </node>
      <node id="670">
        <label>qvaluevector.h</label>
      </node>
      <node id="690">
        <label>qthread.h</label>
      </node>
      <node id="710">
        <label>qfileinfo.h</label>
      </node>
      <node id="711">
        <label>clusterPalette.h</label>
        <link refid="clusterPalette_8h-source"/>
        <childnode refid="712" relation="include">
        </childnode>
        <childnode refid="669" relation="include">
        </childnode>
        <childnode refid="713" relation="include">
        </childnode>
        <childnode refid="714" relation="include">
        </childnode>
        <childnode refid="715" relation="include">
        </childnode>
        <childnode refid="678" relation="include">
        </childnode>
      </node>
      <node id="706">
        <label>qpointarray.h</label>
      </node>
      <node id="685">
        <label>qdict.h</label>
      </node>
      <node id="703">
        <label>correlationview.h</label>
        <link refid="correlationview_8h-source"/>
        <childnode refid="700" relation="include">
        </childnode>
        <childnode refid="695" relation="include">
        </childnode>
        <childnode refid="681" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="696" relation="include">
        </childnode>
        <childnode refid="704" relation="include">
        </childnode>
        <childnode refid="705" relation="include">
        </childnode>
        <childnode refid="697" relation="include">
        </childnode>
        <childnode refid="706" relation="include">
        </childnode>
        <childnode refid="707" relation="include">
        </childnode>
        <childnode refid="674" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
      </node>
      <node id="687">
        <label>qmap.h</label>
      </node>
      <node id="705">
        <label>qstyle.h</label>
      </node>
      <node id="689">
        <label>qmutex.h</label>
      </node>
      <node id="697">
        <label>qpixmap.h</label>
      </node>
      <node id="677">
        <label>cstring</label>
      </node>
      <node id="713">
        <label>qvbox.h</label>
      </node>
      <node id="675">
        <label>data.h</label>
        <link refid="data_8h-source"/>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="681" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="684" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="674" relation="include">
        </childnode>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
        <childnode refid="687" relation="include">
        </childnode>
        <childnode refid="688" relation="include">
        </childnode>
        <childnode refid="689" relation="include">
        </childnode>
        <childnode refid="690" relation="include">
        </childnode>
        <childnode refid="691" relation="include">
        </childnode>
        <childnode refid="678" relation="include">
        </childnode>
        <childnode refid="692" relation="include">
        </childnode>
        <childnode refid="693" relation="include">
        </childnode>
        <childnode refid="694" relation="include">
        </childnode>
      </node>
      <node id="680">
        <label>types.h</label>
        <link refid="types_8h-source"/>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correlationview.cpp<sp/><sp/>-<sp/><sp/>description</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>begin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Fri<sp/>Sep<sp/>26<sp/>2003</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>copyright<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(C)<sp/>2003<sp/>by<sp/>Lynn<sp/>Hazan</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>email<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>lynn.hazan@myrealbox.com</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//include<sp/>files<sp/>for<sp/>the<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;klustersview.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;klustersdoc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;itemcolors.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;correlationthread.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;correlationview.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//General<sp/>C++<sp/>include<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>files<sp/>for<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qpaintdevice.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qcursor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qpaintdevicemetrics.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>files<sp/>for<sp/>kde</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kiconloader.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CorrelationView::XMARGIN<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CorrelationView::YMARGIN<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">CorrelationView::CorrelationView(<ref refid="classKlustersDoc" kindref="compound">KlustersDoc</ref>&amp;<sp/>doc,<ref refid="classKlustersView" kindref="compound">KlustersView</ref>&amp;<sp/>view,QColor<sp/>backgroundColor,KStatusBar<sp/>*<sp/>statusBar,QWidget*<sp/>parent,<ref refid="classData_17c467cbdd19a0b0ccde482baed716155" kindref="member">Data::ScaleMode</ref><sp/>scale,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>binSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>correlationTimeFrame,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shoulderLine,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowTopLeft<sp/>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowBottomRight,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>border)<sp/>:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="classViewWidget" kindref="compound">ViewWidget</ref>(doc,view,backgroundColor,statusBar,parent,name,minSize,maxSize,windowTopLeft,windowBottomRight,border,XMARGIN,YMARGIN),</highlight></codeline>
<codeline lineno="47"><highlight class="normal">scaleMode(scale),dataReady(true),binSize(binSize),timeWindow(correlationTimeFrame),shoulderLine(shoulderLine),</highlight></codeline>
<codeline lineno="48"><highlight class="normal">isZoomed(false),goingToDie(false),printState(false){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>list<sp/>owns<sp/>its<sp/>objects,<sp/>it<sp/>will<sp/>delete<sp/>the<sp/>items<sp/>that<sp/>are<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/>threadsToBeKill.setAutoDelete(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//The<sp/>treads<sp/>will<sp/>be<sp/>delete<sp/>only<sp/>from<sp/>threadsToBeKill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>only<sp/>mode<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/>mode<sp/>=<sp/>ZOOM;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>drawing<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/>nbBins<sp/>=<sp/>timeWindow<sp/>/<sp/>binSize;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/>binWidth<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/>widthBorder<sp/>=<sp/>(nbBins<sp/>*<sp/>binWidth)<sp/>/<sp/>30;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/>heightBorder<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/>Xspace<sp/>=<sp/>(nbBins<sp/>*<sp/>binWidth)<sp/>/<sp/>10;<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/>Yspace<sp/>=<sp/>40;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/>YsizeForMaxAmp<sp/>=<sp/>200;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(scale<sp/>==<sp/>Data::RAW)<sp/>Yfactor<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>Yfactor<sp/>=<sp/>YsizeForMaxAmp;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/>shift<sp/>=<sp/>nbBins<sp/>*<sp/>binWidth<sp/>+<sp/>Xspace;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/></highlight><highlight class="comment">//Compute<sp/>variable<sp/>to<sp/>draw<sp/>tick<sp/>marks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((timeWindow<sp/>-<sp/>1)/2<sp/>&lt;=<sp/>30)<sp/>n<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((timeWindow<sp/>-<sp/>1)/2<sp/>&gt;<sp/>30<sp/>&amp;&amp;<sp/>(timeWindow<sp/>-<sp/>1)/2<sp/>&lt;=<sp/>100)<sp/>n<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((timeWindow<sp/>-<sp/>1)/2<sp/>&gt;=<sp/>100)<sp/>n<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixelPerTimeWindow<sp/>=<sp/>(timeWindow<sp/>*<sp/>binWidth)<sp/>/<sp/>binSize;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/>tickMarkStep<sp/>=<sp/>static_cast&lt;float&gt;(pixelPerTimeWindow<sp/>*<sp/>n)<sp/>/<sp/>static_cast&lt;float&gt;(timeWindow);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/>nbTickMarks<sp/>=<sp/>static_cast&lt;int&gt;(floor(0.5<sp/>+<sp/>static_cast&lt;float&gt;((timeWindow/2)<sp/>/<sp/>static_cast&lt;float&gt;(n))));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/>tickMarkZero<sp/>=<sp/>((nbBins<sp/>-<sp/>1)/2)*<sp/>binWidth<sp/>+<sp/>binWidth/2;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/>abscissaMin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/>ordinateMax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/></highlight><highlight class="comment">//Create<sp/>the<sp/>pairs<sp/>for<sp/>the<sp/>clusters<sp/>to<sp/>show.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QValueList&lt;int&gt;&amp;<sp/>shownClusters<sp/>=<sp/>view.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/>QValueList&lt;int&gt;<sp/>clusters;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/>QValueList&lt;int&gt;::const_iterator<sp/>clustersIterator;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(clustersIterator<sp/>=<sp/>shownClusters.begin();<sp/>clustersIterator<sp/>!=<sp/>shownClusters.end();<sp/>++clustersIterator)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>clusters.append(*clustersIterator);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/>qHeapSort(clusters);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>clusters.begin();<sp/>iterator<sp/>!=<sp/>clusters.end();<sp/>++iterator){<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator2;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator2<sp/>=<sp/>clusters.at(i);<sp/>iterator2<sp/>!=<sp/>clusters.end();<sp/>++iterator2){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>pairs<sp/>as<sp/>(*iterator,*iterator2)<sp/>where<sp/>*iterator<sp/>&lt;=<sp/>*iterator2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>pairs.append(<ref refid="classPair" kindref="compound">Pair</ref>(*iterator,*iterator2));<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/>updateWindow();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>cursor<sp/>shap<sp/>to<sp/>a<sp/>magnifier<sp/>as<sp/>the<sp/>only<sp/>action<sp/>allowed<sp/>on<sp/>the<sp/>widget<sp/>is<sp/>to<sp/>zoom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/>setCursor(zoomCursor);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/></highlight><highlight class="comment">//Allowed<sp/>the<sp/>mouse<sp/>tracking<sp/>to<sp/>write<sp/>the<sp/>time<sp/>in<sp/>the<sp/>status<sp/>bar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/>setMouseTracking(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>;<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">CorrelationView::~CorrelationView(){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Ask<sp/>the<sp/>threads<sp/>to<sp/>stop<sp/>as<sp/>soon<sp/>as<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="classCorrelationView_169e2da1530baf98d91c23cb7d511b57e" kindref="member">willBeKilled</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/></highlight><highlight class="comment">//Wait<sp/>until<sp/>all<sp/>the<sp/>threads<sp/>have<sp/>finish<sp/>before<sp/>quiting<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>it<sp/>may<sp/>endup<sp/>in<sp/>a<sp/>crash<sp/>of<sp/>the<sp/>application.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classCorrelationThread" kindref="compound">CorrelationThread</ref>*<sp/>correlationThread<sp/>=<sp/>threadsToBeKill.first();<sp/>correlationThread;<sp/>correlationThread<sp/>=<sp/>threadsToBeKill.next())</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!correlationThread-&gt;wait()){};<sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCorrelationView_17c3b1d86f16ff64063e15d6e3862e609" kindref="member">CorrelationView::isThreadsRunning</ref>(){<sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(threadsToBeKill.count()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCorrelationView_11cce3f7197c35df432ade45c99d30576" kindref="member">CorrelationView::singleColorUpdate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clusterId,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>active){</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(active){</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Add<sp/>the<sp/>pairs<sp/>link<sp/>to<sp/>the<sp/>cluster<sp/>id<sp/>to<sp/>the<sp/>pairUpdateList,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>they<sp/>will<sp/>be<sp/>updated<sp/>during<sp/>the<sp/>next<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QValueList&lt;int&gt;&amp;<sp/>shownClusters<sp/>=<sp/><ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::ConstIterator<sp/>iterator;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>shownClusters.begin();<sp/>iterator<sp/>!=<sp/>shownClusters.end();<sp/>++iterator){</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>pairs<sp/>as<sp/>(*iterator,clusterId)<sp/>where<sp/>*iterator<sp/>&lt;=<sp/>clusterId</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>(clusterId,*iterator)<sp/>where<sp/>*iterator<sp/>&gt;<sp/>clusterId</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*iterator<sp/>&lt;=<sp/>clusterId)<sp/>pairUpdateList.append(<ref refid="classPair" kindref="compound">Pair</ref>(*iterator,clusterId));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>pairUpdateList.append(<ref refid="classPair" kindref="compound">Pair</ref>(clusterId,*iterator));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>REFRESH)<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>UPDATE;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Update<sp/>drawContentsMode<sp/>if<sp/>need<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>REFRESH<sp/>||<sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>UPDATE)<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCorrelationView_15f9ce44825e70860badcb3a24728c445" kindref="member">CorrelationView::addClusterToView</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clusterId,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>active){</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/>isZoomed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight><highlight class="comment">//Hack<sp/>because<sp/>all<sp/>the<sp/>tabs<sp/>share<sp/>the<sp/>same<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/></highlight><highlight class="comment">//Update<sp/>drawContentsMode<sp/>if<sp/>need<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>REFRESH<sp/>||<sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>UPDATE)<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>thread<sp/>to<sp/>get<sp/>the<sp/>correlation<sp/>data<sp/>for<sp/>all<sp/>the<sp/>clusters<sp/>shown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(active<sp/>&amp;&amp;<sp/><ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>setCursor(Qt::WaitCursor);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>askForCorrelograms();<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCorrelationView_1fb43ce4935ec46dbaceb05a52443b07e" kindref="member">CorrelationView::removeClusterFromView</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clusterId,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>active){</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/>isZoomed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight><highlight class="comment">//Hack<sp/>because<sp/>all<sp/>the<sp/>tabs<sp/>share<sp/>the<sp/>same<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/></highlight><highlight class="comment">//Update<sp/>drawContentsMode<sp/>if<sp/>need<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>REFRESH<sp/>||<sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>UPDATE)<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>thread<sp/>to<sp/>get<sp/>the<sp/>correlation<sp/>data<sp/>for<sp/>all<sp/>the<sp/>clusters<sp/>shown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(active<sp/>&amp;&amp;<sp/><ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>setCursor(Qt::WaitCursor);<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>askForCorrelograms();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>==<sp/>0)<sp/>pairs.clear();</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCorrelationView_1c79adac747e0f7f01b1a83117c0567cc" kindref="member">CorrelationView::addNewClusterToView</ref>(QValueList&lt;int&gt;&amp;<sp/>fromClusters,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clusterId,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>active){</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/>isZoomed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight><highlight class="comment">//Hack<sp/>because<sp/>all<sp/>the<sp/>tabs<sp/>share<sp/>the<sp/>same<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/></highlight><highlight class="comment">//Update<sp/>drawContentsMode<sp/>if<sp/>need<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>REFRESH<sp/>||<sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>UPDATE)<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(active<sp/>&amp;&amp;<sp/><ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>setCursor(Qt::WaitCursor);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>askForCorrelograms();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCorrelationView_11adc1f05348a92fb51476da561fc0c9d" kindref="member">CorrelationView::spikesRemovedFromClusters</ref>(QValueList&lt;int&gt;&amp;<sp/>fromClusters,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>active){</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/>isZoomed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight><highlight class="comment">//Hack<sp/>because<sp/>all<sp/>the<sp/>tabs<sp/>share<sp/>the<sp/>same<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/></highlight><highlight class="comment">//Update<sp/>drawContentsMode<sp/>if<sp/>need<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>REFRESH<sp/>||<sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>UPDATE)<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>thread<sp/>to<sp/>get<sp/>the<sp/>correlation<sp/>data<sp/>for<sp/>all<sp/>the<sp/>clusters<sp/>shown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(active<sp/>&amp;&amp;<sp/><ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>setCursor(Qt::WaitCursor);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>askForCorrelograms();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>==<sp/>0)<sp/>pairs.clear();<sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCorrelationView_10a11205d646f343e86cfa8f2a03f02f5" kindref="member">CorrelationView::spikesAddedToCluster</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clusterId,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>active){</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/>isZoomed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight><highlight class="comment">//Hack<sp/>because<sp/>all<sp/>the<sp/>tabs<sp/>share<sp/>the<sp/>same<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/></highlight><highlight class="comment">//Update<sp/>drawContentsMode<sp/>if<sp/>need<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>REFRESH<sp/>||<sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>UPDATE)<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>thread<sp/>to<sp/>get<sp/>the<sp/>correlation<sp/>data<sp/>for<sp/>all<sp/>the<sp/>clusters<sp/>shown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(active<sp/>&amp;&amp;<sp/><ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>setCursor(Qt::WaitCursor);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>askForCorrelograms();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCorrelationView_110d889c2c1c57551160d930aed9aae4e" kindref="member">CorrelationView::drawContents</ref>(QPainter<sp/>*p){<sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>UPDATE<sp/>||<sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>REDRAW)<sp/>&amp;&amp;<sp/>dataReady){</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>QRect<sp/>contentsRec<sp/>=<sp/>contentsRect();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>window<sp/>(part<sp/>of<sp/>the<sp/>world<sp/>I<sp/>want<sp/>to<sp/>show)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>QRect<sp/>r((QRect)<ref refid="classBaseFrame_15b9fe7f64b7737c193c4427a5ab8c271" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>border<sp/>is<sp/>not<sp/>visible<sp/>(the<sp/>user<sp/>zoomed<sp/>without<sp/>taking<sp/>it<sp/>in<sp/>his<sp/>selection),<sp/>the<sp/>viewport<sp/>and<sp/>the<sp/>contentsRec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//have<sp/>the<sp/>same<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r.left()<sp/>!=<sp/>0)<sp/>viewport<sp/>=<sp/>QRect(contentsRec.left(),contentsRec.top(),contentsRec.width(),contentsRec.height()<sp/>-10);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>viewport<sp/>=<sp/>QRect(contentsRec.left()<sp/>+<sp/>XMARGIN,contentsRec.top(),contentsRec.width()<sp/>-<sp/>XMARGIN,contentsRec.height()<sp/>-10);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Resize<sp/>the<sp/>double<sp/>buffer<sp/>with<sp/>the<sp/>width<sp/>and<sp/>the<sp/>height<sp/>of<sp/>the<sp/>widget(QFrame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>.resize(contentsRec.width(),contentsRec.height());</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>painter<sp/>to<sp/>paint<sp/>on<sp/>the<sp/>double<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>QPainter<sp/>painter;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>painter.begin(&amp;<ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>painter.setWindow(r.left(),r.top(),r.width()-1,r.height()-1);</highlight><highlight class="comment">//hack<sp/>because<sp/>Qt<sp/>QRect<sp/>is<sp/>used<sp/>differently<sp/>in<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>viewport<sp/>(part<sp/>of<sp/>the<sp/>device<sp/>I<sp/>want<sp/>to<sp/>write<sp/>on).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//By<sp/>default,<sp/>the<sp/>viewport<sp/>is<sp/>the<sp/>same<sp/>as<sp/>the<sp/>device&apos;s<sp/>rectangle<sp/>(contentsRec),<sp/>taking<sp/>a<sp/>smaller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//one<sp/>will<sp/>ensure<sp/>that<sp/>the<sp/>legends<sp/>(cluster<sp/>ids)<sp/>will<sp/>not<sp/>ovelap<sp/>a<sp/>correlogram.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>painter.setViewport(viewport);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>REDRAW){</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Fill<sp/>the<sp/>double<sp/>buffer<sp/>with<sp/>the<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>.fill(backgroundColor());</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Paint<sp/>all<sp/>the<sp/>correlograms<sp/>in<sp/>the<sp/>pairs<sp/>list<sp/>(in<sp/>the<sp/>double<sp/>buffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/>drawCorrelograms(painter,pairs);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>update<sp/>mode<sp/>applies<sp/>only<sp/>when<sp/>the<sp/>color<sp/>of<sp/>a<sp/>cluster<sp/>has<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>UPDATE){<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Paint<sp/>the<sp/>correlograms<sp/>contained<sp/>in<sp/>clusterUpdateList</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>drawCorrelograms(painter,pairUpdateList);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Reset<sp/>the<sp/>pairUpdateList<sp/>list<sp/>for<sp/>the<sp/>next<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>pairUpdateList.clear();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//reset<sp/>transformation<sp/>due<sp/>to<sp/>setWindow<sp/>and<sp/>setViewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>painter.resetXForm()<sp/>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>cluster<sp/>Ids<sp/>along<sp/>the<sp/>correlograms.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>drawClusterIds(painter);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Closes<sp/>the<sp/>painter<sp/>on<sp/>the<sp/>double<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>painter.end();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Back<sp/>to<sp/>the<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REFRESH;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/></highlight><highlight class="comment">//if<sp/>drawContentsMode<sp/>==<sp/>REFRESH,<sp/>we<sp/>reuse<sp/>the<sp/>double<sp/>buffer<sp/>(pixmap)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>double<sp/>buffer<sp/>(pixmap)<sp/>by<sp/>copying<sp/>it<sp/>into<sp/>the<sp/>widget<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/>p-&gt;drawPixmap(0,<sp/>0,<sp/><ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/>setCursor(<ref refid="classBaseFrame_1a6054da9012b308d2c041ec63df5b5cd" kindref="member">zoomCursor</ref>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><ref refid="classCorrelationThread" kindref="compound">CorrelationThread</ref>*<sp/>CorrelationView::getCorrelations(QValueList&lt;Pair&gt;*<sp/>pairsToCompute,QValueList&lt;int&gt;<sp/>clusterIds){</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>creation<sp/>of<sp/>a<sp/>thread<sp/>automatically<sp/>start<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classCorrelationThread" kindref="compound">CorrelationThread</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_196ee8dbf3a50f580d76f024c281f7a45" kindref="member">data</ref>(),pairsToCompute,clusterIds);</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CorrelationView::askForCorrelograms(){<sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//If<sp/>the<sp/>widget<sp/>is<sp/>not<sp/>about<sp/>to<sp/>be<sp/>deleted,<sp/>request<sp/>the<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!goingToDie){</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>dataReady<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Compute<sp/>the<sp/>pairs<sp/>for<sp/>all<sp/>the<sp/>clusters<sp/>currently<sp/>shown.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QValueList&lt;int&gt;&amp;<sp/>shownClusters<sp/>=<sp/><ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;<sp/>clusters;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::const_iterator<sp/>clustersIterator;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(clustersIterator<sp/>=<sp/>shownClusters.begin();<sp/>clustersIterator<sp/>!=<sp/>shownClusters.end();<sp/>++clustersIterator)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>clusters.append(*clustersIterator);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>qHeapSort(clusters);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>pairs.clear();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>QValueList&lt;Pair&gt;*<sp/>clusterPairs<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QValueList&lt;Pair&gt;();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>clusters.begin();<sp/>iterator<sp/>!=<sp/>clusters.end();<sp/>++iterator){</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator2;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator2<sp/>=<sp/>clusters.at(i);<sp/>iterator2<sp/>!=<sp/>clusters.end();<sp/>++iterator2){</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>pairs<sp/>as<sp/>(*iterator,*iterator2)<sp/>where<sp/>*iterator<sp/>&lt;=<sp/>*iterator2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>pairs.append(<ref refid="classPair" kindref="compound">Pair</ref>(*iterator,*iterator2));</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>clusterPairs-&gt;append(<ref refid="classPair" kindref="compound">Pair</ref>(*iterator,*iterator2));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>thread<sp/>to<sp/>get<sp/>the<sp/>correlation<sp/>data<sp/>for<sp/>that<sp/>cluster.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><ref refid="classCorrelationThread" kindref="compound">CorrelationThread</ref>*<sp/>correlationThread<sp/>=<sp/>getCorrelations(clusterPairs,clusters);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>threadsToBeKill.append(correlationThread);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCorrelationView_18fc5bd0976048ca1a31f15d028b29d69" kindref="member">CorrelationView::customEvent</ref>(QCustomEvent*<sp/>event){</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/></highlight><highlight class="comment">//Event<sp/>sent<sp/>by<sp/>a<sp/>CorrelationThread<sp/>to<sp/>inform<sp/>that<sp/>the<sp/>data<sp/>are<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(event-&gt;type()<sp/>==<sp/>QEvent::User<sp/>+<sp/>300){</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><ref refid="classCorrelationThread_1_1CorrelationsEvent" kindref="compound">CorrelationThread::CorrelationsEvent</ref>*<sp/>correlationEvent<sp/>=<sp/>(<ref refid="classCorrelationThread_1_1CorrelationsEvent" kindref="compound">CorrelationThread::CorrelationsEvent</ref>*)<sp/>event;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>event<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><ref refid="classCorrelationThread" kindref="compound">CorrelationThread</ref>*<sp/>correlationThread<sp/>=<sp/>correlationEvent-&gt;parentThread();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>to<sp/>be<sp/>sure<sp/>the<sp/>thread<sp/>has<sp/>return<sp/>from<sp/>his<sp/>run<sp/>method.<sp/>Even<sp/>if<sp/>the<sp/>send<sp/>of<sp/>the<sp/>event<sp/>is<sp/>the<sp/>last</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//action<sp/>of<sp/>the<sp/>run<sp/>method<sp/>it<sp/>seems<sp/>that<sp/>the<sp/>event<sp/>loop<sp/>can<sp/>be<sp/>pretty<sp/>fast<sp/>and<sp/>the<sp/>run<sp/>has<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//return<sp/>when<sp/>the<sp/>event<sp/>is<sp/>received<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!correlationThread-&gt;wait()){};</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Delete<sp/>the<sp/>correlationThread,<sp/>this<sp/>is<sp/>done<sp/>by<sp/>removing<sp/>it<sp/>from<sp/>threadsToBeKill<sp/>as<sp/>auto-deletion<sp/>is<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>threadsToBeKill.remove(correlationThread);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!goingToDie){</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Each<sp/>time<sp/>a<sp/>cluster<sp/>is<sp/>added<sp/>to<sp/>the<sp/>view<sp/>or<sp/>modified,<sp/>the<sp/>size<sp/>of<sp/>the<sp/>window<sp/>is<sp/>recalculated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isZoomed)<sp/>updateWindow();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/>dataReady<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//setCursor(zoomCursor);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>widget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/>update();</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CorrelationView::updateWindow(){</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbOfClusters<sp/>=<sp/><ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/>abscissaMax<sp/>=<sp/>2<sp/>*<sp/>widthBorder<sp/>+<sp/>(nbBins<sp/>*<sp/>binWidth<sp/>*<sp/>nbOfClusters)<sp/>+<sp/>(nbOfClusters<sp/>-<sp/>1)<sp/>*<sp/>Xspace;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/>ordinateMin<sp/>=<sp/>-(2<sp/>*<sp/>heightBorder<sp/>+<sp/>static_cast&lt;long&gt;(nbOfClusters<sp/>*<sp/>YsizeForMaxAmp)<sp/>+<sp/>(nbOfClusters<sp/>-<sp/>1)<sp/>*<sp/>Yspace);<sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><ref refid="classBaseFrame_15b9fe7f64b7737c193c4427a5ab8c271" kindref="member">window</ref><sp/>=<sp/><ref refid="classZoomWindow" kindref="compound">ZoomWindow</ref>(QRect(QPoint(abscissaMin,ordinateMin),QPoint(abscissaMax,ordinateMax)));</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/></highlight><highlight class="comment">//update<sp/>the<sp/>drawing<sp/>mode<sp/>if<sp/>needed<sp/>(if<sp/>UPDATE,<sp/>no<sp/>change<sp/>is<sp/>need<sp/>it).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>REFRESH)<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;<sp/><sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CorrelationView::drawCorrelograms(QPainter&amp;<sp/>painter,QValueList&lt;Pair&gt;&amp;<sp/>pairList){<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/></highlight><highlight class="comment">//Clear<sp/>the<sp/>firing<sp/>rate<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>firingRates.clear();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/></highlight><highlight class="comment">//Sort<sp/>the<sp/>pair<sp/>so<sp/>the<sp/>drawing<sp/>will<sp/>be<sp/>simplified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/>qHeapSort(pairList);<sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/></highlight><highlight class="comment">//Loop<sp/>on<sp/>the<sp/>pairs<sp/>to<sp/>be<sp/>drawn.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/>QValueList&lt;Pair&gt;::iterator<sp/>pairIterator;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><ref refid="classItemColors" kindref="compound">ItemColors</ref>&amp;<sp/>clusterColors<sp/>=<sp/><ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_16cae6993a1d1aadb8d9350095c83d580" kindref="member">clusterColors</ref>();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><ref refid="classData" kindref="compound">Data</ref>&amp;<sp/>clusteringData<sp/>=<sp/><ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_196ee8dbf3a50f580d76f024c281f7a45" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>abscissa<sp/>of<sp/>the<sp/>system<sp/>coordinate<sp/>center<sp/>for<sp/>the<sp/>current<sp/>correlogram.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/>uint<sp/>X<sp/>=<sp/>widthBorder;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>ordinate<sp/>of<sp/>the<sp/>system<sp/>coordinate<sp/>center<sp/>for<sp/>the<sp/>current<sp/>correlogram.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/>uint<sp/>Y<sp/>=<sp/>heightBorder;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/></highlight><highlight class="comment">//Number<sp/>of<sp/>verticals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verticalNb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/></highlight><highlight class="comment">//Clusters<sp/>corresponding<sp/>to<sp/>the<sp/>previous<sp/>pair,<sp/>they<sp/>are<sp/>initialized<sp/>with<sp/>the<sp/>first<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>previousCluster1<sp/>=<sp/>pairList[0].getX();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>previousCluster2<sp/>=<sp/>pairList[0].getY();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/>QColor<sp/>clusterColor;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/></highlight><highlight class="comment">//If<sp/>it<sp/>is<sp/>an<sp/>update<sp/>that<sp/>means<sp/>that<sp/>there<sp/>some<sp/>correlograms<sp/>to<sp/>redraw.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>position<sp/>of<sp/>those<sp/>clusters<sp/>in<sp/>the<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/></highlight><highlight class="comment">//has<sp/>to<sp/>been<sp/>find<sp/>in<sp/>order<sp/>to<sp/>redraw<sp/>them<sp/>at<sp/>the<sp/>correct<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>specificPosition<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/>QValueList&lt;int&gt;<sp/>shownClusters;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>UPDATE){</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>specificPosition<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::const_iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clusters<sp/>=<sp/><ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>clusters.begin();<sp/>iterator<sp/>!=<sp/>clusters.end();<sp/>++iterator)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/>shownClusters.append(*iterator);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>qHeapSort(shownClusters);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(pairIterator<sp/>=<sp/>pairList.begin();<sp/>pairIterator<sp/>!=<sp/>pairList.end();<sp/>++pairIterator){</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cluster1<sp/>=<sp/>(*pairIterator).getX();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cluster2<sp/>=<sp/>(*pairIterator).getY();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>iterator<sp/>on<sp/>the<sp/>values<sp/>of<sp/>the<sp/>current<sp/>correlogram.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><ref refid="classData_1_1CorrelogramIterator" kindref="compound">Data::CorrelogramIterator</ref><sp/>iterator<sp/>=<sp/>clusteringData.<ref refid="classData_1ef7d28f6ad82ebdeb45a1ce933f59a01" kindref="member">correlogramIterator</ref>(*pairIterator,scaleMode,binSize,timeWindow);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!iterator.<ref refid="classData_1_1CorrelogramIterator_1a98c006c41167c9148ce7ff5f1aab045" kindref="member">isDataAvailable</ref>())<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Find<sp/>the<sp/>position<sp/>of<sp/>the<sp/>next<sp/>correlogram.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(specificPosition){</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index1<sp/>=<sp/>shownClusters.findIndex(cluster1);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index2<sp/>=<sp/>shownClusters.findIndex(cluster2);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/>X<sp/>=<sp/>widthBorder<sp/>+<sp/>index1<sp/>*<sp/>shift;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/>Y<sp/>=<sp/>heightBorder<sp/>+<sp/>index2<sp/>*<sp/>(YsizeForMaxAmp<sp/>+<sp/>Yspace);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>correlogram<sp/>will<sp/>be<sp/>place<sp/>on<sp/>the<sp/>current<sp/>vertical.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cluster1<sp/>==<sp/>previousCluster1<sp/>&amp;&amp;<sp/>cluster2<sp/>!=<sp/>previousCluster2){</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>Y<sp/>+=<sp/>(YsizeForMaxAmp<sp/>+<sp/>Yspace);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>correlogram<sp/>will<sp/>be<sp/>place<sp/>on<sp/>a<sp/>new<sp/>vertical.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cluster1<sp/>!=<sp/>previousCluster1){</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>X<sp/>+=<sp/>shift;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>verticalNb++;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>Y<sp/>=<sp/>verticalNb<sp/>*<sp/>(YsizeForMaxAmp<sp/>+<sp/>Yspace)<sp/>+<sp/>heightBorder;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Update<sp/>previousCluster1<sp/>and<sp/>previousCluster2<sp/>for<sp/>the<sp/>next<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>previousCluster1<sp/>=<sp/>cluster1;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>previousCluster2<sp/>=<sp/>cluster2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cluster1<sp/>==<sp/>cluster2){</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>firing<sp/>rate<sp/>and<sp/>ensure<sp/>that<sp/>there<sp/>always<sp/>2<sp/>digits<sp/>after<sp/>the<sp/>dot.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>firingRate<sp/>=<sp/>iterator.<ref refid="classData_1_1CorrelogramIterator_1e6296c71c47d623edeb6aec0363bf7e1" kindref="member">getFiringRate</ref>();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/>firingRate<sp/>=<sp/>floor((firingRate<sp/>*<sp/>100)<sp/>+<sp/>0.5)<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/>QString<sp/>firingRateString<sp/>=<sp/>QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(firingRate);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/>QStringList<sp/>parts<sp/>=<sp/>QStringList::split(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">,<sp/>firingRateString);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parts.count()<sp/>==<sp/>1)<sp/>firingRateString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;.00&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>precision<sp/>=<sp/>parts[1];</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(precision.length()<sp/>==<sp/>1)<sp/>firingRateString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/>firingRates.insert(cluster1,firingRateString);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>color<sp/>associated<sp/>with<sp/>the<sp/>cluster<sp/>and<sp/>set<sp/>the<sp/>color<sp/>to<sp/>use<sp/>to<sp/>this<sp/>color.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/>clusterColor<sp/>=<sp/>clusterColors.<ref refid="classItemColors_15331e934e03ba6a5bb2cae1eae5d75bc" kindref="member">color</ref>(cluster1);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/>painter.setBrush(QBrush(clusterColor));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Do<sp/>not<sp/>draw<sp/>the<sp/>outlines<sp/>of<sp/>the<sp/>rectangles<sp/>if<sp/>there<sp/>is<sp/>more<sp/>than<sp/>one<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/>painter.setPen(NoPen);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Use<sp/>white<sp/>to<sp/>draw<sp/>if<sp/>the<sp/>background<sp/>is<sp/>dark<sp/>(the<sp/>legend<sp/>is<sp/>then<sp/>white)<sp/>and<sp/>grey<sp/>if<sp/>it<sp/>is<sp/>white.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_146ae781de9307957e8a1eb0a5f5a64c6" kindref="member">colorLegend</ref><sp/>==<sp/>white)<sp/>clusterColor<sp/>=<sp/>white;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>clusterColor<sp/>=<sp/>gray;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/>painter.setBrush(QBrush(clusterColor));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Do<sp/>not<sp/>draw<sp/>the<sp/>outlines<sp/>of<sp/>the<sp/>rectangles<sp/>if<sp/>there<sp/>is<sp/>more<sp/>than<sp/>one<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/>painter.setPen(NoPen);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>uint<sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>clip<sp/>region<sp/>to<sp/>the<sp/>rectangle<sp/>defined<sp/>by<sp/>a<sp/>correlogram<sp/>unit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>view<sp/>is<sp/>been<sp/>printed,<sp/>a<sp/>clip<sp/>region<sp/>has<sp/>been<sp/>created,<sp/>take<sp/>it<sp/>into<sp/>account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(printState){</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/>QRegion<sp/>region<sp/>=<sp/>QRegion<sp/>(X,-(Y+YsizeForMaxAmp),binWidth<sp/>*<sp/>nbBins<sp/>+<sp/>1,YsizeForMaxAmp<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/>QRegion<sp/>intersection<sp/>=<sp/>printRegion.intersect(region);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/>painter.setClipRegion(intersection,QPainter::CoordPainter);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>painter.setClipRect(X,-(Y+YsizeForMaxAmp),binWidth<sp/>*<sp/>nbBins<sp/>+<sp/>1,YsizeForMaxAmp<sp/>+<sp/>1,QPainter::CoordPainter);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Iterate<sp/>over<sp/>the<sp/>values<sp/>of<sp/>the<sp/>current<sp/>correlogram<sp/>and<sp/>draw<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;iterator.<ref refid="classData_1_1CorrelogramIterator_1b2eccc91df3676d3b048658c02d4dc2d" kindref="member">hasNext</ref>();){</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>point<sp/>is<sp/>drawn<sp/>in<sp/>the<sp/>QT<sp/>coordinate<sp/>system<sp/>where<sp/>the<sp/>Y<sp/>axis<sp/>in<sp/>oriented<sp/>downwards</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>value<sp/>receive<sp/>from<sp/>the<sp/>iterator<sp/>is<sp/>already<sp/>inverted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>iterator.<ref refid="classData_1_1CorrelogramIterator_111016cf656f0c1f124f7bb2691d74a6b" kindref="member">next</ref>();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>-Y<sp/>+<sp/>static_cast&lt;int&gt;(value<sp/>*<sp/>Yfactor);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/>painter.drawRect(x<sp/>+<sp/>X,y,binWidth<sp/>+<sp/>1,-<sp/>static_cast&lt;int&gt;(value<sp/>*<sp/>Yfactor)<sp/><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/>x<sp/>+=<sp/>binWidth;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>a<sp/>bottom<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(printState)<sp/>painter.setClipRegion(printRegion,QPainter::CoordPainter);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>painter.setClipping(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>painter.setPen(clusterColor);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>painter.drawLine(X<sp/>-<sp/>(Xspace/5),-Y,X<sp/>+<sp/>(binWidth<sp/>*<sp/>nbBins)<sp/>+<sp/>(Xspace/5),-Y);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>time<sp/>marks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>painter.drawLine(X<sp/>+<sp/>tickMarkZero,-Y,X<sp/>+<sp/>tickMarkZero,-Y<sp/>+<sp/>5);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i&lt;=nbTickMarks;++i){</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>static_cast&lt;int&gt;(floor(0.5<sp/>+<sp/>(i<sp/>*<sp/>tickMarkStep)));</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/>painter.drawLine(X<sp/>+<sp/>tickMarkZero<sp/>+<sp/>step,-Y,X<sp/>+<sp/>tickMarkZero<sp/>+<sp/>step,-Y<sp/>+<sp/>5);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/>painter.drawLine(X<sp/>+<sp/>tickMarkZero<sp/>-<sp/>step,-Y,X<sp/>+<sp/>tickMarkZero<sp/>-<sp/>step,-Y<sp/>+<sp/>5);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>shoulder<sp/>dash<sp/>line<sp/>if<sp/>asked<sp/>for.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(shoulderLine){</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/>painter.setPen(QPen(QColor(60,60,60),0,Qt::DotLine));</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>-Y<sp/>+<sp/>static_cast&lt;int&gt;(iterator.<ref refid="classData_1_1CorrelogramIterator_11eb15e1b5816ec4d3ee786d95292a29c" kindref="member">getScaledShoulder</ref>()<sp/>*<sp/>Yfactor);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/>painter.drawLine(X<sp/>-<sp/>(Xspace/10),y,X<sp/>+<sp/>(binWidth<sp/>*<sp/>nbBins)<sp/>+<sp/>(Xspace/10),y);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCorrelationView_126ebf78ff31269ad6e682f72df11d8f9" kindref="member">CorrelationView::setBinSizeAndTimeWindow</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width){</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/>binSize<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/>timeWindow<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/>nbBins<sp/>=<sp/>timeWindow<sp/>/<sp/>binSize;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/>Xspace<sp/>=<sp/>(nbBins<sp/>*<sp/>binWidth)<sp/>/<sp/>10;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/>widthBorder<sp/>=<sp/>(nbBins<sp/>*<sp/>binWidth)<sp/>/<sp/>30;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/>shift<sp/>=<sp/>nbBins<sp/>*<sp/>binWidth<sp/>+<sp/>Xspace;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/></highlight><highlight class="comment">//Compute<sp/>variable<sp/>to<sp/>draw<sp/>tick<sp/>marks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((timeWindow<sp/>-<sp/>1)/2<sp/>&lt;=<sp/>30)<sp/>n<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((timeWindow<sp/>-<sp/>1)/2<sp/>&gt;<sp/>30<sp/>&amp;&amp;<sp/>(timeWindow<sp/>-<sp/>1)/2<sp/>&lt;=<sp/>100)<sp/>n<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((timeWindow<sp/>-<sp/>1)/2<sp/>&gt;=<sp/>100)<sp/>n<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixelPerTimeWindow<sp/>=<sp/>(timeWindow<sp/>*<sp/>binWidth)<sp/>/<sp/>binSize;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/>tickMarkStep<sp/>=<sp/>static_cast&lt;float&gt;(pixelPerTimeWindow<sp/>*<sp/>n)<sp/>/<sp/>static_cast&lt;float&gt;(timeWindow);<sp/></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/>nbTickMarks<sp/>=<sp/>static_cast&lt;int&gt;(floor(0.5<sp/>+<sp/>static_cast&lt;float&gt;((timeWindow/2)<sp/>/<sp/>static_cast&lt;float&gt;(n))));</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/>tickMarkZero<sp/>=<sp/>((nbBins<sp/>-<sp/>1)/2)*<sp/>binWidth<sp/>+<sp/>binWidth/2;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/></highlight><highlight class="comment">//To<sp/>be<sp/>sure<sp/>to<sp/>correctly<sp/>redraw<sp/>the<sp/>correlograms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/>isZoomed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>data<sp/>have<sp/>to<sp/>be<sp/>collected<sp/>if<sp/>need<sp/>it<sp/>and<sp/>everything<sp/>has<sp/>to<sp/>be<sp/>redraw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>setCursor(Qt::WaitCursor);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>askForCorrelograms();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CorrelationView::drawClusterIds(QPainter&amp;<sp/>painter){</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/>QValueList&lt;int&gt;<sp/>shownClusters;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/>QValueList&lt;int&gt;::const_iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/>QValueList&lt;int&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clusters<sp/>=<sp/><ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>clusters.begin();<sp/>iterator<sp/>!=<sp/>clusters.end();<sp/>++iterator)</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>shownClusters.append(*iterator);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/>qHeapSort(shownClusters);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/>QFont<sp/>f(</highlight><highlight class="stringliteral">&quot;Helvetica&quot;</highlight><highlight class="normal">,8);<sp/></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/>painter.setFont(f);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/>painter.setPen(<ref refid="classBaseFrame_146ae781de9307957e8a1eb0a5f5a64c6" kindref="member">colorLegend</ref>);<sp/></highlight><highlight class="comment">//set<sp/>the<sp/>color<sp/>for<sp/>the<sp/>legends.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>absciss<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>abscissa<sp/>of<sp/>the<sp/>legend<sp/>for<sp/>the<sp/>current<sp/>correlogram.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/>uint<sp/>X<sp/>=<sp/>widthBorder<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>ordinate<sp/>of<sp/>the<sp/>legend<sp/>for<sp/>the<sp/>current<sp/>correlogram.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/>uint<sp/>Y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>nbBins<sp/>*<sp/>binWidth<sp/>+<sp/>XMARGIN;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/></highlight><highlight class="comment">//Variable<sp/>used<sp/>to<sp/>draw<sp/>the<sp/>firing<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/>uint<sp/>firingX<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/>uint<sp/>firingY<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clusterIndex<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbClusters<sp/>=<sp/>shownClusters.size();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><ref refid="classItemColors" kindref="compound">ItemColors</ref>&amp;<sp/>clusterColors<sp/>=<sp/><ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_16cae6993a1d1aadb8d9350095c83d580" kindref="member">clusterColors</ref>();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/>QRect<sp/>r((QRect)<ref refid="classBaseFrame_15b9fe7f64b7737c193c4427a5ab8c271" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMargin<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r.left()<sp/>!=<sp/>0)<sp/>isMargin<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>shownClusters.begin();<sp/>iterator<sp/>!=<sp/>shownClusters.end();<sp/>++iterator){</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//the<sp/>abscissa<sp/>is<sp/>increase<sp/>by<sp/>the<sp/>font<sp/>size<sp/>to<sp/>adjust<sp/>for<sp/>conversion<sp/>from<sp/>world<sp/>coordinates<sp/>to<sp/>viewport<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>QRect<sp/>r;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isMargin)<sp/>r<sp/>=<sp/>QRect(<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(X,-Y).x()<sp/>+<sp/>10,<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(X,-Y).y()<sp/>-<sp/>2,<ref refid="classBaseFrame_1f7ebfc8274c67f570b5051977cefe9b2" kindref="member">worldToViewportWidth</ref>(width),10);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>QRect(<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(X,-Y).x()<sp/>+<sp/>10<sp/><sp/>-<sp/>XMARGIN,<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(X,-Y).y()<sp/>-<sp/>2,<ref refid="classBaseFrame_1f7ebfc8274c67f570b5051977cefe9b2" kindref="member">worldToViewportWidth</ref>(width),10);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>painter.drawText(r,Qt::AlignHCenter,QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(*iterator));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(shoulderLine){</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>firingRate<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(firingRates.contains(*iterator))<sp/>firingRate<sp/>=<sp/>firingRates[*iterator];</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbClusters<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>firingX<sp/>=<sp/>X;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>firingY<sp/>=<sp/>heightBorder<sp/>+<sp/>YsizeForMaxAmp;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QRect<sp/>rf;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isMargin)<sp/>rf<sp/>=<sp/>QRect(<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(firingX,-firingY).x()<sp/>+<sp/>10,<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(firingX,-firingY).y()<sp/>-<sp/>17,<ref refid="classBaseFrame_1f7ebfc8274c67f570b5051977cefe9b2" kindref="member">worldToViewportWidth</ref>(width<sp/>+<sp/>20),15);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>rf<sp/>=<sp/>QRect(<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(firingX,-firingY).x()<sp/>+<sp/>10<sp/>-<sp/>XMARGIN,<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(firingX,-firingY).y()<sp/>-<sp/>17,<ref refid="classBaseFrame_1f7ebfc8274c67f570b5051977cefe9b2" kindref="member">worldToViewportWidth</ref>(width<sp/>+<sp/>20),15);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.setPen(clusterColors.<ref refid="classItemColors_15331e934e03ba6a5bb2cae1eae5d75bc" kindref="member">color</ref>(*iterator));</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.setBrush(NoBrush);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawRect(rf);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.setPen(<ref refid="classBaseFrame_146ae781de9307957e8a1eb0a5f5a64c6" kindref="member">colorLegend</ref>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawText(rf,Qt::AlignCenter,firingRate);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clusterIndex<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firingX<sp/>=<sp/>X<sp/>+<sp/>width<sp/>+<sp/>Xspace;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firingY<sp/>=<sp/>heightBorder;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect<sp/>rf;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isMargin)<sp/>rf<sp/>=<sp/>QRect(<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(firingX,-firingY).x()<sp/>+<sp/>10,<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(firingX,-firingY).y()<sp/>-<sp/>13,<ref refid="classBaseFrame_1f7ebfc8274c67f570b5051977cefe9b2" kindref="member">worldToViewportWidth</ref>(width<sp/>+<sp/>20),15);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>rf<sp/>=<sp/>QRect(<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(firingX,-firingY).x()<sp/>+<sp/>10<sp/>-<sp/>XMARGIN,<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(firingX,-firingY).y()<sp/>-<sp/>13,<ref refid="classBaseFrame_1f7ebfc8274c67f570b5051977cefe9b2" kindref="member">worldToViewportWidth</ref>(width<sp/>+<sp/>20),15);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.setPen(clusterColors.<ref refid="classItemColors_15331e934e03ba6a5bb2cae1eae5d75bc" kindref="member">color</ref>(*iterator));</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.setBrush(NoBrush);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawRect(rf);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.setPen(<ref refid="classBaseFrame_146ae781de9307957e8a1eb0a5f5a64c6" kindref="member">colorLegend</ref>);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawText(rf,Qt::AlignCenter,firingRate);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>firingY<sp/>=<sp/>heightBorder<sp/>+<sp/>(clusterIndex<sp/>-<sp/>1)<sp/>*<sp/>(YsizeForMaxAmp<sp/>+<sp/>Yspace)<sp/>-<sp/>(Yspace<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QRect<sp/>rf;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isMargin)<sp/>rf<sp/>=<sp/>QRect(<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(firingX,-firingY).x()<sp/>+<sp/>10,<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(firingX,-firingY).y(),<ref refid="classBaseFrame_1f7ebfc8274c67f570b5051977cefe9b2" kindref="member">worldToViewportWidth</ref>(width<sp/>+<sp/>20),15);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>rf<sp/>=<sp/>QRect(<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(firingX,-firingY).x()<sp/>+<sp/>10<sp/>-<sp/>XMARGIN,<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(firingX,-firingY).y(),<ref refid="classBaseFrame_1f7ebfc8274c67f570b5051977cefe9b2" kindref="member">worldToViewportWidth</ref>(width<sp/>+<sp/>20),15);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.setPen(clusterColors.<ref refid="classItemColors_15331e934e03ba6a5bb2cae1eae5d75bc" kindref="member">color</ref>(*iterator));</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.setBrush(NoBrush);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawRect(rf);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.setPen(<ref refid="classBaseFrame_146ae781de9307957e8a1eb0a5f5a64c6" kindref="member">colorLegend</ref>);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>painter.drawText(rf,Qt::AlignCenter,firingRate);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>firingX<sp/>+=<sp/>shift;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/>clusterIndex++;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>X<sp/>+=<sp/>shift;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>ordinate<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/>X<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/>Y<sp/>=<sp/>heightBorder<sp/>+<sp/>YsizeForMaxAmp<sp/>+<sp/>Yspace<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/>uint<sp/>yshift<sp/>=<sp/>YsizeForMaxAmp<sp/>+<sp/>Yspace;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>shownClusters.begin();<sp/>iterator<sp/>!=<sp/>shownClusters.end();<sp/>++iterator){</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>QRect<sp/>r(<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(X,-Y).x(),<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(X,-Y).y(),10,<ref refid="classBaseFrame_1af257590f63f103f946f599add211cd5" kindref="member">worldToViewportHeight</ref>(YsizeForMaxAmp<sp/>+<sp/>Yspace));</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>painter.drawText(r,Qt::AlignCenter,QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(*iterator));</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>Y<sp/>+=<sp/>yshift;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="classCorrelationView_1d985304283252bf8614e1ea1d69699c8" kindref="member">CorrelationView::updateDrawing</ref>(){</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>data<sp/>have<sp/>to<sp/>be<sp/>collected<sp/>if<sp/>need<sp/>it<sp/>and<sp/>everything<sp/>has<sp/>to<sp/>be<sp/>redraw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>REDRAW){</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>setCursor(Qt::WaitCursor);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>askForCorrelograms();</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCorrelationView_1b852d62de09b4379aff3dd34003996d4" kindref="member">CorrelationView::clustersRenumbered</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>active){</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>data<sp/>have<sp/>to<sp/>be<sp/>collected<sp/>and<sp/>everything<sp/>has<sp/>to<sp/>be<sp/>redrawn.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>widget<sp/>is<sp/>in<sp/>the<sp/>active<sp/>view,<sp/>it<sp/>is<sp/>done<sp/>immediately<sp/>otherswise<sp/>it<sp/>will<sp/>be<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/></highlight><highlight class="comment">//when<sp/>the<sp/>view<sp/>willbecome<sp/>active<sp/>(updateDrawing<sp/>will<sp/>be<sp/>called).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>active){</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/>setCursor(Qt::WaitCursor);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>askForCorrelograms();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal">}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCorrelationView_1835c3c83e1e08f48c0e18b97abef5783" kindref="member">CorrelationView::mouseDoubleClickEvent</ref><sp/>(QMouseEvent<sp/>*e){</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/></highlight><highlight class="comment">//Trigger<sp/>parent<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><ref refid="classBaseFrame_161ed8b87d4046aa64b74855f200b4e1b" kindref="member">ViewWidget::mouseDoubleClickEvent</ref>(e);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>&gt;<sp/>0)){</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><ref refid="classData" kindref="compound">Data</ref>&amp;<sp/>clusteringData<sp/>=<sp/><ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_196ee8dbf3a50f580d76f024c281f7a45" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>QValueList&lt;Pair&gt;::iterator<sp/>pairIterator;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>correlogramsNotAvailable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(pairIterator<sp/>=<sp/>pairs.begin();<sp/>pairIterator<sp/>!=<sp/>pairs.end();<sp/>++pairIterator){</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><ref refid="classData_1_1CorrelogramIterator" kindref="compound">Data::CorrelogramIterator</ref><sp/>iterator<sp/>=<sp/>clusteringData.<ref refid="classData_1ef7d28f6ad82ebdeb45a1ce933f59a01" kindref="member">correlogramIterator</ref>(*pairIterator,scaleMode,binSize,timeWindow);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!iterator.isDataAvailable())<sp/>correlogramsNotAvailable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(correlogramsNotAvailable){</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>setCursor(Qt::WaitCursor);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>askForCorrelograms();</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/>isZoomed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCorrelationView_10eee46fa511153bbaf8b666476edf3d1" kindref="member">CorrelationView::mouseReleaseEvent</ref>(QMouseEvent*<sp/>e){</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/></highlight><highlight class="comment">//Trigger<sp/>parent<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><ref refid="classBaseFrame_17b6086bb37e3ad0c56a8b8eb166b3d9e" kindref="member">ViewWidget::mouseReleaseEvent</ref>(e);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((e-&gt;button()<sp/>&amp;<sp/>QMouseEvent::LeftButton)<sp/>&amp;&amp;<sp/>(<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>&gt;<sp/>0)){</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><ref refid="classData" kindref="compound">Data</ref>&amp;<sp/>clusteringData<sp/>=<sp/><ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_196ee8dbf3a50f580d76f024c281f7a45" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>QValueList&lt;Pair&gt;::iterator<sp/>pairIterator;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>correlogramsNotAvailable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(pairIterator<sp/>=<sp/>pairs.begin();<sp/>pairIterator<sp/>!=<sp/>pairs.end();<sp/>++pairIterator){</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><ref refid="classData_1_1CorrelogramIterator" kindref="compound">Data::CorrelogramIterator</ref><sp/>iterator<sp/>=<sp/>clusteringData.<ref refid="classData_1ef7d28f6ad82ebdeb45a1ce933f59a01" kindref="member">correlogramIterator</ref>(*pairIterator,scaleMode,binSize,timeWindow);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!iterator.isDataAvailable())<sp/>correlogramsNotAvailable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(correlogramsNotAvailable){</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>setCursor(Qt::WaitCursor);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>askForCorrelograms();</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/>isZoomed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal">}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCorrelationView_1326c57c1a7dfcd992eb4f28688c1fc5d" kindref="member">CorrelationView::resizeEvent</ref>(QResizeEvent*<sp/>e){</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><ref refid="classData" kindref="compound">Data</ref>&amp;<sp/>clusteringData<sp/>=<sp/><ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_196ee8dbf3a50f580d76f024c281f7a45" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>QValueList&lt;Pair&gt;::iterator<sp/>pairIterator;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>correlogramsNotAvailable<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(pairIterator<sp/>=<sp/>pairs.begin();<sp/>pairIterator<sp/>!=<sp/>pairs.end();<sp/>++pairIterator){</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><ref refid="classData_1_1CorrelogramIterator" kindref="compound">Data::CorrelogramIterator</ref><sp/>iterator<sp/>=<sp/>clusteringData.<ref refid="classData_1ef7d28f6ad82ebdeb45a1ce933f59a01" kindref="member">correlogramIterator</ref>(*pairIterator,scaleMode,binSize,timeWindow);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!iterator.isDataAvailable())<sp/>correlogramsNotAvailable<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(correlogramsNotAvailable){</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/>setCursor(Qt::WaitCursor);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/>askForCorrelograms();</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCorrelationView_169e2da1530baf98d91c23cb7d511b57e" kindref="member">CorrelationView::willBeKilled</ref>(){</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!goingToDie){</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>goingToDie<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//inform<sp/>the<sp/>running<sp/>threads<sp/>to<sp/>stop<sp/>processing<sp/>as<sp/>soon<sp/>as<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classCorrelationThread" kindref="compound">CorrelationThread</ref>*<sp/>correlationThread<sp/>=<sp/>threadsToBeKill.first();<sp/>correlationThread;<sp/>correlationThread<sp/>=<sp/>threadsToBeKill.next())</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/>correlationThread-&gt;<ref refid="classCorrelationThread_1d6f79da8448751efdd3d9298c10e6a50" kindref="member">stopProcessing</ref>();</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCorrelationView_13e14f0f760a9020f6f5854a0e614d857" kindref="member">CorrelationView::mouseMoveEvent</ref>(QMouseEvent*<sp/>event){</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/></highlight><highlight class="comment">//Write<sp/>the<sp/>current<sp/>coordinates<sp/>in<sp/>the<sp/>statusbar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/>QRect<sp/>r((QRect)<ref refid="classBaseFrame_15b9fe7f64b7737c193c4427a5ab8c271" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/>QPoint<sp/>current;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r.left()<sp/>!=<sp/>0)<sp/>current<sp/>=<sp/><ref refid="classBaseFrame_11d2cf80aab1a6867fd30f61cb53f4dc5" kindref="member">viewportToWorld</ref>(event-&gt;x(),event-&gt;y());</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>current<sp/>=<sp/><ref refid="classBaseFrame_11d2cf80aab1a6867fd30f61cb53f4dc5" kindref="member">viewportToWorld</ref>(event-&gt;x()<sp/>-<sp/>XMARGIN,event-&gt;y());</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/></highlight><highlight class="comment">//Compute<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>(current.x()<sp/>-<sp/>static_cast&lt;int&gt;(widthBorder));</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x<sp/>&lt;<sp/>0)<sp/>statusBar-&gt;changeItem(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,1);</highlight><highlight class="comment">//on<sp/>the<sp/>left<sp/>side<sp/>of<sp/>the<sp/>first<sp/>correlogram.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>(static_cast&lt;float&gt;(fmod(x,static_cast&lt;float&gt;(nbBins<sp/>*<sp/>binWidth<sp/>+<sp/>Xspace))</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>static_cast&lt;float&gt;(nbBins<sp/>*<sp/>binWidth<sp/>/<sp/>2))</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>static_cast&lt;float&gt;(binWidth<sp/>/<sp/>binSize));</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Compute<sp/>the<sp/>value<sp/>corresponding<sp/>to<sp/>the<sp/>right<sp/>side<sp/>of<sp/>the<sp/>last<sp/>correlogram.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbOfClusters<sp/>=<sp/><ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size();</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rightmostValue<sp/>=<sp/>widthBorder<sp/>+<sp/>(nbBins<sp/>*<sp/>binWidth<sp/>+<sp/>Xspace)<sp/>*<sp/>nbOfClusters;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((time<sp/>&lt;<sp/>static_cast&lt;float&gt;(-timeWindow)<sp/>/<sp/>2.0)<sp/>||<sp/>(time<sp/>&gt;<sp/>static_cast&lt;float&gt;(timeWindow)<sp/>/<sp/>2.0)<sp/>||<sp/>(current.x()<sp/>&gt;<sp/>rightmostValue))</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>statusBar-&gt;changeItem(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,1);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Compute<sp/>the<sp/>cluster<sp/>ids<sp/>corresponding<sp/>to<sp/>the<sp/>correlogram<sp/>under<sp/>the<sp/>mouse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xCluster<sp/>=<sp/>static_cast&lt;int&gt;(static_cast&lt;float&gt;(x)/static_cast&lt;float&gt;(nbBins<sp/>*<sp/>binWidth<sp/>+<sp/>Xspace));</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>(current.y()<sp/>-<sp/>static_cast&lt;int&gt;(heightBorder));</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yCluster<sp/>=<sp/>abs(static_cast&lt;int&gt;(static_cast&lt;float&gt;(y)/static_cast&lt;float&gt;(YsizeForMaxAmp<sp/>+<sp/>Yspace)));</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xCluster<sp/>&lt;=<sp/>yCluster){</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>QValueList&lt;int&gt;<sp/>shownClusters;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>QValueList&lt;int&gt;::const_iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>QValueList&lt;int&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clusters<sp/>=<sp/><ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>();</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>clusters.begin();<sp/>iterator<sp/>!=<sp/>clusters.end();<sp/>++iterator)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>shownClusters.append(*iterator);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>qHeapSort(shownClusters);<sp/></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>statusBar-&gt;changeItem(</highlight><highlight class="stringliteral">&quot;Time<sp/>(ms):<sp/>&quot;</highlight><highlight class="normal">+<sp/>QString(</highlight><highlight class="stringliteral">&quot;%1,<sp/>Clusters<sp/>(%2,%3)&quot;</highlight><highlight class="normal">).arg(time).arg(shownClusters[xCluster]).arg(shownClusters[yCluster]),1);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>statusBar-&gt;changeItem(</highlight><highlight class="stringliteral">&quot;Time<sp/>(ms):<sp/>&quot;</highlight><highlight class="normal">+<sp/>QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(time),1);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>parent<sp/>implementation<sp/>takes<sp/>care<sp/>of<sp/>the<sp/>rubber<sp/>band</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><ref refid="classBaseFrame_1e0bc9fac62c249065e52f3d393e84cf7" kindref="member">ViewWidget::mouseMoveEvent</ref>(event);<sp/></highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCorrelationView_1f1d272cec32ff777bb932da221ffe5cd" kindref="member">CorrelationView::print</ref>(QPainter&amp;<sp/>printPainter,QPaintDeviceMetrics&amp;<sp/>metrics,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>whiteBackground){</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/>printState<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>double<sp/>buffer<sp/>(pixmap)<sp/>by<sp/>copying<sp/>it<sp/>into<sp/>the<sp/>printer<sp/>device<sp/>throught<sp/>the<sp/>painter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/>QRect<sp/>viewportOld<sp/>=<sp/>QRect(viewport.left(),viewport.top(),viewport.width(),viewport.height());</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>left<sp/>margin<sp/>is<sp/>not<sp/>visible<sp/>(the<sp/>user<sp/>zoomed<sp/>without<sp/>taking<sp/>it<sp/>in<sp/>his<sp/>selection),<sp/>the<sp/>viewport<sp/>and<sp/>the<sp/>printer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//have<sp/>the<sp/>same<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>QRect<sp/>r((QRect)<ref refid="classBaseFrame_15b9fe7f64b7737c193c4427a5ab8c271" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r.left()<sp/>!=<sp/>0)<sp/>viewport<sp/>=<sp/>QRect(printPainter.viewport().left(),printPainter.viewport().top(),printPainter.viewport().width(),printPainter.viewport().height()-10);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>viewport<sp/>=<sp/>QRect(printPainter.viewport().left()<sp/>+<sp/>XMARGIN,printPainter.viewport().top(),printPainter.viewport().width()<sp/>-<sp/>XMARGIN,printPainter.viewport().height()-10);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>window<sp/>(part<sp/>of<sp/>the<sp/>world<sp/>I<sp/>want<sp/>to<sp/>show)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/>printPainter.setWindow(r.left(),r.top(),r.width()-1,r.height()-1);</highlight><highlight class="comment">//hack<sp/>because<sp/>Qt<sp/>QRect<sp/>is<sp/>used<sp/>differently<sp/>in<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>viewport<sp/>(part<sp/>of<sp/>the<sp/>device<sp/>I<sp/>want<sp/>to<sp/>write<sp/>on).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//By<sp/>default,<sp/>the<sp/>viewport<sp/>is<sp/>the<sp/>same<sp/>as<sp/>the<sp/>device&apos;s<sp/>rectangle<sp/>(contentsRec),<sp/>taking<sp/>a<sp/>smaller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//one<sp/>will<sp/>ensure<sp/>that<sp/>the<sp/>legends<sp/>(cluster<sp/>ids)<sp/>will<sp/>not<sp/>ovelap<sp/>a<sp/>correlogram.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>printPainter.setViewport(viewport);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Fill<sp/>the<sp/>background<sp/>with<sp/>the<sp/>background<sp/>color<sp/>and<sp/>ensure<sp/>we<sp/>draw<sp/>the<sp/>same<sp/>portion<sp/>of<sp/>the<sp/>world<sp/>than<sp/>on<sp/>the<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>QRect<sp/>back<sp/>=<sp/>QRect(r.left(),r.top(),r.width(),r.height());</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>heightRatio<sp/>=<sp/>(static_cast&lt;float&gt;(back.height())/static_cast&lt;float&gt;(metrics.height()));</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>back.setBottom(r.top()<sp/>+<sp/>r.height()<sp/>-<sp/>1<sp/>+<sp/>static_cast&lt;long&gt;(10<sp/>*<sp/>heightRatio));</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>widthRatio<sp/>=<sp/>(static_cast&lt;float&gt;(back.width())/static_cast&lt;float&gt;(metrics.width()));</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r.left()<sp/>==<sp/>0)<sp/>back.setLeft(r.left()<sp/>-<sp/>static_cast&lt;long&gt;(XMARGIN<sp/>*<sp/>widthRatio));</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>printRegion<sp/>=<sp/>QRegion(back);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/>QColor<sp/>colorLegendTmp<sp/>=<sp/><ref refid="classBaseFrame_146ae781de9307957e8a1eb0a5f5a64c6" kindref="member">colorLegend</ref>;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>QColor<sp/>background=<sp/>backgroundColor();</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(whiteBackground){</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><ref refid="classBaseFrame_146ae781de9307957e8a1eb0a5f5a64c6" kindref="member">colorLegend</ref><sp/>=<sp/>black;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/>setPaletteBackgroundColor(white);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>printPainter.fillRect(back,backgroundColor());</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>printPainter.setClipRegion(printRegion,QPainter::CoordPainter);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Paint<sp/>all<sp/>the<sp/>correlograms<sp/>in<sp/>the<sp/>pairs<sp/>list<sp/>(in<sp/>the<sp/>double<sp/>buffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/>drawCorrelograms(printPainter,pairs);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//reset<sp/>transformation<sp/>due<sp/>to<sp/>setWindow<sp/>and<sp/>setViewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/>printPainter.resetXForm();</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>cluster<sp/>Ids<sp/>along<sp/>the<sp/>correlograms.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>drawClusterIds(printPainter);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/>printPainter.setClipping(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Restore<sp/>the<sp/>colors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(whiteBackground){</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><ref refid="classBaseFrame_146ae781de9307957e8a1eb0a5f5a64c6" kindref="member">colorLegend</ref><sp/>=<sp/>colorLegendTmp;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/>setPaletteBackgroundColor(background);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Restore<sp/>the<sp/>previous<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/>viewport<sp/>=<sp/>QRect(viewportOld.left(),viewportOld.top(),viewportOld.width(),viewportOld.height());</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>printState<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="classCorrelationView_188bdc6e9498d5324791454edfdc36389" kindref="member">CorrelationView::setNoScale</ref>(){</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/>scaleMode<sp/>=<sp/>Data::RAW;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>drawing<sp/>factor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/>Yfactor<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>data<sp/>have<sp/>to<sp/>be<sp/>collected<sp/>if<sp/>need<sp/>it<sp/>and<sp/>everything<sp/>has<sp/>to<sp/>be<sp/>redraw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>setCursor(Qt::WaitCursor);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>askForCorrelograms();</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="classCorrelationView_180c165487dae96ceb19793e6df720d5f" kindref="member">CorrelationView::setMaximumScale</ref>(){</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/>scaleMode<sp/>=<sp/>Data::MAX;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>drawing<sp/>factor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/>Yfactor<sp/>=<sp/>YsizeForMaxAmp;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>data<sp/>have<sp/>to<sp/>be<sp/>collected<sp/>if<sp/>need<sp/>it<sp/>and<sp/>everything<sp/>has<sp/>to<sp/>be<sp/>redraw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>setCursor(Qt::WaitCursor);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>askForCorrelograms();</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="classCorrelationView_16b9bc79cb045ce69cc9e2c390e4064d6" kindref="member">CorrelationView::setShoulderScale</ref>(){</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/>scaleMode<sp/>=<sp/>Data::SHOULDER;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>drawing<sp/>factor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/>Yfactor<sp/>=<sp/>YsizeForMaxAmp;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>data<sp/>have<sp/>to<sp/>be<sp/>collected<sp/>if<sp/>need<sp/>it<sp/>and<sp/>everything<sp/>has<sp/>to<sp/>be<sp/>redraw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>setCursor(Qt::WaitCursor);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>askForCorrelograms();</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="classCorrelationView_18ba3b6609970462121ad122d40813a81" kindref="member">CorrelationView::increaseAmplitude</ref>(){</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Decreases<sp/>the<sp/>ordinate<sp/>scale<sp/>resulting<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//an<sp/>reduction<sp/>of<sp/>the<sp/>correlograms<sp/>in<sp/>the<sp/>ordinate<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/>Yfactor<sp/>/=<sp/>0.75;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>data<sp/>have<sp/>to<sp/>be<sp/>collected<sp/>if<sp/>need<sp/>it<sp/>and<sp/>everything<sp/>has<sp/>to<sp/>be<sp/>redraw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>setCursor(Qt::WaitCursor);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>askForCorrelograms();</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="classCorrelationView_1c0bdd9a8e7cbbd058255d832a7999bcf" kindref="member">CorrelationView::decreaseAmplitude</ref>(){</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Increases<sp/>the<sp/>ordinate<sp/>scale<sp/>resulting<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//an<sp/>enlargement<sp/>of<sp/>the<sp/>correlograms<sp/>in<sp/>the<sp/>ordinate<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/>Yfactor<sp/>*=<sp/>0.75;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>data<sp/>have<sp/>to<sp/>be<sp/>collected<sp/>if<sp/>need<sp/>it<sp/>and<sp/>everything<sp/>has<sp/>to<sp/>be<sp/>redraw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>setCursor(Qt::WaitCursor);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>askForCorrelograms();</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="classCorrelationView_190c5f935b3726b8f874076d4025f72aa" kindref="member">CorrelationView::setShoulderLine</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b){</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>shoulderLine<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>data<sp/>have<sp/>to<sp/>be<sp/>collected<sp/>if<sp/>need<sp/>it<sp/>and<sp/>everything<sp/>has<sp/>to<sp/>be<sp/>redraw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classViewWidget_166610cd0dfae797713df3acb439033cc" kindref="member">view</ref>.<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>setCursor(Qt::WaitCursor);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>askForCorrelograms();</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
    </programlisting>
    <location file="/home/lynn/CMBN/Klusters/klusters/src/correlationview.cpp"/>
  </compounddef>
</doxygen>
