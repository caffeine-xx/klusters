<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.1">
  <compounddef id="klusters_8cpp" kind="file">
    <compoundname>klusters.cpp</compoundname>
    <includes local="no">qdir.h</includes>
    <includes local="no">qvbox.h</includes>
    <includes local="no">qwhatsthis.h</includes>
    <includes local="no">qtooltip.h</includes>
    <includes local="no">qtoolbutton.h</includes>
    <includes local="no">qstring.h</includes>
    <includes local="no">qimage.h</includes>
    <includes local="no">qiconset.h</includes>
    <includes local="no">qcursor.h</includes>
    <includes local="no">qfileinfo.h</includes>
    <includes local="no">kprinter.h</includes>
    <includes local="no">kiconloader.h</includes>
    <includes local="no">kmessagebox.h</includes>
    <includes local="no">kfiledialog.h</includes>
    <includes local="no">kmenubar.h</includes>
    <includes local="no">kconfig.h</includes>
    <includes local="no">kstdaction.h</includes>
    <includes local="no">kstatusbar.h</includes>
    <includes local="no">kpopupmenu.h</includes>
    <includes local="no">kglobal.h</includes>
    <includes local="no">ktoolbar.h</includes>
    <includes local="no">kkeydialog.h</includes>
    <includes local="no">kio/netaccess.h</includes>
    <includes local="no">kprocess.h</includes>
    <includes local="no">kinputdialog.h</includes>
    <includes local="no">iostream</includes>
    <includes refid="klusters_8h" local="yes">klusters.h</includes>
    <includes refid="klustersdoc_8h" local="yes">klustersdoc.h</includes>
    <includes refid="clusterPalette_8h" local="yes">clusterPalette.h</includes>
    <includes refid="savethread_8h" local="yes">savethread.h</includes>
    <includes refid="prefdialog_8h" local="yes">prefdialog.h</includes>
    <includes refid="configuration_8h" local="yes">configuration.h</includes>
    <includes refid="processwidget_8h" local="yes">processwidget.h</includes>
    <incdepgraph>
      <node id="1316">
        <label>baseframe.h</label>
        <link refid="baseframe_8h-source"/>
        <childnode refid="1291" relation="include">
        </childnode>
        <childnode refid="1314" relation="include">
        </childnode>
        <childnode refid="1258" relation="include">
        </childnode>
        <childnode refid="1317" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
      </node>
      <node id="1339">
        <label>processwidget.h</label>
        <link refid="processwidget_8h-source"/>
        <childnode refid="1340" relation="include">
        </childnode>
        <childnode refid="1260" relation="include">
        </childnode>
        <childnode refid="1295" relation="include">
        </childnode>
      </node>
      <node id="1324">
        <label>qtimer.h</label>
      </node>
      <node id="1305">
        <label>qregion.h</label>
      </node>
      <node id="1337">
        <label>configuration.h</label>
        <link refid="configuration_8h-source"/>
        <childnode refid="1255" relation="include">
        </childnode>
        <childnode refid="1338" relation="include">
        </childnode>
        <childnode refid="1295" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
      </node>
      <node id="1284">
        <label>kapp.h</label>
      </node>
      <node id="1307">
        <label>qfile.h</label>
      </node>
      <node id="1301">
        <label>pair.h</label>
        <link refid="pair_8h-source"/>
        <childnode refid="1255" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
        <childnode refid="1302" relation="include">
        </childnode>
      </node>
      <node id="1277">
        <label>qstrlist.h</label>
      </node>
      <node id="1276">
        <label>klusters.h</label>
        <link refid="klusters_8h-source"/>
        <childnode refid="1277" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1279" relation="include">
        </childnode>
        <childnode refid="1280" relation="include">
        </childnode>
        <childnode refid="1281" relation="include">
        </childnode>
        <childnode refid="1282" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
        <childnode refid="1284" relation="include">
        </childnode>
        <childnode refid="1285" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1287" relation="include">
        </childnode>
        <childnode refid="1288" relation="include">
        </childnode>
        <childnode refid="1289" relation="include">
        </childnode>
        <childnode refid="1290" relation="include">
        </childnode>
      </node>
      <node id="1331">
        <label>dataprovider.h</label>
        <link refid="dataprovider_8h-source"/>
        <childnode refid="1326" relation="include">
        </childnode>
        <childnode refid="1287" relation="include">
        </childnode>
      </node>
      <node id="1290">
        <label>klustersview.h</label>
        <link refid="klustersview_8h-source"/>
        <childnode refid="1260" relation="include">
        </childnode>
        <childnode refid="1285" relation="include">
        </childnode>
        <childnode refid="1267" relation="include">
        </childnode>
        <childnode refid="1291" relation="include">
        </childnode>
        <childnode refid="1292" relation="include">
        </childnode>
        <childnode refid="1293" relation="include">
        </childnode>
        <childnode refid="1296" relation="include">
        </childnode>
        <childnode refid="1313" relation="include">
        </childnode>
        <childnode refid="1320" relation="include">
        </childnode>
      </node>
      <node id="1329">
        <label>qiconview.h</label>
      </node>
      <node id="1278">
        <label>qvaluelist.h</label>
      </node>
      <node id="1313">
        <label>viewwidget.h</label>
        <link refid="viewwidget_8h-source"/>
        <childnode refid="1291" relation="include">
        </childnode>
        <childnode refid="1314" relation="include">
        </childnode>
        <childnode refid="1315" relation="include">
        </childnode>
        <childnode refid="1267" relation="include">
        </childnode>
        <childnode refid="1316" relation="include">
        </childnode>
      </node>
      <node id="1317">
        <label>zoomwindow.h</label>
        <link refid="zoomwindow_8h-source"/>
        <childnode refid="1318" relation="include">
        </childnode>
        <childnode refid="1319" relation="include">
        </childnode>
        <childnode refid="1311" relation="include">
        </childnode>
      </node>
      <node id="1255">
        <label>qstring.h</label>
      </node>
      <node id="1302">
        <label>stdlib.h</label>
      </node>
      <node id="1326">
        <label>qobject.h</label>
      </node>
      <node id="1335">
        <label>prefdialog.h</label>
        <link refid="prefdialog_8h-source"/>
        <childnode refid="1291" relation="include">
        </childnode>
        <childnode refid="1336" relation="include">
        </childnode>
      </node>
      <node id="1332">
        <label>channelcolors.h</label>
        <link refid="channelcolors_8h-source"/>
        <childnode refid="1294" relation="include">
        </childnode>
        <childnode refid="1295" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
      </node>
      <node id="1287">
        <label>kurl.h</label>
      </node>
      <node id="1261">
        <label>kiconloader.h</label>
      </node>
      <node id="1318">
        <label>qrect.h</label>
      </node>
      <node id="1271">
        <label>kkeydialog.h</label>
      </node>
      <node id="1310">
        <label>stdexcept</label>
      </node>
      <node id="1325">
        <label>klustersdoc.h</label>
        <link refid="klustersdoc_8h-source"/>
        <childnode refid="1326" relation="include">
        </childnode>
        <childnode refid="1255" relation="include">
        </childnode>
        <childnode refid="1294" relation="include">
        </childnode>
        <childnode refid="1319" relation="include">
        </childnode>
        <childnode refid="1259" relation="include">
        </childnode>
        <childnode refid="1287" relation="include">
        </childnode>
        <childnode refid="1285" relation="include">
        </childnode>
        <childnode refid="1293" relation="include">
        </childnode>
        <childnode refid="1296" relation="include">
        </childnode>
        <childnode refid="1327" relation="include">
        </childnode>
        <childnode refid="1330" relation="include">
        </childnode>
        <childnode refid="1332" relation="include">
        </childnode>
        <childnode refid="1333" relation="include">
        </childnode>
      </node>
      <node id="1279">
        <label>qspinbox.h</label>
      </node>
      <node id="1297">
        <label>array.h</label>
        <link refid="array_8h-source"/>
        <childnode refid="1298" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
      </node>
      <node id="1257">
        <label>qiconset.h</label>
      </node>
      <node id="1252">
        <label>qwhatsthis.h</label>
      </node>
      <node id="1314">
        <label>qframe.h</label>
      </node>
      <node id="1267">
        <label>kstatusbar.h</label>
      </node>
      <node id="1268">
        <label>kpopupmenu.h</label>
      </node>
      <node id="1295">
        <label>qcolor.h</label>
      </node>
      <node id="1294">
        <label>qptrlist.h</label>
      </node>
      <node id="1319">
        <label>qpoint.h</label>
      </node>
      <node id="1264">
        <label>kmenubar.h</label>
      </node>
      <node id="1299">
        <label>sortabletable.h</label>
        <link refid="sortabletable_8h-source"/>
        <childnode refid="1297" relation="include">
        </childnode>
        <childnode refid="1300" relation="include">
        </childnode>
      </node>
      <node id="1250">
        <label>qdir.h</label>
      </node>
      <node id="1336">
        <label>kdialogbase.h</label>
      </node>
      <node id="1334">
        <label>savethread.h</label>
        <link refid="savethread_8h-source"/>
        <childnode refid="1325" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
        <childnode refid="1309" relation="include">
        </childnode>
        <childnode refid="1272" relation="include">
        </childnode>
      </node>
      <node id="1303">
        <label>clusteruserinformation.h</label>
        <link refid="clusteruserinformation_8h-source"/>
      </node>
      <node id="1289">
        <label>klocale.h</label>
      </node>
      <node id="1253">
        <label>qtooltip.h</label>
      </node>
      <node id="1260">
        <label>kprinter.h</label>
      </node>
      <node id="1256">
        <label>qimage.h</label>
      </node>
      <node id="1333">
        <label>clustersprovider.h</label>
        <link refid="clustersprovider_8h-source"/>
        <childnode refid="1331" relation="include">
        </childnode>
        <childnode refid="1297" relation="include">
        </childnode>
        <childnode refid="1300" relation="include">
        </childnode>
        <childnode refid="1296" relation="include">
        </childnode>
        <childnode refid="1294" relation="include">
        </childnode>
        <childnode refid="1326" relation="include">
        </childnode>
      </node>
      <node id="1330">
        <label>tracesprovider.h</label>
        <link refid="tracesprovider_8h-source"/>
        <childnode refid="1331" relation="include">
        </childnode>
        <childnode refid="1297" relation="include">
        </childnode>
        <childnode refid="1300" relation="include">
        </childnode>
        <childnode refid="1294" relation="include">
        </childnode>
        <childnode refid="1326" relation="include">
        </childnode>
      </node>
      <node id="1263">
        <label>kfiledialog.h</label>
      </node>
      <node id="1312">
        <label>vector</label>
      </node>
      <node id="1328">
        <label>qvariant.h</label>
      </node>
      <node id="1293">
        <label>itemcolors.h</label>
        <link refid="itemcolors_8h-source"/>
        <childnode refid="1294" relation="include">
        </childnode>
        <childnode refid="1295" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
      </node>
      <node id="1285">
        <label>kdockwidget.h</label>
      </node>
      <node id="1258">
        <label>qcursor.h</label>
      </node>
      <node id="1288">
        <label>kdeprint/kprintdialogpage.h</label>
      </node>
      <node id="1283">
        <label>qcheckbox.h</label>
      </node>
      <node id="1269">
        <label>kglobal.h</label>
      </node>
      <node id="1266">
        <label>kstdaction.h</label>
      </node>
      <node id="1321">
        <label>qpainter.h</label>
      </node>
      <node id="1249">
        <label>klusters.cpp</label>
        <link refid="klusters.cpp"/>
        <childnode refid="1250" relation="include">
        </childnode>
        <childnode refid="1251" relation="include">
        </childnode>
        <childnode refid="1252" relation="include">
        </childnode>
        <childnode refid="1253" relation="include">
        </childnode>
        <childnode refid="1254" relation="include">
        </childnode>
        <childnode refid="1255" relation="include">
        </childnode>
        <childnode refid="1256" relation="include">
        </childnode>
        <childnode refid="1257" relation="include">
        </childnode>
        <childnode refid="1258" relation="include">
        </childnode>
        <childnode refid="1259" relation="include">
        </childnode>
        <childnode refid="1260" relation="include">
        </childnode>
        <childnode refid="1261" relation="include">
        </childnode>
        <childnode refid="1262" relation="include">
        </childnode>
        <childnode refid="1263" relation="include">
        </childnode>
        <childnode refid="1264" relation="include">
        </childnode>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1266" relation="include">
        </childnode>
        <childnode refid="1267" relation="include">
        </childnode>
        <childnode refid="1268" relation="include">
        </childnode>
        <childnode refid="1269" relation="include">
        </childnode>
        <childnode refid="1270" relation="include">
        </childnode>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1272" relation="include">
        </childnode>
        <childnode refid="1273" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
        <childnode refid="1325" relation="include">
        </childnode>
        <childnode refid="1327" relation="include">
        </childnode>
        <childnode refid="1334" relation="include">
        </childnode>
        <childnode refid="1335" relation="include">
        </childnode>
        <childnode refid="1337" relation="include">
        </childnode>
        <childnode refid="1339" relation="include">
        </childnode>
      </node>
      <node id="1282">
        <label>qlabel.h</label>
      </node>
      <node id="1265">
        <label>kconfig.h</label>
      </node>
      <node id="1338">
        <label>qfont.h</label>
      </node>
      <node id="1311">
        <label>math.h</label>
      </node>
      <node id="1291">
        <label>qwidget.h</label>
      </node>
      <node id="1281">
        <label>qlineedit.h</label>
      </node>
      <node id="1275">
        <label>iostream</label>
      </node>
      <node id="1273">
        <label>kprocess.h</label>
      </node>
      <node id="1292">
        <label>qvaluevector.h</label>
      </node>
      <node id="1309">
        <label>qthread.h</label>
      </node>
      <node id="1254">
        <label>qtoolbutton.h</label>
      </node>
      <node id="1270">
        <label>ktoolbar.h</label>
      </node>
      <node id="1280">
        <label>qvalidator.h</label>
      </node>
      <node id="1259">
        <label>qfileinfo.h</label>
      </node>
      <node id="1262">
        <label>kmessagebox.h</label>
      </node>
      <node id="1272">
        <label>kio/netaccess.h</label>
      </node>
      <node id="1327">
        <label>clusterPalette.h</label>
        <link refid="clusterPalette_8h-source"/>
        <childnode refid="1328" relation="include">
        </childnode>
        <childnode refid="1291" relation="include">
        </childnode>
        <childnode refid="1251" relation="include">
        </childnode>
        <childnode refid="1329" relation="include">
        </childnode>
        <childnode refid="1253" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
      </node>
      <node id="1286">
        <label>kaction.h</label>
      </node>
      <node id="1323">
        <label>qpointarray.h</label>
      </node>
      <node id="1274">
        <label>kinputdialog.h</label>
      </node>
      <node id="1304">
        <label>qdict.h</label>
      </node>
      <node id="1320">
        <label>correlationview.h</label>
        <link refid="correlationview_8h-source"/>
        <childnode refid="1317" relation="include">
        </childnode>
        <childnode refid="1313" relation="include">
        </childnode>
        <childnode refid="1301" relation="include">
        </childnode>
        <childnode refid="1296" relation="include">
        </childnode>
        <childnode refid="1314" relation="include">
        </childnode>
        <childnode refid="1321" relation="include">
        </childnode>
        <childnode refid="1322" relation="include">
        </childnode>
        <childnode refid="1315" relation="include">
        </childnode>
        <childnode refid="1323" relation="include">
        </childnode>
        <childnode refid="1324" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1294" relation="include">
        </childnode>
      </node>
      <node id="1306">
        <label>qmap.h</label>
      </node>
      <node id="1322">
        <label>qstyle.h</label>
      </node>
      <node id="1308">
        <label>qmutex.h</label>
      </node>
      <node id="1315">
        <label>qpixmap.h</label>
      </node>
      <node id="1298">
        <label>cstring</label>
      </node>
      <node id="1340">
        <label>klistbox.h</label>
      </node>
      <node id="1251">
        <label>qvbox.h</label>
      </node>
      <node id="1296">
        <label>data.h</label>
        <link refid="data_8h-source"/>
        <childnode refid="1297" relation="include">
        </childnode>
        <childnode refid="1299" relation="include">
        </childnode>
        <childnode refid="1301" relation="include">
        </childnode>
        <childnode refid="1300" relation="include">
        </childnode>
        <childnode refid="1303" relation="include">
        </childnode>
        <childnode refid="1294" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1304" relation="include">
        </childnode>
        <childnode refid="1305" relation="include">
        </childnode>
        <childnode refid="1306" relation="include">
        </childnode>
        <childnode refid="1307" relation="include">
        </childnode>
        <childnode refid="1308" relation="include">
        </childnode>
        <childnode refid="1309" relation="include">
        </childnode>
        <childnode refid="1287" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
        <childnode refid="1310" relation="include">
        </childnode>
        <childnode refid="1311" relation="include">
        </childnode>
        <childnode refid="1312" relation="include">
        </childnode>
      </node>
      <node id="1300">
        <label>types.h</label>
        <link refid="types_8h-source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="">
      <memberdef kind="variable" id="klusters_8cpp_15b79f57f28c8999a5343afe512a2c768" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nbUndo</definition>
        <argsstring></argsstring>
        <name>nbUndo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/klusters.cpp" line="60" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/main.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="">
      <memberdef kind="variable" id="klusters_8cpp_15b79f57f28c8999a5343afe512a2c768" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int nbUndo</definition>
        <argsstring></argsstring>
        <name>nbUndo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/klusters.cpp" line="60" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/main.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>klusters.cpp<sp/><sp/>-<sp/><sp/>description</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>begin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Mon<sp/>Sep<sp/><sp/>8<sp/>12:06:21<sp/>EDT<sp/>2003</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>copyright<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(C)<sp/>2003<sp/>by<sp/>Lynn<sp/>Hazan</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>email<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>lynn.hazan@myrealbox.com</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>files<sp/>for<sp/>QT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qdir.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qvbox.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qwhatsthis.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qtooltip.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qtoolbutton.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qstring.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qimage.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qiconset.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qcursor.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qfileinfo.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>files<sp/>for<sp/>KDE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kprinter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kiconloader.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kmessagebox.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kfiledialog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kmenubar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kconfig.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kstdaction.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kstatusbar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kpopupmenu.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kglobal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ktoolbar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kkeydialog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kio/netaccess.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kprocess.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kinputdialog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//General<sp/>C++<sp/>include<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>application<sp/>specific<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;klusters.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;klustersdoc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;clusterPalette.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;savethread.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;prefdialog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;configuration.h&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>class<sp/>Configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;processwidget.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbUndo;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>KlustersApp::INITIAL_WAVEFORM_TIME_WINDOW<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;30&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>KlustersApp::DEFAULT_NB_SPIKES_DISPLAYED<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>KlustersApp::INITIAL_CORRELOGRAMS_HALF_TIME_FRAME<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;30&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>KlustersApp::DEFAULT_BIN_SIZE<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="classKlustersApp_10b8ca990fc21039060328bcd80b002f5" kindref="member">KlustersApp::KlustersApp</ref>():KDockMainWindow(0,</highlight><highlight class="stringliteral">&quot;Klusters&quot;</highlight><highlight class="normal">),<sp/>displayCount(0),mainDock(0),</highlight></codeline>
<codeline lineno="69"><highlight class="normal">clusterPanel(0),clusterPalette(0),tabsParent(0),dimensionX(0L),dimensionY(0L),isInit(true),</highlight></codeline>
<codeline lineno="70"><highlight class="normal">currentNbUndo(0),currentNbRedo(0),timeWindow(INITIAL_WAVEFORM_TIME_WINDOW.toLong()),validator(this),spikesTodisplayStep(20),</highlight></codeline>
<codeline lineno="71"><highlight class="normal">correlogramTimeFrame(INITIAL_CORRELOGRAMS_HALF_TIME_FRAME.toInt()<sp/>*<sp/>2<sp/>+<sp/>1),binSize(DEFAULT_BIN_SIZE.toInt()),binSizeValidator(this),</highlight></codeline>
<codeline lineno="72"><highlight class="normal">correlogramsHalfTimeFrameValidator(this),prefDialog(0L),processWidget(0L),processFinished(true),processOutputDock(0L),</highlight></codeline>
<codeline lineno="73"><highlight class="normal">processOutputsFinished(true),processKilled(false),errorMatrixExists(false),filePath(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Gets<sp/>the<sp/>configuration<sp/>object<sp/>of<sp/>the<sp/>application<sp/>throught<sp/>the<sp/>static<sp/>reference<sp/>to<sp/>the<sp/>application<sp/>kapp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>config<sp/>=<sp/>KGlobal::config();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>printer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KPrinter;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Apply<sp/>the<sp/>user<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>initializePreferences();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>inits<sp/>to<sp/>invoke<sp/>all<sp/>other<sp/>construction<sp/>parts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>initStatusBar();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>initClusterPanel();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>KlustersDoc<sp/>which<sp/>will<sp/>hold<sp/>the<sp/>document<sp/>manipulated<sp/>by<sp/>the<sp/>application.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>doc<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classKlustersDoc" kindref="compound">KlustersDoc</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,*clusterPalette,configuration().isCrashRecovery(),configuration().crashRecoveryInterval());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//create<sp/>the<sp/>thread<sp/>which<sp/>will<sp/>be<sp/>used<sp/>to<sp/>save<sp/>the<sp/>cluster<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>saveThread<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classSaveThread" kindref="compound">SaveThread</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Prepare<sp/>the<sp/>actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>initActions();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Prepare<sp/>the<sp/>spineboxes<sp/>and<sp/>line<sp/>edit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>initSelectionBoxes();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>setMinimumSize(QSize(600,400));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>the<sp/>saved<sp/>mainwindow<sp/>settings,<sp/>if<sp/>any,<sp/>and<sp/>ask<sp/>the<sp/>mainwindow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>automatically<sp/>save<sp/>settings<sp/>if<sp/>changed:<sp/>window<sp/>size,<sp/>toolbar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>position,<sp/>icon<sp/>size,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>setAutoSaveSettings();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>slotUpdateParameterBar();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>recent<sp/>file<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>fileOpenRecent-&gt;loadEntries(config);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Disable<sp/>some<sp/>actions<sp/>at<sp/>startup<sp/>(see<sp/>the<sp/>klustersui.rc<sp/>file)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;initState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">KlustersApp::~KlustersApp()</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>the<sp/>memory<sp/>by<sp/>deleting<sp/>all<sp/>the<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>printer;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>doc;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>saveThread;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processWidget<sp/>!=<sp/>0L){</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>processWidget;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>processWidget<sp/>=<sp/>0L;<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processOutputDock<sp/>!=<sp/>0L){</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>processOutputDock;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>processOutputDock<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::initActions()</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//File<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>KStdAction::open(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotFileOpen()),<sp/>actionCollection());</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>fileOpenRecent<sp/>=<sp/>KStdAction::openRecent(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotFileOpenRecent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KURL&amp;)),<sp/>actionCollection());</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>KStdAction::save(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotFileSave()),<sp/>actionCollection());</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>KStdAction::saveAs(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotFileSaveAs()),<sp/>actionCollection());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Close&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;fileclose&quot;</highlight><highlight class="normal">,0,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotFileClose()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;file_close&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>KStdAction::print(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotFilePrint()),<sp/>actionCollection());</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>KStdAction::quit(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(close()),<sp/>actionCollection());</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>viewMainToolBar<sp/>=<sp/>KStdAction::showToolbar(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotViewMainToolBar()),<sp/>actionCollection());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>viewStatusBar<sp/>=<sp/>KStdAction::showStatusbar(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotViewStatusBar()),<sp/>actionCollection());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;Re&amp;number<sp/>and<sp/>Save&quot;</highlight><highlight class="normal">),QIconSet(QPixmap(</highlight><highlight class="stringliteral">&quot;filesave.png&quot;</highlight><highlight class="normal">)),<sp/>CTRL<sp/>+<sp/>SHIFT<sp/>+<sp/>Key_S,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotFileRenumberAndSave()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;file_renumber_save&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Import<sp/>File&quot;</highlight><highlight class="normal">),<sp/>CTRL<sp/>+<sp/>Key_I,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotFileImport()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;fileImport&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Edit<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;Select<sp/>&amp;All&quot;</highlight><highlight class="normal">),<sp/>CTRL<sp/>+<sp/>Key_A,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotSelectAll()),actionCollection(),</highlight><highlight class="stringliteral">&quot;edit_select_all&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;Select<sp/>All<sp/>except<sp/>0<sp/>and<sp/>1&quot;</highlight><highlight class="normal">),<sp/>CTRL<sp/>+<sp/>SHIFT<sp/>+<sp/>Key_A,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>SLOT(slotSelectAllWO01()),actionCollection(),</highlight><highlight class="stringliteral">&quot;edit_select_all_except01&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>KStdAction::undo(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotUndo()),<sp/>actionCollection());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>KStdAction::redo(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotRedo()),<sp/>actionCollection());</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Displays<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>viewMenu<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KActionMenu(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Window&quot;</highlight><highlight class="normal">),<sp/>actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;window_menu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>newClusterDisplay<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;New<sp/>C&amp;luster<sp/>Display&quot;</highlight><highlight class="normal">),<sp/>0,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotWindowNewClusterDisplay()),<sp/>actionCollection(),</highlight><highlight class="stringliteral">&quot;new_clusterDisplay&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>newWaveformDisplay<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;New<sp/>&amp;Waveform<sp/>Display&quot;</highlight><highlight class="normal">),<sp/>0,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotWindowNewWaveformDisplay()),<sp/>actionCollection(),</highlight><highlight class="stringliteral">&quot;new_waveformDisplay&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>newCrosscorrelationDisplay<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;New<sp/>C&amp;orrelation<sp/>Display&quot;</highlight><highlight class="normal">),0,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,SLOT(slotWindowNewCrosscorrelationDisplay()),<sp/>actionCollection(),</highlight><highlight class="stringliteral">&quot;new_crosscorrelationDisplay&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>newOverViewDisplay<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;New<sp/>&amp;Overview<sp/>Display&quot;</highlight><highlight class="normal">),<sp/>0,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,SLOT(slotWindowNewOverViewDisplay()),actionCollection(),</highlight><highlight class="stringliteral">&quot;new_overViewDisplay&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>newGroupingAssistantDisplay<sp/>=</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;New<sp/>&amp;Grouping<sp/>Assistant<sp/>Display&quot;</highlight><highlight class="normal">),0,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,SLOT(slotWindowNewGroupingAssistantDisplay()),actionCollection(),</highlight><highlight class="stringliteral">&quot;new_goupingAssistantDisplay&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Rename<sp/>Active<sp/>Display&quot;</highlight><highlight class="normal">),<sp/>CTRL<sp/>+<sp/>Key_R,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(renameActiveDisplay()),actionCollection(),</highlight><highlight class="stringliteral">&quot;rename_display&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Close<sp/>Active<sp/>Display&quot;</highlight><highlight class="normal">),<sp/>CTRL<sp/>+<sp/>Key_W,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotDisplayClose()),actionCollection(),</highlight><highlight class="stringliteral">&quot;close_display&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;New<sp/>&amp;Trace<sp/>Display&quot;</highlight><highlight class="normal">),0,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotNewTraceDisplay()),actionCollection(),</highlight><highlight class="stringliteral">&quot;trace_display&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Not<sp/>used<sp/>for<sp/>the<sp/>moment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>connect(viewMenu-&gt;popupMenu(),SIGNAL(aboutToShow()),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(viewMenuAboutToShow()));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>KIconLoader*<sp/>loader<sp/>=<sp/>KGlobal::iconLoader();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Actions<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;Delete<sp/>&amp;Artifact<sp/>Cluster(s)&quot;</highlight><highlight class="normal">),QIconSet(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;delete_artefact&quot;</highlight><highlight class="normal">,<sp/>KIcon::User)),SHIFT<sp/>+<sp/>Key_Delete,clusterPalette,<sp/>SLOT(moveClustersToArtefact()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;move_clusters_to_artifact&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;Delete<sp/>&amp;Noisy<sp/>Cluster(s)&quot;</highlight><highlight class="normal">),QIconSet(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;delete_noise&quot;</highlight><highlight class="normal">,<sp/>KIcon::User)),Key_Delete,clusterPalette,<sp/>SLOT(moveClustersToNoise()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;move_clusters_to_noise&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Group<sp/>Clusters&quot;</highlight><highlight class="normal">),QIconSet(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;group&quot;</highlight><highlight class="normal">,<sp/>KIcon::User)),<sp/>Key_G,clusterPalette,<sp/>SLOT(groupClusters()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;group_clusters&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Update<sp/>Display&quot;</highlight><highlight class="normal">),QIconSet(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;update&quot;</highlight><highlight class="normal">,<sp/>KIcon::User)),<sp/>0,clusterPalette,<sp/>SLOT(updateClusters()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;update_display&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Renumber<sp/>Clusters&quot;</highlight><highlight class="normal">),0,<sp/>Key_R,doc,<sp/>SLOT(renumberClusters()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;renumber&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Update<sp/>Error<sp/>Matrix&quot;</highlight><highlight class="normal">),QIconSet(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;grouping_assistant_update&quot;</highlight><highlight class="normal">,<sp/>KIcon::User)),Key_U,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotUpdateErrorMatrix()),actionCollection(),</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;update_errorMatrix&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;Re&amp;cluster&quot;</highlight><highlight class="normal">),0,<sp/>SHIFT<sp/><sp/>+<sp/>Key_R,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotRecluster()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;recluster&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Abort<sp/>Reclustering&quot;</highlight><highlight class="normal">),0,<sp/>0,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotStopRecluster()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;stop_recluster&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Tools<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;Zoom&quot;</highlight><highlight class="normal">),QIconSet(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;zoom_tool&quot;</highlight><highlight class="normal">,<sp/>KIcon::User)),<sp/>Key_Z,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotZoom()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;zoom&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;New<sp/>Cluster&quot;</highlight><highlight class="normal">),QIconSet(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;new_cluster&quot;</highlight><highlight class="normal">,<sp/>KIcon::User)),<sp/>Key_C,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotSingleNew()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;single_new&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Split<sp/>Clusters&quot;</highlight><highlight class="normal">),QIconSet(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;new_clusters&quot;</highlight><highlight class="normal">,<sp/>KIcon::User)),<sp/>Key_S,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotMultipleNew()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;multiple_new&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;Delete<sp/>&amp;Artifact<sp/>Spikes&quot;</highlight><highlight class="normal">),QIconSet(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;delete_artefact_tool&quot;</highlight><highlight class="normal">,<sp/>KIcon::User)),Key_A,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotDeleteArtefact()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;delete_artifact&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;Delete<sp/>&amp;Noisy<sp/>Spikes&quot;</highlight><highlight class="normal">),QIconSet(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;delete_noise_tool&quot;</highlight><highlight class="normal">,<sp/>KIcon::User)),Key_N,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotDeleteNoise()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;delete_noise&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;Select<sp/>Time&quot;</highlight><highlight class="normal">),QIconSet(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;time_tool&quot;</highlight><highlight class="normal">,<sp/>KIcon::User)),<sp/>Key_W,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotSelectTime()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Waveforms<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>timeFrameMode<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KToggleAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Time<sp/>Frame&quot;</highlight><highlight class="normal">),<sp/>Key_T,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotTimeFrameMode()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;time_frame&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>overlayPresentation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KToggleAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Overlay&quot;</highlight><highlight class="normal">),<sp/>Key_O,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(setOverLayPresentation()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;overlay&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>meanPresentation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KToggleAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Mean<sp/>and<sp/>Standard<sp/>Deviation&quot;</highlight><highlight class="normal">),<sp/>Key_M,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotMeanPresentation()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;mean&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Increase<sp/>Amplitude&quot;</highlight><highlight class="normal">),<sp/>Key_I,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotIncreaseAmplitude()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;increase&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Decrease<sp/>Amplitude&quot;</highlight><highlight class="normal">),<sp/>Key_D,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotDecreaseAmplitude()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;decrease&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>timeFrameMode-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>overlayPresentation-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>meanPresentation-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Correlations<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>scaleByMax<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KRadioAction(i18n(</highlight><highlight class="stringliteral">&quot;Scale<sp/>by<sp/>&amp;Maximum&quot;</highlight><highlight class="normal">),SHIFT<sp/>+<sp/>Key_M,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,SLOT(slotScaleByMax()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;scale_by_max&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>scaleByMax-&gt;setExclusiveGroup(</highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>scaleByShouler<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KRadioAction(i18n(</highlight><highlight class="stringliteral">&quot;Scale<sp/>by<sp/>&amp;Asymptote&quot;</highlight><highlight class="normal">),SHIFT<sp/>+<sp/>Key_A,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,SLOT(slotScaleByShouler()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;scale_by_shouler&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>scaleByShouler-&gt;setExclusiveGroup(</highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>noScale<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KRadioAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Uniform<sp/>Scale&quot;</highlight><highlight class="normal">),SHIFT<sp/>+<sp/>Key_U,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,SLOT(slotNoScale()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;raw_data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>noScale-&gt;setExclusiveGroup(</highlight><highlight class="stringliteral">&quot;scale&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Initialize<sp/>the<sp/>presentation<sp/>mode<sp/>to<sp/>scale<sp/>by<sp/>maximum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>scaleByMax-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Increase<sp/>Amplitude&quot;</highlight><highlight class="normal">),SHIFT<sp/>+<sp/>Key_I,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotIncreaseCorrelogramsAmplitude()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;increase_correlograms&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Decrease<sp/>Amplitude&quot;</highlight><highlight class="normal">),SHIFT<sp/>+<sp/><sp/>Key_D,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotDecreaseCorrelogramsAmplitude()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;decrease_correlograms&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>shoulderLine<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KToggleAction(i18n(</highlight><highlight class="stringliteral">&quot;Asymptote<sp/>&amp;Line&quot;</highlight><highlight class="normal">),<sp/>Key_L,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotShoulderLine()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;shoulder_line&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Traces<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Increase<sp/>Channel<sp/>Amplitudes&quot;</highlight><highlight class="normal">),CTRL<sp/>+<sp/>SHIFT<sp/>+<sp/>Key_I,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotIncreaseAllChannelsAmplitude()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;increase_all_channels&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Decrease<sp/>Channel<sp/>Amplitudes&quot;</highlight><highlight class="normal">),CTRL<sp/>+<sp/>SHIFT<sp/>+<sp/>Key_D,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotDecreaseAllChannelsAmplitude()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;decrease_all_channels&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/>showHideLabels<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KToggleAction(i18n(</highlight><highlight class="stringliteral">&quot;Show<sp/>&amp;Labels&quot;</highlight><highlight class="normal">),0,CTRL<sp/>+<sp/>Key_L,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotShowLabels()),<sp/>actionCollection(),</highlight><highlight class="stringliteral">&quot;show_labels&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/>showHideLabels-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Next<sp/>Spike&quot;</highlight><highlight class="normal">),QIconSet(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;forwardCluster&quot;</highlight><highlight class="normal">,<sp/>KIcon::User)),CTRL<sp/>+<sp/>SHIFT<sp/>+<sp/>Key_F,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotShowNextCluster()),<sp/>actionCollection(),</highlight><highlight class="stringliteral">&quot;show_next_cluster&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KAction(i18n(</highlight><highlight class="stringliteral">&quot;&amp;Previous<sp/>Spike&quot;</highlight><highlight class="normal">),QIconSet(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;backCluster&quot;</highlight><highlight class="normal">,<sp/>KIcon::User)),CTRL<sp/>+<sp/>SHIFT<sp/>+<sp/>Key_B,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotShowPreviousCluster()),<sp/>actionCollection(),</highlight><highlight class="stringliteral">&quot;show_previous_cluster&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Settings<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>viewActionBar<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KToggleAction(i18n(</highlight><highlight class="stringliteral">&quot;Show<sp/>Actions&quot;</highlight><highlight class="normal">),0,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotViewActionBar()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;show_actionBar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>viewActionBar-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>viewToolBar<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KToggleAction(i18n(</highlight><highlight class="stringliteral">&quot;Show<sp/>Tools&quot;</highlight><highlight class="normal">),0,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotViewToolBar()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;show_toolBar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>viewToolBar-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>viewParameterBar<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KToggleAction(i18n(</highlight><highlight class="stringliteral">&quot;Show<sp/>Parameters&quot;</highlight><highlight class="normal">),0,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotViewParameterBar()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;show_parameterBar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>viewParameterBar-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>KRadioAction*<sp/>immediateSelection<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KRadioAction(i18n(</highlight><highlight class="stringliteral">&quot;Immediate<sp/>Update&quot;</highlight><highlight class="normal">),0,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,SLOT(slotImmediateSelection()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;immediate_selection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>immediateSelection-&gt;setExclusiveGroup(</highlight><highlight class="stringliteral">&quot;selection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>KRadioAction*<sp/>delaySelection<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KRadioAction(i18n(</highlight><highlight class="stringliteral">&quot;Delayed<sp/>Update&quot;</highlight><highlight class="normal">),0,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,SLOT(slotDelaySelection()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;delay_selection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>delaySelection-&gt;setExclusiveGroup(</highlight><highlight class="stringliteral">&quot;selection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>viewClusterInfo<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KToggleAction(i18n(</highlight><highlight class="stringliteral">&quot;Show<sp/>Cluster<sp/>Info&quot;</highlight><highlight class="normal">),0,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotViewClusterInfo()),actionCollection(),<sp/></highlight><highlight class="stringliteral">&quot;show_clusterInfo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>viewClusterInfo-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Initialize<sp/>the<sp/>update<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>immediateSelection-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>KStdAction::keyBindings(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotKeyBindings()),<sp/>actionCollection());</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>KStdAction::preferences(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,SLOT(<ref refid="classKlustersApp_1170a157fcd6460b7d6def6b258c3db18" kindref="member">executePreferencesDlg</ref>()),<sp/>actionCollection());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>fileOpenRecent-&gt;setStatusText(i18n(</highlight><highlight class="stringliteral">&quot;Opens<sp/>a<sp/>recently<sp/>used<sp/>file&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>actionCollection()-&gt;action(KStdAction::stdName(KStdAction::Save))-&gt;setStatusText(i18n(</highlight><highlight class="stringliteral">&quot;Saves<sp/>the<sp/>actual<sp/>document&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>actionCollection()-&gt;action(KStdAction::stdName(KStdAction::SaveAs))-&gt;setStatusText(i18n(</highlight><highlight class="stringliteral">&quot;Saves<sp/>the<sp/>actual<sp/>document<sp/>as...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>actionCollection()-&gt;action(KStdAction::stdName(KStdAction::Close))-&gt;setStatusText(i18n(</highlight><highlight class="stringliteral">&quot;Closes<sp/>the<sp/>actual<sp/>document&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>actionCollection()-&gt;action(KStdAction::stdName(KStdAction::Print))-&gt;setStatusText(i18n(</highlight><highlight class="stringliteral">&quot;Prints<sp/>out<sp/>the<sp/>actual<sp/>document&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>actionCollection()-&gt;action(KStdAction::stdName(KStdAction::Quit))-&gt;setStatusText(i18n(</highlight><highlight class="stringliteral">&quot;Quits<sp/>the<sp/>application&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>viewMainToolBar-&gt;setStatusText(i18n(</highlight><highlight class="stringliteral">&quot;Enables/disables<sp/>the<sp/>main<sp/>tool<sp/>bar&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>viewStatusBar-&gt;setStatusText(i18n(</highlight><highlight class="stringliteral">&quot;Enables/disables<sp/>the<sp/>status<sp/>bar&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Custom<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>connect(clusterPalette,<sp/>SIGNAL(singleChangeColor(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotSingleColorUpdate(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>connect(clusterPalette,<sp/>SIGNAL(updateShownClusters(QValueList&lt;int&gt;)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotUpdateShownClusters(QValueList&lt;int&gt;)));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>connect(clusterPalette,<sp/>SIGNAL(groupClusters(QValueList&lt;int&gt;)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotGroupClusters(QValueList&lt;int&gt;)));</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>connect(clusterPalette,<sp/>SIGNAL(moveClustersToNoise(QValueList&lt;int&gt;)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotMoveClustersToNoise(QValueList&lt;int&gt;)));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>connect(clusterPalette,<sp/>SIGNAL(moveClustersToArtefact(QValueList&lt;int&gt;)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotMoveClustersToArtefact(QValueList&lt;int&gt;)));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>connect(doc,<sp/>SIGNAL(updateUndoNb(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotUpdateUndoNb(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>connect(doc,<sp/>SIGNAL(updateRedoNb(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotUpdateRedoNb(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>connect(doc,<sp/>SIGNAL(spikesDeleted()),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotSpikesDeleted()));</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Actually<sp/>create<sp/>the<sp/>menus<sp/>and<sp/>toolbars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>createGUI();</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::initSelectionBoxes(){</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>QFont<sp/>font(</highlight><highlight class="stringliteral">&quot;Helvetica&quot;</highlight><highlight class="normal">,9);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>paramBar<sp/>=<sp/>toolBar(</highlight><highlight class="stringliteral">&quot;parameterBar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Create<sp/>and<sp/>initialize<sp/>the<sp/>spin<sp/>boxes<sp/>for<sp/>the<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>dimensionX<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QSpinBox(1,1,1,paramBar,</highlight><highlight class="stringliteral">&quot;dimensionX&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>dimensionY<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QSpinBox(1,1,1,paramBar,</highlight><highlight class="stringliteral">&quot;dimensionY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Enable<sp/>to<sp/>step<sp/>the<sp/>value<sp/>from<sp/>the<sp/>highest<sp/>value<sp/>to<sp/>the<sp/>lowest<sp/>value<sp/>and<sp/>vice<sp/>versa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>dimensionX-&gt;setWrapping(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>dimensionY-&gt;setWrapping(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>featureXLabel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QLabel(</highlight><highlight class="stringliteral">&quot;Features<sp/>(x,y)<sp/>&quot;</highlight><highlight class="normal">,paramBar);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>featureXLabel-&gt;setFrameStyle(QFrame::ToolBarPanel|QFrame::Plain);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>featureXLabel-&gt;setFont(font);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Insert<sp/>the<sp/>spine<sp/>boxes<sp/>in<sp/>the<sp/>main<sp/>tool<sp/>bar<sp/>and<sp/>make<sp/>the<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>paramBar-&gt;insertWidget(-1,featureXLabel-&gt;sizeHint().width(),featureXLabel);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>paramBar-&gt;insertWidget(-1,dimensionX-&gt;sizeHint().width(),dimensionX);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>paramBar-&gt;insertWidget(-1,dimensionY-&gt;sizeHint().width(),dimensionY);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>connect(dimensionX,<sp/>SIGNAL(valueChanged(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotUpdateDimensionX(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>connect(dimensionY,<sp/>SIGNAL(valueChanged(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotUpdateDimensionY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Create<sp/>and<sp/>initialize<sp/>the<sp/>spin<sp/>boxe<sp/>and<sp/>lineEdit<sp/>for<sp/>the<sp/>waveforms<sp/>time<sp/>frame<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QSpinBox(1,1,timeWindow,paramBar,</highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Enable<sp/>to<sp/>step<sp/>the<sp/>value<sp/>from<sp/>the<sp/>highest<sp/>value<sp/>to<sp/>the<sp/>lowest<sp/>value<sp/>and<sp/>vice<sp/>versa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>start-&gt;setWrapping(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>duration<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QLineEdit(paramBar,INITIAL_WAVEFORM_TIME_WINDOW);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>duration-&gt;setMaxLength(5);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//duration<sp/>will<sp/>only<sp/>accept<sp/>integers<sp/>between<sp/>0<sp/>and<sp/>a<sp/>max<sp/>equal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//to<sp/>maximum<sp/>of<sp/>time<sp/>for<sp/>the<sp/>current<sp/>document<sp/>(set<sp/>when<sp/>the<sp/>document<sp/>will<sp/>be<sp/>opened)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>duration-&gt;setValidator(&amp;validator);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>durationLabel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QLabel(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>Duration<sp/>(s)&quot;</highlight><highlight class="normal">,paramBar);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>durationLabel-&gt;setFrameStyle(QFrame::ToolBarPanel|QFrame::Plain);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>durationLabel-&gt;setFont(font);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>startLabel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QLabel(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>Start<sp/>time<sp/>(s)&quot;</highlight><highlight class="normal">,paramBar);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>startLabel-&gt;setFrameStyle(QFrame::ToolBarPanel|QFrame::Plain);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>startLabel-&gt;setFont(font);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>paramBar-&gt;insertWidget(-1,startLabel-&gt;sizeHint().width(),startLabel);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>start-&gt;setMinimumSize(70,start-&gt;minimumHeight());</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>start-&gt;setMaximumSize(70,start-&gt;maximumHeight());</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>paramBar-&gt;insertWidget(-1,start-&gt;sizeHint().width(),start);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>paramBar-&gt;insertWidget(-1,durationLabel-&gt;sizeHint().width(),durationLabel);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>duration-&gt;setMinimumSize(70,duration-&gt;minimumHeight());</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>duration-&gt;setMaximumSize(70,duration-&gt;maximumHeight());</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>paramBar-&gt;insertWidget(-1,duration-&gt;sizeHint().width(),duration);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>connect(start,<sp/>SIGNAL(valueChanged(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotUpdateStartTime(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>connect(duration,<sp/>SIGNAL(returnPressed()),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotUpdateDuration()));</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Create<sp/>and<sp/>initialize<sp/>the<sp/>spin<sp/>boxe<sp/>for<sp/>the<sp/>waveforms<sp/>sample<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>spikesTodisplay<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QSpinBox(1,1,spikesTodisplayStep,paramBar,</highlight><highlight class="stringliteral">&quot;spikesTodisplay&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Enable<sp/>to<sp/>step<sp/>the<sp/>value<sp/>from<sp/>the<sp/>highest<sp/>value<sp/>to<sp/>the<sp/>lowest<sp/>value<sp/>and<sp/>vice<sp/>versa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>spikesTodisplay-&gt;setWrapping(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>spikesTodisplayLabel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QLabel(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>Waveforms&quot;</highlight><highlight class="normal">,paramBar);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>spikesTodisplayLabel-&gt;setFrameStyle(QFrame::ToolBarPanel|QFrame::Plain);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>spikesTodisplayLabel-&gt;setFont(font);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>paramBar-&gt;insertWidget(-1,spikesTodisplayLabel-&gt;sizeHint().width(),spikesTodisplayLabel);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>spikesTodisplay-&gt;setMinimumSize(70,spikesTodisplay-&gt;minimumHeight());</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>spikesTodisplay-&gt;setMaximumSize(70,spikesTodisplay-&gt;maximumHeight());</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>paramBar-&gt;insertWidget(-1,spikesTodisplay-&gt;sizeHint().width(),spikesTodisplay);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>connect(spikesTodisplay,<sp/>SIGNAL(valueChanged(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotSpikesTodisplay(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Create<sp/>and<sp/>initialize<sp/>the<sp/>lineEdit<sp/>for<sp/>the<sp/>correlations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>binSizeBox<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QLineEdit(paramBar,DEFAULT_BIN_SIZE);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>binSizeBox-&gt;setMaxLength(10);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//binSizeBox<sp/>will<sp/>only<sp/>accept<sp/>integers<sp/>between<sp/>1<sp/>and<sp/>a<sp/>max<sp/>equal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//to<sp/>maximum<sp/>of<sp/>time<sp/>for<sp/>the<sp/>current<sp/>document<sp/>in<sp/>miliseconds<sp/>(set<sp/>when<sp/>the<sp/>document<sp/>will<sp/>be<sp/>opened)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>binSizeBox-&gt;setValidator(&amp;binSizeValidator);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>binSizeLabel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QLabel(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>Bin<sp/>size<sp/>(ms)&quot;</highlight><highlight class="normal">,paramBar);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>binSizeLabel-&gt;setFrameStyle(QFrame::ToolBarPanel|QFrame::Plain);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>binSizeLabel-&gt;setFont(font);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>paramBar-&gt;insertWidget(-1,binSizeLabel-&gt;sizeHint().width(),binSizeLabel);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>binSizeBox-&gt;setMinimumSize(30,binSizeBox-&gt;minimumHeight());</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>binSizeBox-&gt;setMaximumSize(30,binSizeBox-&gt;maximumHeight());</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>paramBar-&gt;insertWidget(-1,binSizeBox-&gt;sizeHint().width(),binSizeBox);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>connect(binSizeBox,<sp/>SIGNAL(returnPressed()),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotUpdateBinSize()));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>correlogramsHalfDuration<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QLineEdit(paramBar,INITIAL_CORRELOGRAMS_HALF_TIME_FRAME);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>correlogramsHalfDuration-&gt;setMaxLength(12);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//correlogramsHalfDuration<sp/>will<sp/>only<sp/>accept<sp/>integers<sp/>between<sp/>1<sp/>and<sp/>a<sp/>max<sp/>equal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//to<sp/>half<sp/>the<sp/>maximum<sp/>of<sp/>time<sp/>for<sp/>the<sp/>current<sp/>document<sp/>in<sp/>miliseconds<sp/>(set<sp/>when<sp/>the<sp/>document<sp/>will<sp/>be<sp/>opened)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>correlogramsHalfDuration-&gt;setValidator(&amp;correlogramsHalfTimeFrameValidator);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>correlogramsHalfDurationLabel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QLabel(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>Duration<sp/>(ms)&quot;</highlight><highlight class="normal">,paramBar);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>correlogramsHalfDurationLabel-&gt;setFrameStyle(QFrame::ToolBarPanel|QFrame::Plain);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>correlogramsHalfDurationLabel-&gt;setFont(font);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>paramBar-&gt;insertWidget(-1,correlogramsHalfDurationLabel-&gt;sizeHint().width(),correlogramsHalfDurationLabel);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>correlogramsHalfDuration-&gt;setMinimumSize(70,correlogramsHalfDuration-&gt;minimumHeight());</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>correlogramsHalfDuration-&gt;setMaximumSize(70,correlogramsHalfDuration-&gt;maximumHeight());</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>paramBar-&gt;insertWidget(-1,correlogramsHalfDuration-&gt;sizeHint().width(),correlogramsHalfDuration);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>connect(correlogramsHalfDuration,<sp/>SIGNAL(returnPressed()),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotUpdateCorrelogramsHalfDuration()));<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Connect<sp/>the<sp/>move<sp/>function<sp/>of<sp/>the<sp/>parameterBar<sp/>to<sp/>slotUpdateParameterBar<sp/>to<sp/>always<sp/>correctly<sp/>show<sp/>its<sp/>contents.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>connect(paramBar,<sp/>SIGNAL(placeChanged(QDockWindow::Place)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(<ref refid="classKlustersApp_164db61eab5b2a48580fc758d0cc23a1e" kindref="member">slotUpdateParameterBar</ref>()));</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>connect(paramBar,<sp/>SIGNAL(moved(BarPosition)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(<ref refid="classKlustersApp_164db61eab5b2a48580fc758d0cc23a1e" kindref="member">slotUpdateParameterBar</ref>()));</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKlustersApp_1170a157fcd6460b7d6def6b258c3db18" kindref="member">KlustersApp::executePreferencesDlg</ref>(){</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prefDialog<sp/>==<sp/>0L){</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mainDock)<sp/>prefDialog<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classPrefDialog" kindref="compound">PrefDialog</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,doc-&gt;<ref refid="classKlustersDoc_17f587d241814806065548a235c4842cd" kindref="member">nbOfchannels</ref>());<sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>dialog<sp/>on<sp/>demand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>prefDialog<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classPrefDialog" kindref="compound">PrefDialog</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>connect<sp/>to<sp/>the<sp/>&quot;settingsChanged&quot;<sp/>signal<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(prefDialog,SIGNAL(settingsChanged()),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,SLOT(<ref refid="classKlustersApp_1c7c2a96cafce4fb33453e9a024ed70b9" kindref="member">applyPreferences</ref>()));</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>dialog<sp/>has<sp/>been<sp/>open<sp/>the<sp/>first<sp/>time<sp/>before<sp/>any<sp/>document<sp/>has<sp/>been<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>number<sp/>of<sp/>channel<sp/>is<sp/>zero.<sp/>If<sp/>now<sp/>a<sp/>document<sp/>is<sp/>open,<sp/>update<sp/>the<sp/>number<sp/>of<sp/>channels.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(configuration().getNbChannels()<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>mainDock){</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>prefDialog-&gt;<ref refid="classPrefDialog_12e247c97f522eb2bcc12726dff915c3a" kindref="member">resetChannelList</ref>(doc-&gt;<ref refid="classKlustersDoc_17f587d241814806065548a235c4842cd" kindref="member">nbOfchannels</ref>());</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>dialog<sp/>widgets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>prefDialog-&gt;<ref refid="classPrefDialog_1533723197454424489b5d228f5f5caa1" kindref="member">updateDialog</ref>();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prefDialog-&gt;exec()<sp/>==<sp/>QDialog::Accepted){<sp/><sp/></highlight><highlight class="comment">//<sp/>execute<sp/>the<sp/>dialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>user<sp/>did<sp/>not<sp/>click<sp/>the<sp/>applyButton,<sp/>save<sp/>the<sp/>new<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prefDialog-&gt;<ref refid="classPrefDialog_1491cca7a9a8b66103f24efc3340ba73b" kindref="member">isApplyEnable</ref>()){</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>prefDialog-&gt;<ref refid="classPrefDialog_1953465d0d61f15b796dd0925a827acc4" kindref="member">updateConfiguration</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>settings<sp/>in<sp/>config<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKlustersApp_1c7c2a96cafce4fb33453e9a024ed70b9" kindref="member">applyPreferences</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>let<sp/>settings<sp/>take<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKlustersApp_1c7c2a96cafce4fb33453e9a024ed70b9" kindref="member">KlustersApp::applyPreferences</ref>()<sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>configuration().<ref refid="classConfiguration_1a75c026a728e50c5c9608083190b7a8e" kindref="member">write</ref>();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newNbUndo<sp/>=<sp/>configuration().<ref refid="classConfiguration_17f8531c4000c0293f78c8caa3124342a" kindref="member">getNbUndo</ref>();<sp/><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbUndo<sp/>!=<sp/>newNbUndo){</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mainDock)doc-&gt;<ref refid="classKlustersDoc_1de63f485af8e801044a67d1aa350c1f5" kindref="member">nbUndoChangedCleaning</ref>(newNbUndo);<sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/>nbUndo<sp/>=<sp/>newNbUndo;<sp/></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(backgroundColor<sp/>!=<sp/>configuration().getBackgroundColor()){</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/>backgroundColor<sp/>=<sp/>configuration().<ref refid="classConfiguration_1efbbe89bf667275f75a4a4149a9dbf34" kindref="member">getBackgroundColor</ref>();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mainDock)doc-&gt;<ref refid="classKlustersDoc_162ff96ab552a6439ff03317a3127b5c1" kindref="member">setBackgroundColor</ref>(backgroundColor);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_1a6dd26806594f9612cfdca379d275788" kindref="member">changeBackgroundColor</ref>(backgroundColor);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(waveformsGain<sp/>!=<sp/>configuration().getGain()){</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/>waveformsGain<sp/>=<sp/>configuration().<ref refid="classConfiguration_1ff4be7ee2b641a6d88d2a916aa78c18e" kindref="member">getGain</ref>();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mainDock)doc-&gt;<ref refid="classKlustersDoc_1b7d03b220005de15ae172043231fa0be" kindref="member">setGain</ref>(waveformsGain);<sp/></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(displayTimeInterval<sp/>!=<sp/>configuration().getTimeInterval()){</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/>displayTimeInterval<sp/>=<sp/>configuration().<ref refid="classConfiguration_1881f6c0739dd99bd30c08c8a3e74ce46" kindref="member">getTimeInterval</ref>();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mainDock)doc-&gt;<ref refid="classKlustersDoc_1f617bf250bdd0ba0ded0a1d604bd1d04" kindref="member">setTimeStepInSecond</ref>(displayTimeInterval);<sp/></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(configuration().isCrashRecovery()){</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mainDock)doc-&gt;<ref refid="classKlustersDoc_163a07f2f54559efe206b0b1304102ba8" kindref="member">updateAutoSavingInterval</ref>(configuration().crashRecoveryInterval());</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>doc-&gt;<ref refid="classKlustersDoc_17a4d237a21568b38b77645081fe77a05" kindref="member">setAutoSaving</ref>(configuration().crashRecoveryInterval());</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>doc-&gt;<ref refid="classKlustersDoc_162a0a7dbb9953b81b721726fe0e50637" kindref="member">stopAutoSaving</ref>();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(configuration().getNbChannels()<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>channelPositions<sp/>!=<sp/>(*configuration().getChannelPositions())){</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/>QValueList&lt;int&gt;*<sp/>positions<sp/>=<sp/>configuration().<ref refid="classConfiguration_167a1e103437a36d02d14117acc07312b" kindref="member">getChannelPositions</ref>();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/>channelPositions.clear();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>static_cast&lt;int&gt;(positions-&gt;size());<sp/>++i)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>channelPositions.append((*positions)[i]);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mainDock)doc-&gt;<ref refid="classKlustersDoc_1ffa7da699cbe815def62825812ad4e7a" kindref="member">setChannelPositions</ref>(channelPositions);<sp/><sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reclusteringExecutable<sp/>!=<sp/>configuration().getReclusteringExecutable())</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/>reclusteringExecutable<sp/>=<sp/>configuration().<ref refid="classConfiguration_1c24486902200d3707e63b92be9194ee3" kindref="member">getReclusteringExecutable</ref>();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(reclusteringArgs<sp/>!=<sp/>configuration().getReclusteringArguments())</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/>reclusteringArgs<sp/>=<sp/>configuration().<ref refid="classConfiguration_1bdd4795cdfe8dfccd037cd311cf2d5f1" kindref="member">getReclusteringArguments</ref>();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKlustersApp_163021de4ec271742dfaf23ec8def318e" kindref="member">KlustersApp::initializePreferences</ref>(){</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>nbUndo<sp/>=<sp/>configuration().<ref refid="classConfiguration_17f8531c4000c0293f78c8caa3124342a" kindref="member">getNbUndo</ref>();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>waveformsGain<sp/>=<sp/>configuration().<ref refid="classConfiguration_1ff4be7ee2b641a6d88d2a916aa78c18e" kindref="member">getGain</ref>();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>displayTimeInterval<sp/>=<sp/>configuration().<ref refid="classConfiguration_1881f6c0739dd99bd30c08c8a3e74ce46" kindref="member">getTimeInterval</ref>();</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>backgroundColor<sp/>=<sp/><sp/>configuration().<ref refid="classConfiguration_1efbbe89bf667275f75a4a4149a9dbf34" kindref="member">getBackgroundColor</ref>();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>reclusteringExecutable<sp/>=<sp/><sp/>configuration().<ref refid="classConfiguration_1c24486902200d3707e63b92be9194ee3" kindref="member">getReclusteringExecutable</ref>();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>reclusteringArgs<sp/>=<sp/>configuration().<ref refid="classConfiguration_1bdd4795cdfe8dfccd037cd311cf2d5f1" kindref="member">getReclusteringArguments</ref>();<sp/></highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::initStatusBar()</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>STATUSBAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>statusBar()-&gt;insertItem(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">),1);</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classKlustersApp_1273691ae8af78d611da8300b820521cf" kindref="member">KlustersApp::eventFilter</ref>(QObject*<sp/>object,QEvent*<sp/>event){</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(object<sp/>==<sp/>paramBar<sp/>&amp;&amp;<sp/>event-&gt;type()<sp/>==<sp/>71){</highlight><highlight class="comment">//filter<sp/>the<sp/>removal<sp/>of<sp/>items<sp/>from<sp/>the<sp/>paramBar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QWidget::eventFilter(object,event);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>standard<sp/>event<sp/>processing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::initClusterPanel()</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Creation<sp/>of<sp/>the<sp/>left<sp/>panel<sp/>containing<sp/>the<sp/>clusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>clusterPanel<sp/>=<sp/>createDockWidget(<sp/></highlight><highlight class="stringliteral">&quot;clusterPanel&quot;</highlight><highlight class="normal">,QImage(</highlight><highlight class="stringliteral">&quot;classnew&quot;</highlight><highlight class="normal">)<sp/>,<sp/>0L,<sp/>i18n(</highlight><highlight class="stringliteral">&quot;The<sp/>cluster<sp/>list&quot;</highlight><highlight class="normal">),<sp/>0L);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Initialisation<sp/>of<sp/>the<sp/>cluster<sp/>palette<sp/>containing<sp/>the<sp/>cluster<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>clusterPalette<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classClusterPalette" kindref="compound">ClusterPalette</ref>(backgroundColor,clusterPanel,statusBar(),</highlight><highlight class="stringliteral">&quot;ClusterPalette&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Place<sp/>the<sp/>clusterPalette<sp/>frame<sp/>in<sp/>the<sp/>clusterPanel<sp/>(the<sp/>view)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>clusterPanel-&gt;setWidget(clusterPalette);</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::initDisplay(){</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/>isInit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//prevent<sp/>the<sp/>spine<sp/>boxes<sp/>or<sp/>the<sp/>lineedit<sp/>and<sp/>the<sp/>editline<sp/>to<sp/>trigger<sp/>during<sp/>initialisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/>timeFrameMode-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/>overlayPresentation-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/>meanPresentation-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/>scaleByMax-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/>dimensionX-&gt;show();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/>dimensionY-&gt;show();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/>featureXLabel-&gt;show();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/>spikesTodisplay-&gt;show();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/>spikesTodisplayLabel-&gt;show();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/>correlogramsHalfDuration-&gt;setText(INITIAL_CORRELOGRAMS_HALF_TIME_FRAME);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/>correlogramsHalfDuration-&gt;show();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/>correlogramsHalfDurationLabel-&gt;show();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/>binSizeBox-&gt;setText(DEFAULT_BIN_SIZE);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/>binSizeBox-&gt;show();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/>binSizeLabel-&gt;show();</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/>shoulderLine-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>range<sp/>value<sp/>of<sp/>the<sp/>spine<sp/>boxes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/>dimensionX-&gt;setRange(1,doc-&gt;<ref refid="classKlustersDoc_1e11ba0b7320e888adb878be044120b60" kindref="member">nbDimensions</ref>());</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/>dimensionY-&gt;setRange(1,doc-&gt;<ref refid="classKlustersDoc_1e11ba0b7320e888adb878be044120b60" kindref="member">nbDimensions</ref>());</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/>maximumTime<sp/>=<sp/>doc-&gt;<ref refid="classKlustersDoc_12847d2fd1a29a9ccbb95d1f76e639780" kindref="member">maxTime</ref>();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/>start-&gt;setRange(0,maximumTime);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/>validator.setRange(0,maximumTime);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>totalNbSpikes<sp/>=<sp/>doc-&gt;<ref refid="classKlustersDoc_1ee019b0530d109b923c72c64fa27879e" kindref="member">totalNbOfSpikes</ref>();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/>spikesTodisplay-&gt;setRange(1,totalNbSpikes);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/>maximumTime<sp/>*=<sp/>1000;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/>correlogramsHalfTimeFrameValidator.setRange(0,static_cast&lt;int&gt;((maximumTime<sp/>-<sp/>1)<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/>binSizeValidator.setRange(0,maximumTime);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Create<sp/>the<sp/>mainDock<sp/>(first<sp/>view)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/>mainDock<sp/>=<sp/>createDockWidget(<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>QPixmap(),<sp/>0L,<sp/>i18n(doc-&gt;<ref refid="classKlustersDoc_1085afd1fb2c747f404f735117b99df94" kindref="member">documentName</ref>()),<sp/></highlight><highlight class="stringliteral">&quot;Overview<sp/>Display&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/>mainDock-&gt;setDockWindowTransient(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>setting<sp/>dialog<sp/>exists<sp/>(has<sp/>already<sp/>be<sp/>open<sp/>once),<sp/>enable<sp/>the<sp/>settings<sp/>for<sp/>the<sp/>channels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prefDialog<sp/>!=<sp/>0L)<sp/>prefDialog-&gt;<ref refid="classPrefDialog_1898f8d6ca8f6b85606bf57a192116604" kindref="member">enableChannelSettings</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//No<sp/>clusters<sp/>are<sp/>shown<sp/>by<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/>QValueList&lt;int&gt;*<sp/>clusterList<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QValueList&lt;int&gt;();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>dimension<sp/>and<sp/>start<sp/>spine<sp/>boxes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/>dimensionX-&gt;setValue(1);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/>dimensionY-&gt;setValue(2);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/>isInit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//now<sp/>a<sp/>change<sp/>in<sp/>a<sp/>spine<sp/>box<sp/>or<sp/>the<sp/>lineedit<sp/>will<sp/>trigger<sp/>an<sp/>update<sp/>of<sp/>the<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>2<sp/>documents,<sp/>opened<sp/>one<sp/>after<sp/>the<sp/>other,<sp/>do<sp/>not<sp/>have<sp/>the<sp/>same<sp/>number<sp/>of<sp/>channels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//discard<sp/>any<sp/>settings<sp/>concerning<sp/>the<sp/>positions<sp/>of<sp/>the<sp/>channels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(configuration().getNbChannels()<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>configuration().getNbChannels()<sp/>!=<sp/>doc-&gt;<ref refid="classKlustersDoc_17f587d241814806065548a235c4842cd" kindref="member">nbOfchannels</ref>())<sp/>channelPositions.clear();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,*doc,backgroundColor,1,2,clusterList,KlustersView::OVERVIEW,mainDock,0,WDestructiveClose,statusBar(),</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displayTimeInterval,waveformsGain,channelPositions,</highlight><highlight class="keyword">false</highlight><highlight class="normal">,0,timeWindow,DEFAULT_NB_SPIKES_DISPLAYED,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight><highlight class="keyword">false</highlight><highlight class="normal">,DEFAULT_BIN_SIZE.toInt(),INITIAL_CORRELOGRAMS_HALF_TIME_FRAME.toInt()<sp/>*<sp/>2<sp/>+<sp/>1,Data::MAX);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/>view-&gt;installEventFilter(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Keep<sp/>track<sp/>of<sp/>the<sp/>number<sp/>of<sp/>displays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/>displayCount<sp/>++;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>document&apos;s<sp/>list<sp/>of<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_164cd839a0c4f9ffa2c04e2ad2b9b6cb5" kindref="member">addView</ref>(view);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/>mainDock-&gt;setWidget(view);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//allow<sp/>dock<sp/>on<sp/>the<sp/>left<sp/>side<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/>mainDock-&gt;setDockSite(KDockWidget::DockLeft);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/>setView(mainDock);<sp/></highlight><highlight class="comment">//<sp/>central<sp/>widget<sp/>in<sp/>a<sp/>KDE<sp/>mainwindow<sp/>&lt;=&gt;<sp/>setMainWidget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/>setMainDockWidget(mainDock);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//disable<sp/>docking<sp/>abilities<sp/>of<sp/>mainDock<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/>mainDock-&gt;setEnableDocking(KDockWidget::DockNone);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Initialize<sp/>and<sp/>dock<sp/>the<sp/>clusterpanel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Create<sp/>the<sp/>cluster<sp/>list<sp/>and<sp/>select<sp/>the<sp/>clusters<sp/>which<sp/>will<sp/>be<sp/>drawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_1f873f3be830cedd156aa32c94c785459" kindref="member">createClusterList</ref>(doc);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_199fe87a450eeb1bf711bdd4c0a1788db" kindref="member">selectItems</ref>(*clusterList);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//allow<sp/>dock<sp/>on<sp/>the<sp/>right<sp/>side<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/>clusterPanel-&gt;setDockSite(KDockWidget::DockRight);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Dock<sp/>the<sp/>clusterPanel<sp/>on<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/>clusterPanel-&gt;setEnableDocking(KDockWidget::DockFullSite);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/>clusterPanel-&gt;manualDock(mainDock,KDockWidget::DockLeft,0);<sp/><sp/></highlight><highlight class="comment">//<sp/>relation<sp/>target/this<sp/>(in<sp/>percent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//forbit<sp/>docking<sp/>abilities<sp/>of<sp/>clusterPanel<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/>clusterPanel-&gt;setEnableDocking(KDockWidget::DockNone);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>Time<sp/>frame<sp/>and<sp/>sample<sp/>related<sp/>widgets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/>spikesTodisplay-&gt;setValue(DEFAULT_NB_SPIKES_DISPLAYED);<sp/><sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/>start-&gt;setValue(0);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/>start-&gt;setLineStep(timeWindow);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/>duration-&gt;setText(INITIAL_WAVEFORM_TIME_WINDOW);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeFrameMode-&gt;isChecked()){</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>duration-&gt;show();</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>durationLabel-&gt;show();</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>start-&gt;show();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>startLabel-&gt;show();</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>spikesTodisplay-&gt;hide();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>spikesTodisplayLabel-&gt;hide();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>duration-&gt;hide();</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>durationLabel-&gt;hide();</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>start-&gt;hide();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>startLabel-&gt;hide();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>spikesTodisplay-&gt;show();</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>spikesTodisplayLabel-&gt;show();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//show<sp/>all<sp/>the<sp/>encapsulated<sp/>widgets<sp/>of<sp/>all<sp/>controlled<sp/>dockwidgets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/>dockManager-&gt;activate();</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Enable<sp/>some<sp/>actions<sp/>now<sp/>that<sp/>a<sp/>document<sp/>is<sp/>open<sp/>(see<sp/>the<sp/>klustersui.rc<sp/>file)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;documentState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::createDisplay(<ref refid="classKlustersView_1293293dc2641e78395b7184d115e7805" kindref="member">KlustersView::DisplayType</ref><sp/>type)</highlight></codeline>
<codeline lineno="581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mainDock){</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>KDockWidget*<sp/>display;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>displayName<sp/>=<sp/>(doc-&gt;<ref refid="classKlustersDoc_1085afd1fb2c747f404f735117b99df94" kindref="member">documentName</ref>()).append(type);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>displayType<sp/>=<sp/><ref refid="classKlustersView_1d1616e7acc19875b5f3e39c2f20ffb21" kindref="member">KlustersView::DisplayTypeNames</ref>[type];</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>display<sp/>=<sp/>createDockWidget(QString(QChar(displayCount)),QImage(</highlight><highlight class="stringliteral">&quot;classnew&quot;</highlight><highlight class="normal">)<sp/>,<sp/>0L,<sp/>i18n(displayName),<sp/>displayType);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>the<sp/>active<sp/>display<sp/>contains<sp/>a<sp/>ProcessWidget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isProcessWidget<sp/>=<sp/><ref refid="classKlustersApp_10498cf3621cee3770053fa4ecd62fcd5" kindref="member">doesActiveDisplayContainProcessWidget</ref>();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Present<sp/>the<sp/>clusters<sp/>of<sp/>the<sp/>current<sp/>display<sp/>in<sp/>the<sp/>new<sp/>display<sp/>(if<sp/>it<sp/>was<sp/>not<sp/>a<sp/>processing<sp/>display).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>QValueList&lt;int&gt;*<sp/>clusterList<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QValueList&lt;int&gt;();</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isProcessWidget){</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QValueList&lt;int&gt;&amp;<sp/>currentClusters<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>();</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QValueList&lt;int&gt;::const_iterator<sp/>shownClustersIterator;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(shownClustersIterator<sp/>=<sp/>currentClusters.begin();<sp/>shownClustersIterator<sp/>!=<sp/>currentClusters.end();<sp/>++shownClustersIterator<sp/>)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clusterList-&gt;append(*shownClustersIterator);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Use<sp/>the<sp/>current<sp/>dimensions<sp/>for<sp/>the<sp/>new<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>XDimension<sp/>=<sp/>dimensionX-&gt;value();</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>YDimension<sp/>=<sp/>dimensionY-&gt;value();</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Use<sp/>the<sp/>same<sp/>scale,<sp/>bin<sp/>size,<sp/>time<sp/>frame<sp/>and<sp/>shoulder<sp/>line<sp/>for<sp/>the<sp/>new<sp/>correlation<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//as<sp/>the<sp/>existing<sp/>one<sp/>if<sp/>it<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classData_17c467cbdd19a0b0ccde482baed716155" kindref="member">Data::ScaleMode</ref><sp/>scaleMode<sp/>=<sp/>Data::MAX;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeOfBin<sp/>=<sp/>DEFAULT_BIN_SIZE.toInt();</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>correlogramTimeWindow<sp/>=<sp/>INITIAL_CORRELOGRAMS_HALF_TIME_FRAME.toInt()<sp/>*<sp/>2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>line<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isProcessWidget<sp/>&amp;&amp;<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;containsCorrelationView()){</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>scaleMode<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;<ref refid="classKlustersView_1d65c5a74efe215f48aafc91ef5682f9b" kindref="member">scaleMode</ref>();</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>sizeOfBin<sp/>=<sp/>binSize;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>correlogramTimeWindow<sp/>=<sp/>correlogramTimeFrame;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;<ref refid="classKlustersView_1bb493962fed10bf94a1c0ab2c5e29d49" kindref="member">isShoulderLine</ref>();</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Use<sp/>the<sp/>same<sp/>waveform<sp/>presentation<sp/>mode<sp/>for<sp/>the<sp/>new<sp/>display<sp/>(will<sp/>be<sp/>apply<sp/>only<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>new<sp/>display<sp/>contains<sp/>a<sp/>waveform<sp/>view).<sp/>The<sp/>values<sp/>of<sp/>the<sp/>associated<sp/>widgets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(start<sp/>and<sp/>duration<sp/>or<sp/>spikesTodisplay)<sp/>are<sp/>the<sp/>same<sp/>as<sp/>the<sp/>activeDisplay<sp/>ones.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>default<sp/>for<sp/>a<sp/>new<sp/>display<sp/>is<sp/>sample<sp/>mode<sp/>without<sp/>mean<sp/>and<sp/>overlay.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overLay<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mean<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inTimeFrameMode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>startingTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timeFrameWidth<sp/>=<sp/>INITIAL_WAVEFORM_TIME_WINDOW.toLong();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nbSpkToDisplay<sp/>=<sp/>DEFAULT_NB_SPIKES_DISPLAYED;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isProcessWidget<sp/>&amp;&amp;<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;containsWaveformView()){</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>overLay<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;<ref refid="classKlustersView_12e21a902ee44c5c5d40c157171f00d1d" kindref="member">isOverLayPresentation</ref>();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mean<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;<ref refid="classKlustersView_1a35a90d5eca8d41cb7957e6049072a6b" kindref="member">isMeanPresentation</ref>();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;isInTimeFrameMode()){</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inTimeFrameMode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startingTime<sp/>=<sp/>startTime;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeFrameWidth<sp/>=<sp/>timeWindow;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>nbSpkToDisplay<sp/>=<sp/>spikesTodisplay-&gt;value();</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isProcessWidget)<sp/>view<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,*doc,backgroundColor,XDimension,YDimension,clusterList,type,display,0,WDestructiveClose,statusBar(),</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displayTimeInterval,waveformsGain,channelPositions,inTimeFrameMode,startingTime,timeFrameWidth,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbSpkToDisplay,overLay,mean,sizeOfBin,correlogramTimeWindow,scaleMode,line,<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;getStartingTime(),<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;getDuration(),showHideLabels-&gt;isChecked(),<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;<ref refid="classKlustersView_17f31d34f53d9a8578789fa4bd67b3ae7" kindref="member">getUndoList</ref>(),<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;<ref refid="classKlustersView_186d621e968d6ff16b1259a5e88fb2978" kindref="member">getRedoList</ref>());</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>view<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,*doc,backgroundColor,XDimension,YDimension,clusterList,type,display,0,WDestructiveClose,statusBar(),</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>displayTimeInterval,waveformsGain,channelPositions,inTimeFrameMode,startingTime,timeFrameWidth,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbSpkToDisplay,overLay,mean,sizeOfBin,correlogramTimeWindow,scaleMode,line,<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;getStartingTime(),<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;getDuration(),showHideLabels-&gt;isChecked());</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>view-&gt;installEventFilter(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>document&apos;s<sp/>list<sp/>of<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_164cd839a0c4f9ffa2c04e2ad2b9b6cb5" kindref="member">addView</ref>(view);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//install<sp/>the<sp/>new<sp/>view<sp/>in<sp/>the<sp/>display<sp/>so<sp/>it<sp/>can<sp/>be<sp/>see<sp/>in<sp/>the<sp/>future<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>display-&gt;setWidget(view);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Temporarily<sp/>allow<sp/>addition<sp/>of<sp/>a<sp/>new<sp/>dockWidget<sp/>in<sp/>the<sp/>center</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>mainDock-&gt;setDockSite(KDockWidget::DockCenter);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Add<sp/>the<sp/>new<sp/>display<sp/>as<sp/>a<sp/>tab<sp/>and<sp/>get<sp/>a<sp/>new<sp/>DockWidget,<sp/>grandParent<sp/>of<sp/>the<sp/>target<sp/>(mainDock)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>the<sp/>new<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>KDockWidget*<sp/>grandParent<sp/>=<sp/>display-&gt;manualDock(mainDock,KDockWidget::DockCenter);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Disconnect<sp/>the<sp/>previous<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tabsParent<sp/>!=<sp/>NULL)<sp/>disconnect(tabsParent,0,0,0);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>grandParent&apos;s<sp/>widget<sp/>is<sp/>the<sp/>KDockTabGroup<sp/>regrouping<sp/>all<sp/>the<sp/>tabs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>tabsParent<sp/>=<sp/>static_cast&lt;KDockTabGroup*&gt;(grandParent-&gt;getWidget());</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Connect<sp/>the<sp/>change<sp/>tab<sp/>signal<sp/>to<sp/>slotTabChange(QWidget*<sp/>widget)<sp/>to<sp/>trigger<sp/>updates<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>active<sp/>display<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>connect(tabsParent,<sp/>SIGNAL(currentChanged(QWidget*)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotTabChange(QWidget*)));</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;tabState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Back<sp/>to<sp/>enable<sp/>dock<sp/>to<sp/>the<sp/>left<sp/>side<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>mainDock-&gt;setDockSite(KDockWidget::DockLeft);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>forbit<sp/>docking<sp/>abilities<sp/>of<sp/>display<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>display-&gt;setEnableDocking(KDockWidget::DockNone);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>others<sp/>to<sp/>dock<sp/>to<sp/>the<sp/>left<sp/>side<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>display-&gt;setDockSite(KDockWidget::DockLeft);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Keep<sp/>track<sp/>of<sp/>the<sp/>number<sp/>of<sp/>displays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>displayCount<sp/>++;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//show<sp/>all<sp/>the<sp/>encapsulated<sp/>widgets<sp/>of<sp/>all<sp/>controlled<sp/>dockwidgets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>dockManager-&gt;activate();</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKlustersApp_1fe3f87a26c56d51854693562a45d5441" kindref="member">KlustersApp::openDocumentFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KURL&amp;<sp/>url)</highlight></codeline>
<codeline lineno="693"><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Opening<sp/>file...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>filePath<sp/>=<sp/>url.path();</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/>QFileInfo<sp/>file(filePath);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(url.protocol()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((fileOpenRecent-&gt;items().contains(url.prettyURL()))<sp/>&amp;&amp;<sp/>!file.exists()){</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>not<sp/>found:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>title.append(filePath);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>answer<sp/>=<sp/>KMessageBox::questionYesNo(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;The<sp/>selected<sp/>file<sp/>no<sp/>longer<sp/>exists,<sp/>do<sp/>you<sp/>want<sp/>to<sp/>remove<sp/>it<sp/>from<sp/>the<sp/>list?&quot;</highlight><highlight class="normal">),<sp/>i18n(title));</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(answer<sp/>==<sp/>KMessageBox::Yes)<sp/>fileOpenRecent-&gt;removeURL(url);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>fileOpenRecent-&gt;addURL(url);<sp/></highlight><highlight class="comment">//hack,<sp/>unselect<sp/>the<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>filePath<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Do<sp/>not<sp/>handle<sp/>remote<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/>KMessageBox::sorry(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;Sorry,<sp/>Klusters<sp/>does<sp/>not<sp/>handle<sp/>remote<sp/>files.&quot;</highlight><highlight class="normal">),i18n(</highlight><highlight class="stringliteral">&quot;Remote<sp/>file<sp/>handling&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/>fileOpenRecent-&gt;removeURL(url);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/>filePath<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>the<sp/>file<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!file.exists()){</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;The<sp/>selected<sp/>file<sp/>does<sp/>not<sp/>exist.&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//If<sp/>no<sp/>document<sp/>is<sp/>open<sp/>already<sp/>open<sp/>the<sp/>document<sp/>asked.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!mainDock){</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>displayCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>currentNbUndo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>currentNbRedo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>fileOpenRecent-&gt;addURL(url);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>file<sp/>(that<sp/>will<sp/>also<sp/>initialize<sp/>the<sp/>doc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>errorInformation<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>returnStatus<sp/>=<sp/>doc-&gt;<ref refid="classKlustersDoc_1565e5e3b6e9752759c1d17a08608c3db" kindref="member">openDocument</ref>(url,errorInformation);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(returnStatus<sp/>==<sp/>KlustersDoc::INCORRECT_FILE)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;The<sp/>selected<sp/>file<sp/>is<sp/>invalid,<sp/>it<sp/>has<sp/>to<sp/>be<sp/>of<sp/>the<sp/>form<sp/>baseName.clu.n<sp/>or<sp/>baseName.fet.n<sp/>or<sp/>baseName.par.n&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//close<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_12a94c08a4f87b760d5f5d71bf8bb5fb3" kindref="member">closeDocument</ref>();</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resetState();</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(returnStatus<sp/>==<sp/>KlustersDoc::DOWNLOAD_ERROR)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>the<sp/>cluster<sp/>file<sp/>(base.clu.n)&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//close<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_12a94c08a4f87b760d5f5d71bf8bb5fb3" kindref="member">closeDocument</ref>();</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resetState();</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(returnStatus<sp/>==<sp/>KlustersDoc::SPK_DOWNLOAD_ERROR)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>the<sp/>spike<sp/>file<sp/>(base.spk.n)&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//close<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_12a94c08a4f87b760d5f5d71bf8bb5fb3" kindref="member">closeDocument</ref>();</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resetState();</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(returnStatus<sp/>==<sp/>KlustersDoc::FET_DOWNLOAD_ERROR)</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>the<sp/>feature<sp/>file<sp/>(base.fet.n)&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//close<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_12a94c08a4f87b760d5f5d71bf8bb5fb3" kindref="member">closeDocument</ref>();</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resetState();</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(returnStatus<sp/>==<sp/>KlustersDoc::PAR_DOWNLOAD_ERROR)</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>the<sp/>general<sp/>parameter<sp/>file<sp/>(base.par)&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//close<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_12a94c08a4f87b760d5f5d71bf8bb5fb3" kindref="member">closeDocument</ref>();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resetState();</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(returnStatus<sp/>==<sp/>KlustersDoc::PARX_DOWNLOAD_ERROR)</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>the<sp/>specific<sp/>parameter<sp/>file<sp/>(base.par.n)&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//close<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_12a94c08a4f87b760d5f5d71bf8bb5fb3" kindref="member">closeDocument</ref>();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resetState();</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(returnStatus<sp/>==<sp/>KlustersDoc::PARXML_DOWNLOAD_ERROR)</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>get<sp/>the<sp/>parameter<sp/>file<sp/>(base.xml)&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//close<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_12a94c08a4f87b760d5f5d71bf8bb5fb3" kindref="member">closeDocument</ref>();</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resetState();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(returnStatus<sp/>==<sp/>KlustersDoc::OPEN_ERROR)</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>the<sp/>files&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//close<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_12a94c08a4f87b760d5f5d71bf8bb5fb3" kindref="member">closeDocument</ref>();</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resetState();<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(returnStatus<sp/>==<sp/>KlustersDoc::INCORRECT_CONTENT)</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,errorInformation,<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//close<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_12a94c08a4f87b760d5f5d71bf8bb5fb3" kindref="member">closeDocument</ref>();</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resetState();<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Save<sp/>the<sp/>recent<sp/>file<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>fileOpenRecent-&gt;saveEntries(config);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>setCaption(doc-&gt;<ref refid="classKlustersDoc_1085afd1fb2c747f404f735117b99df94" kindref="member">documentName</ref>());</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>initDisplay();</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//A<sp/>traceView<sp/>is<sp/>possible<sp/>only<sp/>if<sp/>the<sp/>variables<sp/>it<sp/>needs<sp/>are<sp/>available<sp/>(provided<sp/>in<sp/>the<sp/>new<sp/>parameter<sp/>file)<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>.dat<sp/>file<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doc-&gt;<ref refid="classKlustersDoc_16d2448f387b3ccffc933772c091329ef" kindref="member">areTraceDataAvailable</ref>()<sp/>&amp;&amp;<sp/>doc-&gt;<ref refid="classKlustersDoc_1310cd10389dedd7059adee3a9a977d8a" kindref="member">isTraceViewVariablesAvailable</ref>())<sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;traceDisplayState&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();<sp/></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check,<sp/>if<sp/>this<sp/>document<sp/>is<sp/>already<sp/>open.<sp/>If<sp/>yes,<sp/>do<sp/>not<sp/>do<sp/>anything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/>QString<sp/>docName<sp/>=<sp/>doc-&gt;<ref refid="classKlustersDoc_1085afd1fb2c747f404f735117b99df94" kindref="member">documentName</ref>();</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/>QStringList<sp/>fileParts<sp/>=<sp/>QStringList::split(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">,<sp/>url.fileName());</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/>QString<sp/>electrodNb;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fileParts.count()<sp/>&lt;<sp/>3)<sp/>electrodNb<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>electrodNb<sp/>=<sp/>fileParts[fileParts.count()-1];;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/>QString<sp/>baseName<sp/>=<sp/>fileParts[0];</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint<sp/>i<sp/>=<sp/>1;i<sp/>&lt;<sp/>fileParts.count()-2;<sp/>++i)<sp/>baseName<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>+<sp/>fileParts[i];</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/>QString<sp/>name<sp/>=<sp/>url.directory()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>baseName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>+<sp/>electrodNb;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(docName<sp/>==<sp/>name){</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>fileOpenRecent-&gt;addURL(url);<sp/></highlight><highlight class="comment">//hack,<sp/>unselect<sp/>the<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>document<sp/>asked<sp/>is<sp/>not<sp/>the<sp/>already<sp/>open.<sp/>Open<sp/>a<sp/>new<sp/>instance<sp/>of<sp/>the<sp/>application<sp/>with<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>fileOpenRecent-&gt;addURL(url);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>filePath<sp/>=<sp/>doc-&gt;<ref refid="classKlustersDoc_13f8c9a24ba2471f0539ffaeb767683cd" kindref="member">url</ref>().path();</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>KProcess*<sp/>childproc<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>KProcess();</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>childproc-&gt;setUseShell(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/>command<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;`which<sp/>klusters`<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>command.append(url.path());</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>*childproc<sp/>&lt;&lt;<sp/>command;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>childproc-&gt;start(KProcess::DontCare);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>childproc-&gt;detach();</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>childproc;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();<sp/><sp/></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKlustersApp_130f4dc1238024f5371f7c7fe1279689a" kindref="member">KlustersApp::importDocumentFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KURL&amp;<sp/>url)</highlight></codeline>
<codeline lineno="905"><highlight class="normal">{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Importing<sp/>file...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//If<sp/>no<sp/>document<sp/>is<sp/>open<sp/>already<sp/>open<sp/>the<sp/>document<sp/>ask.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!mainDock){</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>file<sp/>(that<sp/>will<sp/>also<sp/>initialize<sp/>the<sp/>doc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!doc-&gt;<ref refid="classKlustersDoc_1965d178d9d208a1a27e21929d35bdab3" kindref="member">importDocument</ref>(url))</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>import<sp/>document<sp/>!&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error<sp/>!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//close<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_12a94c08a4f87b760d5f5d71bf8bb5fb3" kindref="member">closeDocument</ref>();</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOpenRecent-&gt;addURL(url);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>initDisplay();</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check,<sp/>if<sp/>this<sp/>document<sp/>is<sp/>already<sp/>open.<sp/>If<sp/>yes,<sp/>do<sp/>not<sp/>do<sp/>anything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doc-&gt;<ref refid="classKlustersDoc_13f8c9a24ba2471f0539ffaeb767683cd" kindref="member">url</ref>()==url){</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>document<sp/>asked<sp/>is<sp/>not<sp/>the<sp/>already<sp/>open.<sp/>Open<sp/>a<sp/>new<sp/>instance<sp/>of<sp/>the<sp/>application<sp/>with<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Only<sp/>one<sp/>document<sp/>at<sp/>the<sp/>time<sp/>is<sp/>allowed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classKlustersApp_10498cf3621cee3770053fa4ecd62fcd5" kindref="member">KlustersApp::doesActiveDisplayContainProcessWidget</ref>(){</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/>KDockWidget*<sp/>current;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>active<sp/>tab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tabsParent)<sp/>current<sp/>=<sp/>static_cast&lt;KDockWidget*&gt;(tabsParent-&gt;currentPage());</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/></highlight><highlight class="comment">//or<sp/>the<sp/>active<sp/>window<sp/>if<sp/>there<sp/>is<sp/>only<sp/>one<sp/>display<sp/>(which<sp/>can<sp/>only<sp/>be<sp/>the<sp/>mainDock)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>current<sp/>=<sp/>mainDock;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(current-&gt;getWidget())-&gt;isA(</highlight><highlight class="stringliteral">&quot;ProcessWidget&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">KlustersApp::activeView</ref>(){</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>KDockWidget*<sp/>current;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>active<sp/>tab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tabsParent)<sp/>current<sp/>=<sp/>static_cast&lt;KDockWidget*&gt;(tabsParent-&gt;currentPage());</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//or<sp/>the<sp/>active<sp/>window<sp/>if<sp/>there<sp/>is<sp/>only<sp/>one<sp/>display<sp/>(which<sp/>can<sp/>only<sp/>be<sp/>the<sp/>mainDock)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>current<sp/>=<sp/>mainDock;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static_cast&lt;KlustersView*&gt;(current-&gt;getWidget());</highlight></codeline>
<codeline lineno="960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKlustersApp_12636b13992ec00de7a03bd1ffdc8c89f" kindref="member">KlustersApp::saveProperties</ref>(KConfig*<sp/>config)</highlight></codeline>
<codeline lineno="963"><highlight class="normal">{</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>&apos;config&apos;<sp/>object<sp/>points<sp/>to<sp/>the<sp/>session<sp/>managed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>config<sp/>file.<sp/><sp/>anything<sp/>you<sp/>write<sp/>here<sp/>will<sp/>be<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>later<sp/>when<sp/>this<sp/>app<sp/>is<sp/>restored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Save<sp/>the<sp/>recent<sp/>file<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/>fileOpenRecent-&gt;saveEntries(config);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/>config-&gt;writePathEntry(</highlight><highlight class="stringliteral">&quot;openFile&quot;</highlight><highlight class="normal">,filePath);</highlight></codeline>
<codeline lineno="971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKlustersApp_13457658dc58cdd314127429d41a0fe9d" kindref="member">KlustersApp::readProperties</ref>(KConfig*<sp/>config)</highlight></codeline>
<codeline lineno="974"><highlight class="normal">{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>&apos;config&apos;<sp/>object<sp/>points<sp/>to<sp/>the<sp/>session<sp/>managed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>config<sp/>file.<sp/><sp/>this<sp/>function<sp/>is<sp/>automatically<sp/>called<sp/>whenever</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>app<sp/>is<sp/>being<sp/>restored.<sp/><sp/>read<sp/>in<sp/>here<sp/>whatever<sp/>you<sp/>wrote</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>&apos;saveProperties&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>recent<sp/>file<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/>fileOpenRecent-&gt;loadEntries(config);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/>filePath<sp/>=<sp/>config-&gt;readPathEntry(</highlight><highlight class="stringliteral">&quot;openFile&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>KURL<sp/>url;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>url.setPath(filePath);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><ref refid="classKlustersApp_1fe3f87a26c56d51854693562a45d5441" kindref="member">openDocumentFile</ref>(url);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="comment">//TO<sp/>implement<sp/>,<sp/>see<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classKlustersApp_102af6812b32ae17bf3e46d4ddc5c4b06" kindref="member">KlustersApp::queryClose</ref>()</highlight></codeline>
<codeline lineno="990"><highlight class="normal">{<sp/><sp/></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Save<sp/>the<sp/>recent<sp/>file<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/>fileOpenRecent-&gt;saveEntries(config);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//call<sp/>when<sp/>the<sp/>kDockMainWindow<sp/>will<sp/>be<sp/>close</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//implement<sp/>to<sp/>ask<sp/>the<sp/>user<sp/>to<sp/>save<sp/>if<sp/>necessary<sp/>before<sp/>closing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doc<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doc-&gt;<ref refid="classKlustersDoc_11746ca282382238d43dda837d96667b9" kindref="member">canCloseView</ref>()){</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>a<sp/>waiting<sp/>cursor<sp/>in<sp/>case<sp/>there<sp/>is<sp/>some<sp/>delay<sp/>to<sp/>the<sp/>ending<sp/>of<sp/>the<sp/>running<sp/>threads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doc-&gt;<ref refid="classKlustersDoc_1b118244021cdae70f39a40660fbff06d" kindref="member">canCloseDocument</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;queryClose&quot;</highlight><highlight class="normal">)){<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processWidget<sp/>!=<sp/>0L<sp/>&amp;&amp;<sp/>processWidget-&gt;<ref refid="classProcessWidget_1b83ef679b004836c9c0f4b18b26c5fa0" kindref="member">isRunning</ref>()){</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processWidget-&gt;<ref refid="classProcessWidget_1572f011eba9b8b804334562dd3d6cdc4" kindref="member">killJob</ref>();</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processKilled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!(processFinished<sp/>&amp;&amp;<sp/>processOutputsFinished)){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QTimer::singleShot(2000,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(close()));</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processWidget<sp/>!=<sp/>0L){</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>processWidget;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processWidget<sp/>=<sp/>0L<sp/>;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_12a94c08a4f87b760d5f5d71bf8bb5fb3" kindref="member">closeDocument</ref>();</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="comment">//TO<sp/>implement<sp/>,<sp/>see<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classKlustersApp_1a8856c9ee9dc20894f741e324aaf96a0" kindref="member">KlustersApp::queryExit</ref>()</highlight></codeline>
<codeline lineno="1027"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>saveThread<sp/>has<sp/>not<sp/>finish,<sp/>wait<sp/>until<sp/>id<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!saveThread-&gt;wait()){cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;in<sp/>queryExit&quot;</highlight><highlight class="normal">&lt;&lt;endl;};</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::customEvent<sp/>(QCustomEvent*<sp/>event){</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Event<sp/>sent<sp/>by<sp/>the<sp/>SaveThread</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(event-&gt;type()<sp/>==<sp/>QEvent::User<sp/>+<sp/>100){</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Save<sp/>file<sp/>done.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classSaveThread_1_1SaveDoneEvent" kindref="compound">SaveThread::SaveDoneEvent</ref>*<sp/>saveEvent<sp/>=<sp/>(<ref refid="classSaveThread_1_1SaveDoneEvent" kindref="compound">SaveThread::SaveDoneEvent</ref>*)<sp/>event;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(saveEvent-&gt;<ref refid="classSaveThread_1_1SaveDoneEvent_166d02337bea86e29e8208743146f8fd7" kindref="member">isSaveOk</ref>()){</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>cluster<sp/>data<sp/>have<sp/>been<sp/>saved<sp/>to<sp/>a<sp/>local<sp/>temporary<sp/>file<sp/>if<sp/>the<sp/>original<sp/>file<sp/>was<sp/>a<sp/>remote<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(otherwise<sp/>the<sp/>so<sp/>call<sp/>temporary<sp/>file<sp/>is<sp/>the<sp/>orignal<sp/>one).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>requested<sp/>save<sp/>location<sp/>is<sp/>remote,<sp/>the<sp/>temporary<sp/>file<sp/>needs<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//to<sp/>be<sp/>uploaded.<sp/>The<sp/>save<sp/>process<sp/>is<sp/>made<sp/>in<sp/>a<sp/>thread<sp/>and<sp/>it<sp/>seams<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>KDE<sp/>upload<sp/>can<sp/>not<sp/>be<sp/>call<sp/>asynchronously,<sp/>so<sp/>the<sp/>upload<sp/>is<sp/>call<sp/>after<sp/>the<sp/>end<sp/>of<sp/>the<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!KIO::NetAccess::upload(saveEvent-&gt;<ref refid="classSaveThread_1_1SaveDoneEvent_1fbf32d3b58cbda8aebdd6d0a7869929a" kindref="member">temporaryFile</ref>(),doc-&gt;<ref refid="classKlustersDoc_13f8c9a24ba2471f0539ffaeb767683cd" kindref="member">url</ref>())){</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KMessageBox::error<sp/>(0,i18n(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>save<sp/>the<sp/>current<sp/>document<sp/>!&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;I/O<sp/>Error<sp/>!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(saveEvent-&gt;<ref refid="classSaveThread_1_1SaveDoneEvent_13a9fbb7d1ff959efec1b5ddc8a8d6618" kindref="member">isItSaveAs</ref>()){</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileOpenRecent-&gt;addURL(doc-&gt;<ref refid="classKlustersDoc_13f8c9a24ba2471f0539ffaeb767683cd" kindref="member">url</ref>());</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCaption(doc-&gt;<ref refid="classKlustersDoc_1085afd1fb2c747f404f735117b99df94" kindref="member">documentName</ref>());</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KMessageBox::error<sp/>(0,i18n(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>save<sp/>the<sp/>current<sp/>document<sp/>!&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;I/O<sp/>Error<sp/>!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;SavingDoneState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Event<sp/>sent<sp/>by<sp/>klusterDoc<sp/>to<sp/>advice<sp/>that<sp/>there<sp/>is<sp/>some<sp/>threads<sp/>still<sp/>running.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(event-&gt;type()<sp/>==<sp/>QEvent::User<sp/>+<sp/>400){</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><ref refid="classKlustersDoc_1_1CloseDocumentEvent" kindref="compound">KlustersDoc::CloseDocumentEvent</ref>*<sp/>closeEvent<sp/>=<sp/>(<ref refid="classKlustersDoc_1_1CloseDocumentEvent" kindref="compound">KlustersDoc::CloseDocumentEvent</ref>*)<sp/>event;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/>QString<sp/>origin<sp/>=<sp/>closeEvent-&gt;methodOfOrigin();</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Try<sp/>to<sp/>close<sp/>the<sp/>document<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doc-&gt;<ref refid="classKlustersDoc_1b118244021cdae70f39a40660fbff06d" kindref="member">canCloseDocument</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,origin)){</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_12a94c08a4f87b760d5f5d71bf8bb5fb3" kindref="member">closeDocument</ref>();</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Execute<sp/>what<sp/>is<sp/>need<sp/>it<sp/>after<sp/>the<sp/>close<sp/>depending<sp/>on<sp/>the<sp/>callingMethod</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(origin<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;queryClose&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close();</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(origin<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;fileClose&quot;</highlight><highlight class="normal"><sp/>||<sp/>origin<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;displayClose&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>slotFileClose();</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Event<sp/>sent<sp/>by<sp/>the<sp/>parameterBar<sp/>to<sp/>advice<sp/>that<sp/>it<sp/>has<sp/>been<sp/>resized.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(event-&gt;type()<sp/>==<sp/>QEvent::User<sp/>+<sp/>1000){</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKlustersApp_164db61eab5b2a48580fc758d0cc23a1e" kindref="member">slotUpdateParameterBar</ref>();</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="comment">//<sp/>SLOT<sp/>IMPLEMENTATION</highlight></codeline>
<codeline lineno="1092"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotFileOpen()</highlight></codeline>
<codeline lineno="1095"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Opening<sp/>file...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/>KURL<sp/>url=KFileDialog::getOpenURL(QString::null,</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i18n(</highlight><highlight class="stringliteral">&quot;*.fet.*|Feature<sp/>File<sp/>(*.fet.n)\n*.clu.*|Cluster<sp/>File<sp/>(*.clu.n)\n*.spk.*|Spike<sp/>File<sp/>(*.spk.n)\n*.par.*|Specific<sp/>Parameter<sp/>File<sp/>(*.par.n)\n*|All<sp/>files&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Open<sp/>File...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!url.isEmpty())</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKlustersApp_1fe3f87a26c56d51854693562a45d5441" kindref="member">openDocumentFile</ref>(url);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotFileClose(){</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doc<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!saveThread-&gt;wait()){};</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doc-&gt;<ref refid="classKlustersDoc_11746ca282382238d43dda837d96667b9" kindref="member">canCloseView</ref>()){</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//try<sp/>to<sp/>close<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doc-&gt;<ref refid="classKlustersDoc_1b118244021cdae70f39a40660fbff06d" kindref="member">canCloseDocument</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;fileClose&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//remove<sp/>all<sp/>the<sp/>displays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tabsParent){</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Remove<sp/>the<sp/>display<sp/>from<sp/>the<sp/>group<sp/>of<sp/>tabs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbOfTabs<sp/>=<sp/>tabsParent-&gt;count();</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KDockWidget*<sp/>current<sp/>=<sp/>static_cast&lt;KDockWidget*&gt;(tabsParent-&gt;page(0));</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(current<sp/>==<sp/>mainDock){</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>static_cast&lt;KDockWidget*&gt;(tabsParent-&gt;page(1));</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((current-&gt;getWidget())-&gt;isA(</highlight><highlight class="stringliteral">&quot;KlustersView&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tabsParent-&gt;removePage(current);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>current;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="comment">//give<sp/>the<sp/>time<sp/>to<sp/>the<sp/>process<sp/>to<sp/>finish.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processWidget-&gt;<ref refid="classProcessWidget_1b83ef679b004836c9c0f4b18b26c5fa0" kindref="member">isRunning</ref>()){</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processWidget-&gt;<ref refid="classProcessWidget_1572f011eba9b8b804334562dd3d6cdc4" kindref="member">killJob</ref>();</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processKilled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processFinished<sp/>&amp;&amp;<sp/>processOutputsFinished){</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tabsParent-&gt;removePage(current);<sp/></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>current;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processWidget<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QTimer::singleShot(2000,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotFileClose()));</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbOfTabs<sp/>==<sp/>2)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//the<sp/>reminding<sp/>one<sp/>is<sp/>the<sp/>mainDock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tabsParent<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reset<sp/>the<sp/>cluster<sp/>palette<sp/>and<sp/>hide<sp/>the<sp/>cluster<sp/>panel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_14e4c8c8703cbdd6ca1d21d9a38633913" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusterPanel-&gt;hide();</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusterPanel-&gt;undock();</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>last<sp/>display<sp/>is<sp/>the<sp/>mainDock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((mainDock-&gt;getWidget())-&gt;isA(</highlight><highlight class="stringliteral">&quot;KlustersView&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mainDock;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processWidget-&gt;<ref refid="classProcessWidget_1b83ef679b004836c9c0f4b18b26c5fa0" kindref="member">isRunning</ref>()){</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processWidget-&gt;<ref refid="classProcessWidget_1572f011eba9b8b804334562dd3d6cdc4" kindref="member">killJob</ref>();</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processKilled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processFinished<sp/>&amp;&amp;<sp/>processOutputsFinished){</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mainDock;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processWidget<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainDock-&gt;hide();</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QTimer::singleShot(2000,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotFileClose()));</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainDock<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_12a94c08a4f87b760d5f5d71bf8bb5fb3" kindref="member">closeDocument</ref>();</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resetState();</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotFileImport(){</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Importing<sp/>file...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/>KURL<sp/>url=KFileDialog::getOpenURL(QString::null,</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i18n(</highlight><highlight class="stringliteral">&quot;*|All<sp/>files&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Import<sp/>File...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!url.isEmpty())</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKlustersApp_130f4dc1238024f5371f7c7fe1279689a" kindref="member">importDocumentFile</ref>(url);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotFileOpenRecent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KURL&amp;<sp/>url)</highlight></codeline>
<codeline lineno="1195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Opening<sp/>file...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><ref refid="classKlustersApp_1fe3f87a26c56d51854693562a45d5441" kindref="member">openDocumentFile</ref>(url);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotFileSave()</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Saving<sp/>file...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;SavingState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/>saveThread-&gt;<ref refid="classSaveThread_1db01fc3e53e273f01605bb81851d771a" kindref="member">save</ref>(doc-&gt;<ref refid="classKlustersDoc_13f8c9a24ba2471f0539ffaeb767683cd" kindref="member">url</ref>(),doc,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotFileRenumberAndSave(){</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Renumbering<sp/>and<sp/>saving...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;SavingState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_1ec532d62838002de5359f4a0afe46b8a" kindref="member">renumberClusters</ref>();</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/>slotFileSave();</highlight></codeline>
<codeline lineno="1216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotFileSaveAs()</highlight></codeline>
<codeline lineno="1219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Saving<sp/>file<sp/>with<sp/>a<sp/>new<sp/>filename...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>KURL<sp/>url=KFileDialog::getSaveURL(QDir::currentDirPath(),</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i18n(</highlight><highlight class="stringliteral">&quot;*|All<sp/>files&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Save<sp/>as...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!url.isEmpty()){</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;SavingState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>saveThread-&gt;<ref refid="classSaveThread_1db01fc3e53e273f01605bb81851d771a" kindref="member">save</ref>(url,doc,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotDisplayClose()</highlight></codeline>
<codeline lineno="1231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/>KDockWidget*<sp/>current;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Closing<sp/>display...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>active<sp/>tab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tabsParent){</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbOfTabs<sp/>=<sp/>tabsParent-&gt;count();</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>static_cast&lt;KDockWidget*&gt;(tabsParent-&gt;currentPage());</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>active<sp/>display<sp/>is<sp/>the<sp/>mainDock,<sp/>assign<sp/>the<sp/>mainDock<sp/>status<sp/>to<sp/>an<sp/>other<sp/>display<sp/>(take<sp/>the<sp/>first<sp/>one<sp/>available)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(current<sp/>==<sp/>mainDock){</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tabsParent-&gt;currentPageIndex()<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainDock<sp/>=<sp/>static_cast&lt;KDockWidget*&gt;(tabsParent-&gt;page(1));</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setMainDockWidget(mainDock);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>setMainDockWidget(static_cast&lt;KDockWidget*&gt;(tabsParent-&gt;page(0)));</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Remove<sp/>the<sp/>display<sp/>from<sp/>the<sp/>group<sp/>of<sp/>tabs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>tabsParent-&gt;removePage(current);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>displayCount<sp/>--;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>there<sp/>is<sp/>only<sp/>one<sp/>display<sp/>left,<sp/>the<sp/>group<sp/>of<sp/>tabs<sp/>will<sp/>be<sp/>deleted<sp/>so<sp/>we<sp/>set<sp/>tabsParent<sp/>to<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbOfTabs<sp/>==<sp/>2){</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noTabState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tabsParent<sp/>=<sp/>0L;<sp/></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Remove<sp/>the<sp/>view<sp/>from<sp/>the<sp/>document<sp/>list<sp/>if<sp/>need<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((current-&gt;getWidget())-&gt;isA(</highlight><highlight class="stringliteral">&quot;KlustersView&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/>dynamic_cast&lt;KlustersView*&gt;(current-&gt;getWidget());</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_18c4df1f23efade7a732cc2af8c484c3b" kindref="member">removeView</ref>(view);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>Displays<sp/>menu<sp/>if<sp/>the<sp/>current<sp/>display<sp/>is<sp/>a<sp/>grouping<sp/>assistant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(view-&gt;containsErrorMatrixView()){</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;groupingAssistantDisplayNotExists&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorMatrixExists<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Delete<sp/>the<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>current;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processFinished<sp/>&amp;&amp;<sp/>processOutputsFinished){</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>current;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processWidget<sp/>=<sp/>0L;<sp/></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processOutputDock<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processWidget-&gt;<ref refid="classProcessWidget_105b1ff1d417576b92f7b6dc824e2ac46" kindref="member">hideWidget</ref>();<sp/><sp/></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//or<sp/>the<sp/>active<sp/>window<sp/>if<sp/>there<sp/>is<sp/>only<sp/>one<sp/>display<sp/>(which<sp/>can<sp/>only<sp/>be<sp/>the<sp/>mainDock)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>a<sp/>save<sp/>is<sp/>already<sp/>in<sp/>process,<sp/>wait<sp/>until<sp/>it<sp/>is<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(saveThread-&gt;running()){</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();<sp/></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!saveThread-&gt;wait()){};</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reset<sp/>the<sp/>cluster<sp/>palette<sp/>and<sp/>hide<sp/>the<sp/>cluster<sp/>panel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_14e4c8c8703cbdd6ca1d21d9a38633913" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>clusterPanel-&gt;hide();</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>clusterPanel-&gt;undock();</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//try<sp/>to<sp/>close<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doc-&gt;<ref refid="classKlustersDoc_1b118244021cdae70f39a40660fbff06d" kindref="member">canCloseDocument</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;displayClose&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_12a94c08a4f87b760d5f5d71bf8bb5fb3" kindref="member">closeDocument</ref>();</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Delete<sp/>the<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((mainDock-&gt;getWidget())-&gt;isA(</highlight><highlight class="stringliteral">&quot;KlustersView&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processWidget<sp/>!=<sp/>0L){</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>processWidget;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processWidget<sp/>=<sp/>0L;<sp/></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mainDock;<sp/></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processWidget-&gt;<ref refid="classProcessWidget_1b83ef679b004836c9c0f4b18b26c5fa0" kindref="member">isRunning</ref>()){</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processWidget-&gt;<ref refid="classProcessWidget_1572f011eba9b8b804334562dd3d6cdc4" kindref="member">killJob</ref>();</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processKilled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processFinished<sp/>&amp;&amp;<sp/>processOutputsFinished){</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mainDock;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processWidget<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainDock-&gt;hide();</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processWidget-&gt;<ref refid="classProcessWidget_105b1ff1d417576b92f7b6dc824e2ac46" kindref="member">hideWidget</ref>();</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QTimer::singleShot(2000,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotDisplayClose()));</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mainDock<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Ask<sp/>the<sp/>user<sp/>if<sp/>wants<sp/>to<sp/>save<sp/>the<sp/>document<sp/>if<sp/>need<sp/>it<sp/>before<sp/>closing<sp/>and<sp/>confirm<sp/>the<sp/>closing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doc-&gt;<ref refid="classKlustersDoc_11746ca282382238d43dda837d96667b9" kindref="member">canCloseView</ref>()){</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();<sp/></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reset<sp/>the<sp/>cluster<sp/>palette<sp/>and<sp/>hide<sp/>the<sp/>cluster<sp/>panel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_14e4c8c8703cbdd6ca1d21d9a38633913" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/>clusterPanel-&gt;hide();</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>clusterPanel-&gt;undock();</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//try<sp/>to<sp/>close<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doc-&gt;<ref refid="classKlustersDoc_1b118244021cdae70f39a40660fbff06d" kindref="member">canCloseDocument</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;displayClose&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_12a94c08a4f87b760d5f5d71bf8bb5fb3" kindref="member">closeDocument</ref>();</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Delete<sp/>the<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((mainDock-&gt;getWidget())-&gt;isA(</highlight><highlight class="stringliteral">&quot;KlustersView&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processWidget<sp/>!=<sp/>0L){</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>processWidget;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processWidget<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mainDock;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processWidget-&gt;<ref refid="classProcessWidget_1b83ef679b004836c9c0f4b18b26c5fa0" kindref="member">isRunning</ref>()){</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processWidget-&gt;<ref refid="classProcessWidget_1572f011eba9b8b804334562dd3d6cdc4" kindref="member">killJob</ref>();</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processKilled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processFinished<sp/>&amp;&amp;<sp/>processOutputsFinished){</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mainDock;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processWidget<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainDock-&gt;hide();</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>processWidget-&gt;<ref refid="classProcessWidget_105b1ff1d417576b92f7b6dc824e2ac46" kindref="member">hideWidget</ref>();</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QTimer::singleShot(2000,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotDisplayClose()));</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mainDock<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>resetState();</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotFilePrint()</highlight></codeline>
<codeline lineno="1372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Printing...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/>printer-&gt;setOrientation(KPrinter::Landscape);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/>printer-&gt;setColorMode(KPrinter::Color);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/>printer-&gt;addDialogPage(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>printDialogPage(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(printer-&gt;setup(</highlight><highlight class="keyword">this</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//retrieve<sp/>the<sp/>backgroundColor<sp/>setting<sp/>from<sp/>KPrinter<sp/>object,<sp/>//1<sp/>&lt;=&gt;<sp/>white<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>backgroundColor<sp/>=<sp/>printer-&gt;option(</highlight><highlight class="stringliteral">&quot;kde-klusters-backgroundColor&quot;</highlight><highlight class="normal">).toInt();</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classKlustersApp_10498cf3621cee3770053fa4ecd62fcd5" kindref="member">doesActiveDisplayContainProcessWidget</ref>()){</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(backgroundColor<sp/>==<sp/>1)<sp/>view-&gt;<ref refid="classKlustersView_1952dfc734809e7272d9e0274a9f67520" kindref="member">print</ref>(printer,filePath,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>view-&gt;<ref refid="classKlustersView_1952dfc734809e7272d9e0274a9f67520" kindref="member">print</ref>(printer,filePath,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>KDockWidget*<sp/>dock<sp/>=<sp/>static_cast&lt;KDockWidget*&gt;(tabsParent-&gt;currentPage());</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classProcessWidget" kindref="compound">ProcessWidget</ref>*<sp/>view<sp/>=<sp/>static_cast&lt;ProcessWidget*&gt;(dock-&gt;getWidget());</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/>view-&gt;<ref refid="classKlustersView_1952dfc734809e7272d9e0274a9f67520" kindref="member">print</ref>(printer,filePath);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));<sp/></highlight></codeline>
<codeline lineno="1396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotFileQuit()</highlight></codeline>
<codeline lineno="1399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Exiting...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1402"><highlight class="comment"><sp/><sp/>//<sp/>close<sp/>the<sp/>first<sp/>window,<sp/>the<sp/>list<sp/>makes<sp/>the<sp/>next<sp/>one<sp/>the<sp/>first<sp/>again.</highlight></codeline>
<codeline lineno="1403"><highlight class="comment"><sp/><sp/>//<sp/>This<sp/>ensures<sp/>that<sp/>queryClose()<sp/>is<sp/>called<sp/>on<sp/>each<sp/>window<sp/>to<sp/>ask<sp/>for<sp/>closing</highlight></codeline>
<codeline lineno="1404"><highlight class="comment"><sp/><sp/>KMainWindow*<sp/>w;</highlight></codeline>
<codeline lineno="1405"><highlight class="comment"><sp/><sp/>if(memberList)<sp/>//List<sp/>of<sp/>members<sp/>of<sp/>KMainWindow<sp/>class</highlight></codeline>
<codeline lineno="1406"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="comment"><sp/><sp/><sp/><sp/>for(w=memberList-&gt;first();<sp/>w!=0;<sp/>w=memberList-&gt;first())</highlight></codeline>
<codeline lineno="1408"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1409"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>only<sp/>close<sp/>the<sp/>window<sp/>if<sp/>the<sp/>closeEvent<sp/>is<sp/>accepted.<sp/>If<sp/>the<sp/>user<sp/>presses<sp/>Cancel<sp/>on<sp/>the<sp/>saveModified()<sp/>dialog,</highlight></codeline>
<codeline lineno="1410"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>the<sp/>window<sp/>and<sp/>the<sp/>application<sp/>stay<sp/>open.</highlight></codeline>
<codeline lineno="1411"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if(!w-&gt;close())</highlight></codeline>
<codeline lineno="1412"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="1413"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1414"><highlight class="comment"><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/>close();</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotUndo()</highlight></codeline>
<codeline lineno="1422"><highlight class="normal">{<sp/><sp/></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Reverting<sp/>last<sp/>action...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_1dd25ffec7e4a1300642e06eecabfcb8f" kindref="member">undo</ref>();</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>browsing<sp/>possibility<sp/>of<sp/>the<sp/>traceView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(view-&gt;<ref refid="classKlustersView_163634c9778eddef2cb44472cbdb0d8b6" kindref="member">containsTraceView</ref>()<sp/>&amp;&amp;<sp/>view-&gt;<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>!=<sp/>0)<sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;traceViewBrowsingState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noTraceViewBrowsingState&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotRedo()</highlight></codeline>
<codeline lineno="1438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Reverting<sp/>last<sp/>undo<sp/>action...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_16fe053578b7d4e3f744def28e1f5b228" kindref="member">redo</ref>();</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>browsing<sp/>possibility<sp/>of<sp/>the<sp/>traceView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(view-&gt;<ref refid="classKlustersView_163634c9778eddef2cb44472cbdb0d8b6" kindref="member">containsTraceView</ref>()<sp/>&amp;&amp;<sp/>view-&gt;<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>!=<sp/>0)<sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;traceViewBrowsingState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noTraceViewBrowsingState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotUpdateUndoNb(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>undoNb){</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/>currentNbUndo<sp/>=<sp/>undoNb;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentNbUndo<sp/>&gt;<sp/>0)<sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;undoState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;emptyUndoState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotUpdateRedoNb(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>redoNb){</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/>currentNbRedo<sp/>=<sp/>redoNb;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentNbRedo<sp/>==<sp/>0)<sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;emptyRedoState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotViewMainToolBar()</highlight></codeline>
<codeline lineno="1464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Toggle<sp/>the<sp/>main<sp/>toolbar...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>turn<sp/>Toolbar<sp/>on<sp/>or<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!viewMainToolBar-&gt;isChecked())</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>toolBar(</highlight><highlight class="stringliteral">&quot;mainToolBar&quot;</highlight><highlight class="normal">)-&gt;hide();</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/>toolBar(</highlight><highlight class="stringliteral">&quot;mainToolBar&quot;</highlight><highlight class="normal">)-&gt;show();</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotViewActionBar(){</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Toggle<sp/>the<sp/>action...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>turn<sp/>Toolbar<sp/>on<sp/>or<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!viewActionBar-&gt;isChecked())</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>toolBar(</highlight><highlight class="stringliteral">&quot;actionBar&quot;</highlight><highlight class="normal">)-&gt;hide();</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/>toolBar(</highlight><highlight class="stringliteral">&quot;actionBar&quot;</highlight><highlight class="normal">)-&gt;show();</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotViewParameterBar(){</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Toggle<sp/>the<sp/>parameters...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>turn<sp/>Toolbar<sp/>on<sp/>or<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!viewParameterBar-&gt;isChecked())</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/>paramBar-&gt;hide();</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>paramBar-&gt;show();</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKlustersApp_164db61eab5b2a48580fc758d0cc23a1e" kindref="member">slotUpdateParameterBar</ref>();</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotViewToolBar()</highlight></codeline>
<codeline lineno="1512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Toggle<sp/>the<sp/>tools...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>turn<sp/>Toolbar<sp/>on<sp/>or<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!viewToolBar-&gt;isChecked())</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>toolBar(</highlight><highlight class="stringliteral">&quot;toolBar&quot;</highlight><highlight class="normal">)-&gt;hide();</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/>toolBar(</highlight><highlight class="stringliteral">&quot;toolBar&quot;</highlight><highlight class="normal">)-&gt;show();</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotViewStatusBar()</highlight></codeline>
<codeline lineno="1529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Toggle<sp/>the<sp/>statusbar...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//turn<sp/>Statusbar<sp/>on<sp/>or<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!viewStatusBar-&gt;isChecked())</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>statusBar()-&gt;hide();</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/>statusBar()-&gt;show();</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotViewClusterInfo(){</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Toggle<sp/>the<sp/>presentation<sp/>of<sp/>the<sp/>cluster<sp/>information<sp/>in<sp/>the<sp/>cluster<sp/>palette...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>turn<sp/>the<sp/>user<sp/>cluster<sp/>information<sp/>on<sp/>or<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!viewClusterInfo-&gt;isChecked())</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_1ad74cfaeda2eff134a2360422871eab9" kindref="member">hideUserClusterInformation</ref>();</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_1184d520896142c3056b23009cfe43484" kindref="member">showUserClusterInformation</ref>();</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotWindowNewClusterDisplay()</highlight></codeline>
<codeline lineno="1564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Opening<sp/>a<sp/>new<sp/>cluster<sp/>view...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/>createDisplay(KlustersView::CLUSTERS);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotWindowNewWaveformDisplay()</highlight></codeline>
<codeline lineno="1572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Opening<sp/>a<sp/>new<sp/>waveform<sp/>view...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/>createDisplay(KlustersView::WAVEFORMS);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotWindowNewCrosscorrelationDisplay()</highlight></codeline>
<codeline lineno="1580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Opening<sp/>a<sp/>new<sp/>correlation<sp/>view...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/>createDisplay(KlustersView::CORRELATIONS);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotWindowNewOverViewDisplay()</highlight></codeline>
<codeline lineno="1588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Opening<sp/>a<sp/>new<sp/>over<sp/>view...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/>createDisplay(KlustersView::OVERVIEW);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotWindowNewGroupingAssistantDisplay()</highlight></codeline>
<codeline lineno="1596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Opening<sp/>a<sp/>new<sp/>grouping<sp/>assistant<sp/>view...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/>createDisplay(KlustersView::GROUPING_ASSISTANT_VIEW);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;groupingAssistantDisplayExists&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/>errorMatrixExists<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotNewTraceDisplay(){</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Opening<sp/>a<sp/>new<sp/>grouping<sp/>assistant<sp/>view...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/>createDisplay(KlustersView::TRACES);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotStatusMsg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QString<sp/>&amp;text)</highlight></codeline>
<codeline lineno="1616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>status<sp/>message<sp/>permanently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/>statusBar()-&gt;clear();</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/>statusBar()-&gt;changeItem(text,1);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotKeyBindings(){</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Changing<sp/>the<sp/>key<sp/>bindings...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/>KKeyDialog::configure(actionCollection());</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::viewMenuAboutToShow()</highlight></codeline>
<codeline lineno="1630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>viewMenu-&gt;popupMenu()-&gt;clear();</highlight></codeline>
<codeline lineno="1632"><highlight class="comment"><sp/><sp/>viewMenu-&gt;insert(newClusterView);</highlight></codeline>
<codeline lineno="1633"><highlight class="comment"><sp/><sp/>viewMenu-&gt;insert(newWaveformView);</highlight></codeline>
<codeline lineno="1634"><highlight class="comment"><sp/><sp/>viewMenu-&gt;insert(newCrosscorrelationView);</highlight></codeline>
<codeline lineno="1635"><highlight class="comment"><sp/><sp/>viewMenu-&gt;insert(newOverView);<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(<sp/>pWorkspace-&gt;windowList().isEmpty()<sp/>){</highlight></codeline>
<codeline lineno="1638"><highlight class="comment"><sp/><sp/><sp/><sp/>windowNewWindow-&gt;setEnabled(false);</highlight></codeline>
<codeline lineno="1639"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1640"><highlight class="comment"><sp/><sp/>else{</highlight></codeline>
<codeline lineno="1641"><highlight class="comment"><sp/><sp/><sp/><sp/>windowNewWindow-&gt;setEnabled(true);</highlight></codeline>
<codeline lineno="1642"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1643"><highlight class="comment"><sp/><sp/>viewMenu-&gt;popupMenu()-&gt;insertSeparator();</highlight></codeline>
<codeline lineno="1644"><highlight class="comment"></highlight></codeline>
<codeline lineno="1645"><highlight class="comment"><sp/><sp/>QWidgetList<sp/>windows<sp/>=<sp/>pWorkspace-&gt;windowList();</highlight></codeline>
<codeline lineno="1646"><highlight class="comment"><sp/><sp/>for<sp/>(<sp/>int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>int(windows.count());<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="1647"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1648"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>id<sp/>=<sp/>viewMenu-&gt;popupMenu()-&gt;insertItem(QString(&quot;&amp;%1<sp/>&quot;).arg(i+1)+windows.at(i)-&gt;caption(),<sp/>this,<sp/>SLOT(<sp/>viewMenuActivated(<sp/>int<sp/>)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1649"><highlight class="comment"><sp/><sp/><sp/><sp/>viewMenu-&gt;popupMenu()-&gt;setItemParameter(<sp/>id,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="1650"><highlight class="comment"><sp/><sp/><sp/><sp/>viewMenu-&gt;popupMenu()-&gt;setItemChecked(<sp/>id,<sp/>pWorkspace-&gt;activeWindow()<sp/>==<sp/>windows.at(i)<sp/>);</highlight></codeline>
<codeline lineno="1651"><highlight class="comment"><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::viewMenuActivated(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1655"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>QWidget*<sp/>w<sp/>=<sp/>pWorkspace-&gt;windowList().at(<sp/>id<sp/>);</highlight></codeline>
<codeline lineno="1657"><highlight class="comment"><sp/><sp/>if<sp/>(<sp/>w<sp/>)</highlight></codeline>
<codeline lineno="1658"><highlight class="comment"><sp/><sp/><sp/><sp/>w-&gt;setFocus();*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight><highlight class="comment">/*Slots<sp/>for<sp/>the<sp/>actions<sp/>menu*/</highlight></codeline>
<codeline lineno="1664"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotSingleNew(){</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Create<sp/>new<sp/>cluster...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>we<sp/>are<sp/>in<sp/>delay<sp/>mode,<sp/>update<sp/>the<sp/>display,<sp/>if<sp/>need<sp/>it,<sp/>before<sp/>triggering<sp/>the<sp/>tool<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dynamic_cast&lt;KRadioAction*&gt;(actionCollection()-&gt;action(</highlight><highlight class="stringliteral">&quot;delay_selection&quot;</highlight><highlight class="normal">))-&gt;isChecked()){</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_14275cdc26dafafb880f132eb548eba8b" kindref="member">updateClusters</ref>();</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/>view-&gt;<ref refid="classKlustersView_1197bea78c1061e13e7b92c329ef7bdd1" kindref="member">setMode</ref>(ViewWidget::NEW_CLUSTER);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1677"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotMultipleNew(){</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Split<sp/>clusters...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>we<sp/>are<sp/>in<sp/>delay<sp/>mode,<sp/>update<sp/>the<sp/>display,<sp/>if<sp/>need<sp/>it,<sp/>before<sp/>triggering<sp/>the<sp/>tool<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dynamic_cast&lt;KRadioAction*&gt;(actionCollection()-&gt;action(</highlight><highlight class="stringliteral">&quot;delay_selection&quot;</highlight><highlight class="normal">))-&gt;isChecked()){</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_14275cdc26dafafb880f132eb548eba8b" kindref="member">updateClusters</ref>();</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/>view-&gt;<ref refid="classKlustersView_1197bea78c1061e13e7b92c329ef7bdd1" kindref="member">setMode</ref>(ViewWidget::NEW_CLUSTERS);</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1690"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotDeleteNoise(){</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Delete<sp/>noise...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>we<sp/>are<sp/>in<sp/>delay<sp/>mode,<sp/>update<sp/>the<sp/>display,<sp/>if<sp/>need<sp/>it,<sp/>before<sp/>triggering<sp/>the<sp/>tool<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dynamic_cast&lt;KRadioAction*&gt;(actionCollection()-&gt;action(</highlight><highlight class="stringliteral">&quot;delay_selection&quot;</highlight><highlight class="normal">))-&gt;isChecked()){</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_14275cdc26dafafb880f132eb548eba8b" kindref="member">updateClusters</ref>();</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/>view-&gt;<ref refid="classKlustersView_1197bea78c1061e13e7b92c329ef7bdd1" kindref="member">setMode</ref>(ViewWidget::DELETE_NOISE);</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1701"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1703"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotDeleteArtefact(){</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Delete<sp/>artifact...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>we<sp/>are<sp/>in<sp/>delay<sp/>mode,<sp/>update<sp/>the<sp/>display,<sp/>if<sp/>need<sp/>it,<sp/>before<sp/>triggering<sp/>the<sp/>tool<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dynamic_cast&lt;KRadioAction*&gt;(actionCollection()-&gt;action(</highlight><highlight class="stringliteral">&quot;delay_selection&quot;</highlight><highlight class="normal">))-&gt;isChecked()){</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_14275cdc26dafafb880f132eb548eba8b" kindref="member">updateClusters</ref>();</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/>view-&gt;<ref refid="classKlustersView_1197bea78c1061e13e7b92c329ef7bdd1" kindref="member">setMode</ref>(ViewWidget::DELETE_ARTEFACT);</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1716"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotZoom(){</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Zooming...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>we<sp/>are<sp/>in<sp/>delay<sp/>mode,<sp/>update<sp/>the<sp/>display,<sp/>if<sp/>need<sp/>it,<sp/>before<sp/>triggering<sp/>the<sp/>tool<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dynamic_cast&lt;KRadioAction*&gt;(actionCollection()-&gt;action(</highlight><highlight class="stringliteral">&quot;delay_selection&quot;</highlight><highlight class="normal">))-&gt;isChecked()){</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_14275cdc26dafafb880f132eb548eba8b" kindref="member">updateClusters</ref>();</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/>view-&gt;<ref refid="classKlustersView_1197bea78c1061e13e7b92c329ef7bdd1" kindref="member">setMode</ref>(BaseFrame::ZOOM);</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotSelectTime(){</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Selecting<sp/>time...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/></highlight><highlight class="comment">//If<sp/>we<sp/>are<sp/>in<sp/>delay<sp/>mode,<sp/>update<sp/>the<sp/>display,<sp/>if<sp/>need<sp/>it,<sp/>before<sp/>triggering<sp/>the<sp/>tool<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dynamic_cast&lt;KRadioAction*&gt;(actionCollection()-&gt;action(</highlight><highlight class="stringliteral">&quot;delay_selection&quot;</highlight><highlight class="normal">))-&gt;isChecked()){</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_14275cdc26dafafb880f132eb548eba8b" kindref="member">updateClusters</ref>();</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/>view-&gt;<ref refid="classKlustersView_1197bea78c1061e13e7b92c329ef7bdd1" kindref="member">setMode</ref>(ViewWidget::SELECT_TIME);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));<sp/><sp/></highlight></codeline>
<codeline lineno="1741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotSingleColorUpdate(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clusterId){</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/></highlight><highlight class="comment">//Trigger<sp/>the<sp/>action<sp/>only<sp/>if<sp/>the<sp/>active<sp/>display<sp/>does<sp/>not<sp/>contain<sp/>a<sp/>ProcessWidget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classKlustersApp_10498cf3621cee3770053fa4ecd62fcd5" kindref="member">doesActiveDisplayContainProcessWidget</ref>()){</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_19c4a38944160f4503d86449743785b84" kindref="member">singleColorUpdate</ref>(clusterId,*view);</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotUpdateShownClusters(QValueList&lt;int&gt;<sp/>selectedClusters){<sp/><sp/></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/></highlight><highlight class="comment">//Trigger<sp/>ths<sp/>action<sp/>only<sp/>if<sp/>the<sp/>active<sp/>display<sp/>does<sp/>not<sp/>contain<sp/>a<sp/>ProcessWidget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classKlustersApp_10498cf3621cee3770053fa4ecd62fcd5" kindref="member">doesActiveDisplayContainProcessWidget</ref>()){</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>browsing<sp/>possibility<sp/>of<sp/>the<sp/>traceView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;containsTraceView()<sp/>&amp;&amp;<sp/>selectedClusters.size()<sp/>!=<sp/>0)<sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;traceViewBrowsingState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noTraceViewBrowsingState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_1c67031ece1a596aa7573e287775c5a90" kindref="member">shownClustersUpdate</ref>(selectedClusters,*view);</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/>}<sp/></highlight></codeline>
<codeline lineno="1763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotGroupClusters(QValueList&lt;int&gt;<sp/>selectedClusters){</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Grouping<sp/>clusters...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_19769ce3846285ed3de4534db061db9a3" kindref="member">groupClusters</ref>(selectedClusters,*view);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotMoveClustersToNoise(QValueList&lt;int&gt;<sp/>selectedClusters){</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Delete<sp/>&amp;noisy<sp/>cluster(s)...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_1d89b8f9ff50d32dcc1bdc52d448428ae" kindref="member">deleteClusters</ref>(selectedClusters,*view,1);</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>browsing<sp/>possibility<sp/>of<sp/>the<sp/>traceView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(view-&gt;<ref refid="classKlustersView_163634c9778eddef2cb44472cbdb0d8b6" kindref="member">containsTraceView</ref>()<sp/>&amp;&amp;<sp/>view-&gt;<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>!=<sp/>0)<sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;traceViewBrowsingState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noTraceViewBrowsingState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotMoveClustersToArtefact(QValueList&lt;int&gt;<sp/>selectedClusters){</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Delete<sp/>&amp;artifact<sp/>cluster(s)...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_1d89b8f9ff50d32dcc1bdc52d448428ae" kindref="member">deleteClusters</ref>(selectedClusters,*view,0);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>browsing<sp/>possibility<sp/>of<sp/>the<sp/>traceView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(view-&gt;<ref refid="classKlustersView_163634c9778eddef2cb44472cbdb0d8b6" kindref="member">containsTraceView</ref>()<sp/>&amp;&amp;<sp/>view-&gt;<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>!=<sp/>0)<sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;traceViewBrowsingState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noTraceViewBrowsingState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/>slotStatusMsg(i18n(</highlight><highlight class="stringliteral">&quot;Ready.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotImmediateSelection(){</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Disable<sp/>the<sp/>update<sp/>action<sp/>(see<sp/>the<sp/>klustersui.rc<sp/>file)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;immediateSelectionState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_1e8060c1b87ef4e31a3cddfc3c4eda2c0" kindref="member">setImmediateMode</ref>();</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_14275cdc26dafafb880f132eb548eba8b" kindref="member">updateClusters</ref>();</highlight></codeline>
<codeline lineno="1808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotDelaySelection(){</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Enable<sp/>the<sp/>update<sp/>action<sp/>(see<sp/>the<sp/>klustersui.rc<sp/>file)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;delaySelectionState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_1fca5c6351577c255be5bbda24a1e455a" kindref="member">setDelayMode</ref>();</highlight></codeline>
<codeline lineno="1813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotTabChange(QWidget*<sp/>widget){</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/>KDockWidget*<sp/>display<sp/>=<sp/>dynamic_cast&lt;KDockWidget*&gt;(widget);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((display-&gt;getWidget())-&gt;isA(</highlight><highlight class="stringliteral">&quot;KlustersView&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref><sp/>=<sp/>dynamic_cast&lt;KlustersView*&gt;(display-&gt;getWidget());</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>content<sp/>of<sp/>the<sp/>view<sp/>contains<sp/>in<sp/>active<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_1cd7dcf7e0fbea65f8432fcc3b2e8b844" kindref="member">updateViewContents</ref>();</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/>isInit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//prevent<sp/>the<sp/>spine<sp/>boxes<sp/>or<sp/>the<sp/>lineedit<sp/>and<sp/>the<sp/>editline<sp/>to<sp/>trigger<sp/>during<sp/>initialisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>select<sp/>time<sp/>tool<sp/>is<sp/>useful<sp/>only<sp/>if<sp/>both<sp/>a<sp/>clusterView<sp/>and<sp/>a<sp/>traceView<sp/>are<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_10b4abd5cd3fd932d76aa3c14ccd1a0d8" kindref="member">containsClusterView</ref>()<sp/>&amp;&amp;<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_163634c9778eddef2cb44472cbdb0d8b6" kindref="member">containsTraceView</ref>())<sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;traceViewClusterViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_10b4abd5cd3fd932d76aa3c14ccd1a0d8" kindref="member">containsClusterView</ref>()){</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>dimension<sp/>spine<sp/>boxes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/><sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_1b08defbbf0a202c34e6a4f1cac30d0de" kindref="member">abscissaDimension</ref>();</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/><sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_14e268de32e62d7d36365b68f29c65204" kindref="member">ordinateDimension</ref>();</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensionX-&gt;setValue(x);</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensionY-&gt;setValue(y);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;clusterViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensionX-&gt;show();</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensionY-&gt;show();</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/>featureXLabel-&gt;show();</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noClusterViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensionX-&gt;hide();</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensionY-&gt;hide();</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/>featureXLabel-&gt;hide();</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_16061d21b9558aa8a9ac9fc83923a9582" kindref="member">containsWaveformView</ref>()){</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;waveformsViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_12e21a902ee44c5c5d40c157171f00d1d" kindref="member">isOverLayPresentation</ref>())<sp/>overlayPresentation-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>overlayPresentation-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_1a35a90d5eca8d41cb7957e6049072a6b" kindref="member">isMeanPresentation</ref>())<sp/>meanPresentation-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>meanPresentation-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_16779a4fdf54b2bd23fc07a057d9efb84" kindref="member">isInTimeFrameMode</ref>()){</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeFrameMode-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeWindow<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_19764e7aefc07e25e97ad6a08aa727000" kindref="member">timeFrameWidth</ref>();</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startTime<sp/>=<sp/><sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_169ce6344975f4b2899f83fd132edb8c8" kindref="member">timeFrameStart</ref>();</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start-&gt;setValue(startTime);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start-&gt;setLineStep(timeWindow);</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>duration-&gt;setText(QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(timeWindow));</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>duration-&gt;show();</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>durationLabel-&gt;show();</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start-&gt;show();</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startLabel-&gt;show();</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spikesTodisplay-&gt;hide();</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spikesTodisplayLabel-&gt;hide();</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timeFrameMode-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>duration-&gt;hide();</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>durationLabel-&gt;hide();</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start-&gt;hide();</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startLabel-&gt;hide();</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spikesTodisplay-&gt;setValue(<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_12901b1ce2156026be27015ad57d1b5d2" kindref="member">displayedNbSpikes</ref>());</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spikesTodisplay-&gt;show();</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spikesTodisplayLabel-&gt;show();</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>timeFrameMode-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>overlayPresentation-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>meanPresentation-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noWaveformsViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>duration-&gt;hide();</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>durationLabel-&gt;hide();</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>start-&gt;hide();</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>startLabel-&gt;hide();</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>spikesTodisplay-&gt;hide();</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>spikesTodisplayLabel-&gt;hide();</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_1578c6a8a1ab08f3776fc009146989269" kindref="member">containsCorrelationView</ref>()){</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;correlationViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classData_17c467cbdd19a0b0ccde482baed716155" kindref="member">Data::ScaleMode</ref><sp/>correlationScale<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_1d65c5a74efe215f48aafc91ef5682f9b" kindref="member">scaleMode</ref>();</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(correlationScale){</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Data::RAW<sp/>:</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>noScale-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Data::MAX<sp/>:</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scaleByMax-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Data::SHOULDER<sp/>:</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaleByShouler-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>lineEdit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/>correlogramTimeFrame<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_14c5b18bdaca46952c4542484642672bc" kindref="member">correlationTimeFrameWidth</ref>();</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/>binSize<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_1559e81877c331688e4361f937ccdbe1e" kindref="member">sizeOfBin</ref>();</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/>correlogramsHalfDuration-&gt;setText(QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(correlogramTimeFrame<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/>binSizeBox-&gt;setText(QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(binSize));</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/>correlogramsHalfDuration-&gt;show();</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/>correlogramsHalfDurationLabel-&gt;show();</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/>binSizeBox-&gt;show();</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/>binSizeLabel-&gt;show();</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>shoulder<sp/>line<sp/>menu<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/>shoulderLine-&gt;setChecked(<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_1bb493962fed10bf94a1c0ab2c5e29d49" kindref="member">isShoulderLine</ref>());</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noCorrelationViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/>correlogramsHalfDuration-&gt;hide();</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/>correlogramsHalfDurationLabel-&gt;hide();</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/>binSizeBox-&gt;hide();</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/>binSizeLabel-&gt;hide();</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_14f14535dc1d3d3c2392e7682ee3cb48d" kindref="member">containsErrorMatrixView</ref>())</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;errorMatrixViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noErrorMatrixViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_163634c9778eddef2cb44472cbdb0d8b6" kindref="member">containsTraceView</ref>()){</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/>showHideLabels-&gt;setChecked(<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_1ecfe28088cbdcd3f26b555e992add190" kindref="member">getLabelStatus</ref>());</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_151a758f9c40826c7456dfed84ce8e05f" kindref="member">updateClustersProvider</ref>();</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;traceViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>browsing<sp/>possibility<sp/>of<sp/>the<sp/>traceView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>!=<sp/>0)<sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;traceViewBrowsingState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noTraceViewBrowsingState&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noTraceViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/>isInit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//now<sp/>a<sp/>change<sp/>in<sp/>a<sp/>spine<sp/>box<sp/><sp/>or<sp/>the<sp/>lineedit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//will<sp/>trigger<sp/>an<sp/>update<sp/>of<sp/>the<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>cluster<sp/>palette</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_199fe87a450eeb1bf711bdd4c0a1788db" kindref="member">selectItems</ref>(<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>-&gt;<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>());</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>a<sp/>reclustering<sp/>process<sp/>is<sp/>working<sp/>in<sp/>order<sp/>to<sp/>correctly<sp/>set<sp/>up<sp/>the<sp/>menus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processFinished){</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noReclusterState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/>updateUndoRedoDisplay();<sp/></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;reclusterState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="comment">//<sp/>a<sp/>ProcessWidget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/>dimensionX-&gt;hide();</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/>dimensionY-&gt;hide();</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/>featureXLabel-&gt;hide();</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/>timeFrameMode-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/>overlayPresentation-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/>meanPresentation-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/>duration-&gt;hide();</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/>durationLabel-&gt;hide();</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/>start-&gt;hide();</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/>startLabel-&gt;hide();</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/>spikesTodisplay-&gt;hide();</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/>spikesTodisplayLabel-&gt;hide();</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/>correlogramsHalfDuration-&gt;hide();</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/>correlogramsHalfDurationLabel-&gt;hide();</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/>binSizeBox-&gt;hide();</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/>binSizeLabel-&gt;hide();</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>palette<sp/>of<sp/>clusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!processFinished)<sp/>clusterPalette-&gt;<ref refid="classClusterPalette_199fe87a450eeb1bf711bdd4c0a1788db" kindref="member">selectItems</ref>(clustersToRecluster);</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/>QValueList&lt;int&gt;<sp/>emptyList;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/>clusterPalette-&gt;<ref refid="classClusterPalette_199fe87a450eeb1bf711bdd4c0a1788db" kindref="member">selectItems</ref>(emptyList);</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;reclusterViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1982"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotUpdateDimensionX(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimensionXValue){</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isInit)updateDimensions(dimensionXValue,dimensionY-&gt;value());</highlight></codeline>
<codeline lineno="1986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotUpdateDimensionY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimensionYValue){</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isInit)updateDimensions(dimensionX-&gt;value(),dimensionYValue);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::updateDimensions(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimensionXValue,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimensionYValue){</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;<ref refid="classKlustersView_171c7bf35fbd41f4cc6b62efb4b17cc7a" kindref="member">updateDimensions</ref>(dimensionXValue,dimensionYValue);</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;<ref refid="classKlustersView_12d7666e4b1b79f207ebe930e43752389" kindref="member">showAllWidgets</ref>();</highlight></codeline>
<codeline lineno="1995"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotUpdateDuration(){</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isInit){<sp/></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/>timeWindow<sp/>=<sp/><sp/>(duration-&gt;displayText()).toLong();</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/>start-&gt;setLineStep(timeWindow);</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;<ref refid="classKlustersView_18d409b9c32178e1870f4996d3f77f2ef" kindref="member">updateTimeFrame</ref>(startTime,timeWindow);</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotTimeFrameMode(){</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isInit){</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeFrameMode-&gt;isChecked()){</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/>timeWindow<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;<ref refid="classKlustersView_19764e7aefc07e25e97ad6a08aa727000" kindref="member">timeFrameWidth</ref>();</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/>startTime<sp/>=<sp/><sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;<ref refid="classKlustersView_169ce6344975f4b2899f83fd132edb8c8" kindref="member">timeFrameStart</ref>();</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/>start-&gt;setValue(startTime);</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/>start-&gt;setLineStep(timeWindow);</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/>duration-&gt;setText(QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(timeWindow));</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/>duration-&gt;show();</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/>durationLabel-&gt;show();</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/>start-&gt;show();</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/>startLabel-&gt;show();</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/>spikesTodisplay-&gt;hide();</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/>spikesTodisplayLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;<ref refid="classKlustersView_11e8d95869a20f0a591a66a7b7d36f202" kindref="member">setTimeFrameMode</ref>();</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/>spikesTodisplay-&gt;setValue(<ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;displayedNbSpikes());<sp/></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/>spikesTodisplay-&gt;show();</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/>spikesTodisplayLabel-&gt;show();</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/>duration-&gt;hide();</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/>durationLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/>start-&gt;hide();</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/>startLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;<ref refid="classKlustersView_16e4767ba7bf765631eb9543dec49ecf8" kindref="member">setSampleMode</ref>();</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="2032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::resetState(){</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/>isInit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//prevent<sp/>the<sp/>spine<sp/>boxes<sp/>or<sp/>the<sp/>lineedit<sp/>and<sp/>the<sp/>editline<sp/>to<sp/>trigger<sp/>during<sp/>initialisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/>timeFrameMode-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/>duration-&gt;hide();</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/>durationLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/>start-&gt;hide();</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/>startLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/>dimensionX-&gt;hide();</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/>dimensionY-&gt;hide();</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/>featureXLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/>spikesTodisplay-&gt;hide();</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/>spikesTodisplayLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/>correlogramsHalfDuration-&gt;hide();</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/>correlogramsHalfDurationLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/>binSizeBox-&gt;hide();</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/>binSizeLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/>shoulderLine-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/>binSize<sp/>=<sp/>DEFAULT_BIN_SIZE.toInt();</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/>correlogramTimeFrame<sp/>=<sp/>INITIAL_CORRELOGRAMS_HALF_TIME_FRAME.toInt()<sp/>*<sp/>2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/>startTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/>timeWindow<sp/>=<sp/>INITIAL_WAVEFORM_TIME_WINDOW.toLong();</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/>showHideLabels-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/>isInit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//now<sp/>a<sp/>change<sp/>in<sp/>a<sp/>spine<sp/>box<sp/><sp/>or<sp/>the<sp/>lineedit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//will<sp/>trigger<sp/>an<sp/>update<sp/>of<sp/>the<sp/>view<sp/>contain<sp/>in<sp/>the<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/>processOutputDock<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/>displayCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/>errorMatrixExists<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/>filePath<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Disable<sp/>some<sp/>actions<sp/>when<sp/>no<sp/>document<sp/>is<sp/>open<sp/>(see<sp/>the<sp/>klustersui.rc<sp/>file)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;initState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//A<sp/>traceView<sp/>is<sp/>possible<sp/>only<sp/>if<sp/>the<sp/>variables<sp/>it<sp/>needs<sp/>are<sp/>available<sp/>(provided<sp/>in<sp/>the<sp/>new<sp/>parameter<sp/>file)<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//the<sp/>.dat<sp/>file<sp/>exists.<sp/>Therefore<sp/>disable<sp/>the<sp/>menu<sp/>entry<sp/>by<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noTraceDisplayState&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/>setCaption(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>a<sp/>setting<sp/>dialog<sp/>exists<sp/>(has<sp/>already<sp/>be<sp/>open<sp/>once),<sp/>disable<sp/>the<sp/>settings<sp/>for<sp/>the<sp/>channels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(prefDialog<sp/>!=<sp/>0L)<sp/>prefDialog-&gt;<ref refid="classPrefDialog_1898f8d6ca8f6b85606bf57a192116604" kindref="member">enableChannelSettings</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotUpdateCorrelogramsHalfDuration(){</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isInit){</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halfTimeFrame<sp/>=<sp/>(correlogramsHalfDuration-&gt;displayText()).toInt();</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(halfTimeFrame<sp/>&gt;<sp/>(maximumTime<sp/>-<sp/>binSize)<sp/>/<sp/>2){</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/>correlogramsHalfDuration-&gt;setText(QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg((correlogramTimeFrame<sp/>-<sp/>binSize)<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>(2*static_cast&lt;float&gt;(halfTimeFrame)</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>/static_cast&lt;float&gt;(binSize)-1)<sp/>*<sp/>0.5;</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>static_cast&lt;int&gt;(x<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/>correlogramTimeFrame<sp/>=<sp/>(2*k+1)*binSize;</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(k<sp/>!=<sp/>x){</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>correlogramsHalfDuration-&gt;setText(QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(static_cast&lt;int&gt;(correlogramTimeFrame<sp/>/<sp/>2)));</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;<ref refid="classKlustersView_1cf4cd2a8eb0a7390a159c5824c212fab" kindref="member">updateBinSizeAndTimeFrame</ref>(binSize,correlogramTimeFrame);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotUpdateBinSize(){</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isInit){<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/>binSize<sp/>=<sp/>(binSizeBox-&gt;displayText()).toInt();</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;<ref refid="classKlustersView_1cf4cd2a8eb0a7390a159c5824c212fab" kindref="member">updateBinSizeAndTimeFrame</ref>(binSize,correlogramTimeFrame);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKlustersApp_164db61eab5b2a48580fc758d0cc23a1e" kindref="member">KlustersApp::slotUpdateParameterBar</ref>(){<sp/><sp/></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/>duration-&gt;hide();</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/>durationLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/>start-&gt;hide();</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/>startLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/>dimensionX-&gt;hide();</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/>dimensionY-&gt;hide();</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/>featureXLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/>spikesTodisplay-&gt;hide();</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/>spikesTodisplayLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/>correlogramsHalfDuration-&gt;hide();</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/>correlogramsHalfDurationLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/>binSizeBox-&gt;hide();</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/>binSizeLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mainDock<sp/>!=<sp/>0L){</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>currentView<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentView-&gt;<ref refid="classKlustersView_10b4abd5cd3fd932d76aa3c14ccd1a0d8" kindref="member">containsClusterView</ref>()){</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensionX-&gt;show();</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensionY-&gt;show();</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/>featureXLabel-&gt;show();</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentView-&gt;<ref refid="classKlustersView_16061d21b9558aa8a9ac9fc83923a9582" kindref="member">containsWaveformView</ref>()){</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentView-&gt;<ref refid="classKlustersView_16779a4fdf54b2bd23fc07a057d9efb84" kindref="member">isInTimeFrameMode</ref>()){</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>duration-&gt;show();</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>durationLabel-&gt;show();</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start-&gt;show();</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startLabel-&gt;show();</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spikesTodisplay-&gt;show();</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spikesTodisplayLabel-&gt;show();</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentView-&gt;<ref refid="classKlustersView_1578c6a8a1ab08f3776fc009146989269" kindref="member">containsCorrelationView</ref>()){</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/>correlogramsHalfDuration-&gt;show();</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/>correlogramsHalfDurationLabel-&gt;show();</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/>binSizeBox-&gt;show();</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/>binSizeLabel-&gt;show();</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotUpdateErrorMatrix(){</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/>view-&gt;<ref refid="classKlustersView_141dc1f3470915a53895c733c5d720bdb" kindref="member">updateErrorMatrix</ref>();</highlight></codeline>
<codeline lineno="2153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"></highlight></codeline>
<codeline lineno="2155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotSelectAll(){</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/></highlight><highlight class="comment">//Trigger<sp/>the<sp/>action<sp/>only<sp/>if<sp/>the<sp/>active<sp/>display<sp/>does<sp/>not<sp/>contain<sp/>a<sp/>ProcessWidget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classKlustersApp_10498cf3621cee3770053fa4ecd62fcd5" kindref="member">doesActiveDisplayContainProcessWidget</ref>()){</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;<sp/>clustersToHide;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_104e2ae3a4cec6bf6ebddc1b606f7fbb7" kindref="member">showAllClustersExcept</ref>(clustersToHide);</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="2161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotSelectAllWO01(){</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/></highlight><highlight class="comment">//Trigger<sp/>the<sp/>action<sp/>only<sp/>if<sp/>the<sp/>active<sp/>display<sp/>does<sp/>not<sp/>contain<sp/>a<sp/>ProcessWidget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classKlustersApp_10498cf3621cee3770053fa4ecd62fcd5" kindref="member">doesActiveDisplayContainProcessWidget</ref>()){</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;<sp/>clustersToHide;</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/>clustersToHide.append(0);</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/>clustersToHide.append(1);</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/>doc-&gt;<ref refid="classKlustersDoc_104e2ae3a4cec6bf6ebddc1b606f7fbb7" kindref="member">showAllClustersExcept</ref>(clustersToHide);</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="2171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotRecluster(){</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processOutputDock<sp/>!=<sp/>0L){</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processFinished<sp/>&amp;&amp;<sp/>processOutputsFinished){</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>processOutputDock;</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/>processOutputDock<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/>processWidget<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/>processKilled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/>QTimer::singleShot(2000,</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotRecluster()()));</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>clusters<sp/>to<sp/>recluster<sp/>(those<sp/>selected<sp/>in<sp/>the<sp/>active<sp/>display)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QValueList&lt;int&gt;&amp;<sp/>currentClusters<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>()-&gt;<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>();</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentClusters.size()<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;No<sp/>clusters<sp/>have<sp/>been<sp/>selected<sp/>to<sp/>be<sp/>reclustered.&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error<sp/>!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/>clustersToRecluster.clear();</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/>QValueList&lt;int&gt;::const_iterator<sp/>shownClustersIterator;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(shownClustersIterator<sp/>=<sp/>currentClusters.begin();<sp/>shownClustersIterator<sp/>!=<sp/>currentClusters.end();<sp/>++shownClustersIterator)</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/>clustersToRecluster.append(*shownClustersIterator);</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/>qHeapSort(clustersToRecluster);</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/></highlight><highlight class="comment">//Build<sp/>the<sp/>command<sp/>line<sp/>to<sp/>launch<sp/>the<sp/>reclustering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/></highlight><highlight class="comment">//Create<sp/>the<sp/>fet<sp/>file<sp/>name:<sp/>baseName<sp/>+<sp/>--<sp/>+<sp/>-clusterIDs<sp/>--<sp/>+<sp/>timestamp<sp/>+<sp/>.fet<sp/>+<sp/>.electrodeGroupID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/>QString<sp/>fileBaseName<sp/>=<sp/>doc-&gt;<ref refid="classKlustersDoc_1f1476c293d92a4fe6cef9cd1cad6d850" kindref="member">documentBaseName</ref>();</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/>fileBaseName.append(</highlight><highlight class="stringliteral">&quot;--&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>clustersToRecluster.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>i<sp/>&lt;<sp/>max;<sp/>++i){</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/>fileBaseName.append(QString::number(clustersToRecluster[i]));</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/>fileBaseName.append(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/>fileBaseName.append(QString::number(clustersToRecluster[i]));</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/>QString<sp/>date<sp/>=<sp/>QDate::currentDate().toString(</highlight><highlight class="stringliteral">&quot;--MM.dd.yyyy-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/>QString<sp/>time<sp/>=<sp/>QTime::currentTime().toString(</highlight><highlight class="stringliteral">&quot;hh.mm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/>fileBaseName.append(date);</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/>fileBaseName.append(time);</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/>QString<sp/>command(reclusteringExecutable);</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/>command.append(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/>command.append(reclusteringArgs);</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/>QString<sp/>electrodeGroupID<sp/>=<sp/>doc-&gt;<ref refid="classKlustersDoc_1ce30c77afd8904788b260d7ff36cb30d" kindref="member">currentElectrodeGroupID</ref>();</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(electrodeGroupID<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>electrodeGroupID<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>default<sp/>arguments<sp/>are:<sp/>&quot;%fileBaseName<sp/>%electrodeGroupID<sp/>-MinClusters<sp/>2<sp/>-MaxClusters<sp/>12&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>fet<sp/>file<sp/>name<sp/>will<sp/>be<sp/>docPath/%fileBaseName.fet.%electrodeNb</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(command.contains(</highlight><highlight class="stringliteral">&quot;%electrodeGroupID&quot;</highlight><highlight class="normal">))<sp/>command.replace(</highlight><highlight class="stringliteral">&quot;%electrodeGroupID&quot;</highlight><highlight class="normal">,electrodeGroupID);</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/>command.replace(</highlight><highlight class="stringliteral">&quot;%fileBaseName&quot;</highlight><highlight class="normal">,fileBaseName);</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/>reclusteringFetFileName<sp/>=<sp/>(doc-&gt;<ref refid="classKlustersDoc_176f95a5ba4044bb1b9f758628aa5fae1" kindref="member">documentDirectory</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/>reclusteringFetFileName.append(fileBaseName);</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/>reclusteringFetFileName.append(</highlight><highlight class="stringliteral">&quot;.fet.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/>reclusteringFetFileName.append(electrodeGroupID);</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/></highlight><highlight class="comment">//Subset<sp/>of<sp/>the<sp/>input<sp/>features<sp/>to<sp/>use.<sp/>The<sp/>default<sp/>is<sp/>to<sp/>use<sp/>all<sp/>the<sp/>PCA<sp/>and<sp/>the<sp/>time<sp/>feature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/></highlight><highlight class="comment">//If<sp/>other<sp/>features<sp/>exist<sp/>there<sp/>are<sp/>not<sp/>used<sp/>that<sp/>is<sp/>zeros<sp/>are<sp/>added<sp/>for<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/></highlight><highlight class="comment">//NB:<sp/>the<sp/>time<sp/>is<sp/>always<sp/>the<sp/>last<sp/>feature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(command.contains(</highlight><highlight class="stringliteral">&quot;%features&quot;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalNbOfPCAs<sp/>=<sp/>doc-&gt;<ref refid="classKlustersDoc_152208d41c6d6b381707939d31543f169" kindref="member">totalNbOfPCAs</ref>();</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbDimensions<sp/>=<sp/>doc-&gt;<ref refid="classKlustersDoc_1e11ba0b7320e888adb878be044120b60" kindref="member">nbDimensions</ref>();</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbExtraFeatures<sp/>=<sp/>nbDimensions<sp/>-<sp/>totalNbOfPCAs<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/>QString<sp/>features;</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>totalNbOfPCAs;<sp/>++i)<sp/>features.append(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nbExtraFeatures;<sp/>++i)<sp/>features.append(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/>features.append(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>the<sp/>time<sp/>feature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/>command.replace(</highlight><highlight class="stringliteral">&quot;%features&quot;</highlight><highlight class="normal">,features);</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/></highlight><highlight class="comment">//Create<sp/>the<sp/>feature<sp/>file<sp/>for<sp/>the<sp/>selected<sp/>clusters<sp/>and<sp/>get<sp/>its<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>returnStatus<sp/>=<sp/>doc-&gt;<ref refid="classKlustersDoc_1edf4bab0c8d93a5daf4b39917245ce33" kindref="member">createFeatureFile</ref>(clustersToRecluster,reclusteringFetFileName);</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(returnStatus<sp/>==<sp/>KlustersDoc::OPEN_ERROR){</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;The<sp/>reclustering<sp/>feature<sp/>file<sp/>cannot<sp/>be<sp/>created<sp/>(possibly<sp/>because<sp/>of<sp/>insufficient<sp/>file<sp/>access<sp/>permissions).\n<sp/>Reclustering<sp/>can<sp/>not<sp/>be<sp/>done.&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error<sp/>!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(returnStatus<sp/>==<sp/>KlustersDoc::CREATION_ERROR){</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;An<sp/>error<sp/>happened<sp/>while<sp/>creating<sp/>the<sp/>reclustering<sp/>feature<sp/>file.\n<sp/>Reclustering<sp/>can<sp/>not<sp/>be<sp/>done.&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;IO<sp/>Error<sp/>!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(processWidget<sp/>==<sp/>0L){</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/>KDockWidget*<sp/>display;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/>display<sp/>=<sp/>createDockWidget(QString(QChar(displayCount)),0,<sp/>0L,<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Recluster<sp/>output&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Recluster<sp/>output&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/>processWidget<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classProcessWidget" kindref="compound">ProcessWidget</ref>(display);</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/>connect(processWidget,SIGNAL(processExited(KProcess*)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotProcessExited(KProcess*)));</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/>connect(processWidget,SIGNAL(processOutputsFinished()),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotOutputTreatmentOver()));</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//install<sp/>the<sp/>new<sp/>view<sp/>in<sp/>the<sp/>display<sp/>so<sp/>it<sp/>can<sp/>be<sp/>see<sp/>in<sp/>the<sp/>future<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/>display-&gt;setWidget(processWidget);</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Temporarily<sp/>allow<sp/>addition<sp/>of<sp/>a<sp/>new<sp/>dockWidget<sp/>in<sp/>the<sp/>center</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/>mainDock-&gt;setDockSite(KDockWidget::DockCenter);</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Add<sp/>the<sp/>new<sp/>display<sp/>as<sp/>a<sp/>tab<sp/>and<sp/>get<sp/>a<sp/>new<sp/>DockWidget,<sp/>grandParent<sp/>of<sp/>the<sp/>target<sp/>(mainDock)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//and<sp/>the<sp/>new<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/>KDockWidget*<sp/>grandParent<sp/>=<sp/>display-&gt;manualDock(mainDock,KDockWidget::DockCenter);</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>grandParent&apos;s<sp/>widget<sp/>is<sp/>the<sp/>KDockTabGroup<sp/>regrouping<sp/>all<sp/>the<sp/>tabs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/>tabsParent<sp/>=<sp/>static_cast&lt;KDockTabGroup*&gt;(grandParent-&gt;getWidget());</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Connect<sp/>the<sp/>change<sp/>tab<sp/>signal<sp/>to<sp/>slotTabChange(QWidget*<sp/>widget)<sp/>to<sp/>trigger<sp/>updates<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//the<sp/>active<sp/>display<sp/>changes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/>connect(tabsParent,<sp/>SIGNAL(currentChanged(QWidget*)),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotTabChange(QWidget*)));</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"></highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Back<sp/>to<sp/>enable<sp/>dock<sp/>to<sp/>the<sp/>left<sp/>side<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/>mainDock-&gt;setDockSite(KDockWidget::DockLeft);</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>forbit<sp/>docking<sp/>abilities<sp/>of<sp/>display<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/>display-&gt;setEnableDocking(KDockWidget::DockNone);</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>others<sp/>to<sp/>dock<sp/>to<sp/>the<sp/>left<sp/>side<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/>display-&gt;setDockSite(KDockWidget::DockLeft);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Keep<sp/>track<sp/>of<sp/>the<sp/>number<sp/>of<sp/>displays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/>displayCount<sp/>++;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//show<sp/>all<sp/>the<sp/>encapsulated<sp/>widgets<sp/>of<sp/>all<sp/>controlled<sp/>dockwidgets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/>dockManager-&gt;activate();</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/>}<sp/></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/></highlight><highlight class="comment">//Rest<sp/>the<sp/>different<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/>clustersFromReclustering.clear();</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/>processFinished<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/>processOutputsFinished<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/>processKilled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;reclusterState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/></highlight><highlight class="comment">//Start<sp/>the<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/>status<sp/>=<sp/>processWidget-&gt;<ref refid="classProcessWidget_19e3c899c3eb14de51465608e22a1e070" kindref="member">startJob</ref>(doc-&gt;<ref refid="classKlustersDoc_176f95a5ba4044bb1b9f758628aa5fae1" kindref="member">documentDirectory</ref>(),command);</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!status){</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;The<sp/>reclustering<sp/>program<sp/>could<sp/>not<sp/>be<sp/>started.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;One<sp/>possible<sp/>reason<sp/>is<sp/>that<sp/>the<sp/>automatic<sp/>reclustering<sp/>program<sp/>could<sp/>not<sp/>be<sp/>found.&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error<sp/>!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/>processFinished<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/>processKilled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noReclusterState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/>updateUndoRedoDisplay();</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="2320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"></highlight></codeline>
<codeline lineno="2322"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotProcessExited(KProcess*<sp/>process){</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>the<sp/>process<sp/>has<sp/>exited<sp/>&quot;voluntarily&quot;<sp/>and<sp/>if<sp/>so<sp/>if<sp/>it<sp/>was<sp/>successful</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!process-&gt;normalExit()<sp/>||<sp/>(process-&gt;normalExit()<sp/>&amp;&amp;<sp/>process-&gt;exitStatus())){</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(process-&gt;normalExit()<sp/>||<sp/>(!process-&gt;normalExit()<sp/>&amp;&amp;<sp/>!processKilled))</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;The<sp/>reclustering<sp/>program<sp/>did<sp/>not<sp/>finished<sp/>normaly.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Check<sp/>the<sp/>output<sp/>log<sp/>for<sp/>more<sp/>information.&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error<sp/>!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!QFile::remove(reclusteringFetFileName))</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/>KMessageBox::error(0,i18n(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>delete<sp/>the<sp/>temporary<sp/>feature<sp/>file<sp/>used<sp/>by<sp/>the<sp/>reclustering<sp/>program.&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Warning<sp/>!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/>processFinished<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/>processOutputsFinished<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/>processKilled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noReclusterState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classKlustersApp_10498cf3621cee3770053fa4ecd62fcd5" kindref="member">doesActiveDisplayContainProcessWidget</ref>())<sp/>updateUndoRedoDisplay();</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;reclusterViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/>}<sp/></highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>returnStatus<sp/>=<sp/>doc-&gt;<ref refid="classKlustersDoc_149f0741082fc96e0cc712f3d31510be5" kindref="member">integrateReclusteredClusters</ref>(clustersToRecluster,clustersFromReclustering,reclusteringFetFileName);</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(returnStatus){</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersDoc::DOWNLOAD_ERROR:</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/>KMessageBox::error(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>download<sp/>the<sp/>temporary<sp/>file<sp/>containing<sp/>the<sp/>new<sp/>clusters.&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error<sp/>!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/>processFinished<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/>processOutputsFinished<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/>processKilled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noReclusterState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classKlustersApp_10498cf3621cee3770053fa4ecd62fcd5" kindref="member">doesActiveDisplayContainProcessWidget</ref>())<sp/>updateUndoRedoDisplay();</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;reclusterViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersDoc::OPEN_ERROR:</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>open<sp/>the<sp/>temporary<sp/>file<sp/>containing<sp/>the<sp/>new<sp/>clusters.&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error<sp/>!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/>processFinished<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/>processOutputsFinished<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/>processKilled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noReclusterState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classKlustersApp_10498cf3621cee3770053fa4ecd62fcd5" kindref="member">doesActiveDisplayContainProcessWidget</ref>())<sp/>updateUndoRedoDisplay();</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;reclusterViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersDoc::INCORRECT_CONTENT:</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/>KMessageBox::error<sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(</highlight><highlight class="stringliteral">&quot;The<sp/>temporary<sp/>file<sp/>containing<sp/>the<sp/>new<sp/>clusters<sp/>contains<sp/>incorrect<sp/>data.&quot;</highlight><highlight class="normal">),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Error<sp/>!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/>processFinished<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/>processOutputsFinished<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/>processKilled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noReclusterState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classKlustersApp_10498cf3621cee3770053fa4ecd62fcd5" kindref="member">doesActiveDisplayContainProcessWidget</ref>())<sp/>updateUndoRedoDisplay();</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;reclusterViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersDoc::OK:</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/>QString<sp/>info<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>automatic<sp/>reclustering<sp/>of<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clustersToRecluster.size()<sp/>&gt;<sp/>1)<sp/>info.append(</highlight><highlight class="stringliteral">&quot;clusters<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>info.append(</highlight><highlight class="stringliteral">&quot;cluster<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>clustersToRecluster.begin();<sp/>iterator<sp/>!=<sp/>clustersToRecluster.end();<sp/>++iterator<sp/>){</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/>info.append(QString::number(*iterator));</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/>info.append(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clustersFromReclustering.size()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/>info.append(</highlight><highlight class="stringliteral">&quot;is<sp/>finished.\nThe<sp/>following<sp/>new<sp/>clusters<sp/>have<sp/>been<sp/>created:<sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>info.append(</highlight><highlight class="stringliteral">&quot;is<sp/>finished.\nThe<sp/>following<sp/>new<sp/>cluster<sp/>has<sp/>been<sp/>created:<sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>clustersFromReclustering.begin();<sp/>iterator<sp/>!=<sp/>clustersFromReclustering.end();<sp/>++iterator<sp/>){</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/>info.append(QString::number(*iterator));</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/>info.append(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/>info.append(</highlight><highlight class="stringliteral">&quot;.\nThe<sp/>cluster<sp/>list<sp/>will<sp/>now<sp/>be<sp/>updated.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/>QApplication::restoreOverrideCursor();</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/>KMessageBox::information(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,i18n(info),<sp/>i18n(</highlight><highlight class="stringliteral">&quot;Automatic<sp/>Reclustering<sp/>!&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/>QApplication::setOverrideCursor(QCursor(Qt::WaitCursor));</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/>doc-&gt;<ref refid="classKlustersDoc_1d58cbcd5b0e2361f4b0aa72db0d8082c" kindref="member">reclusteringUpdate</ref>(clustersToRecluster,clustersFromReclustering);</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/>processFinished<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/>processKilled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noReclusterState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classKlustersApp_10498cf3621cee3770053fa4ecd62fcd5" kindref="member">doesActiveDisplayContainProcessWidget</ref>())<sp/>updateUndoRedoDisplay();<sp/></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;reclusterViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/>QApplication::restoreOverrideCursor();<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotStopRecluster(){</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/>processWidget-&gt;<ref refid="classProcessWidget_1572f011eba9b8b804334562dd3d6cdc4" kindref="member">killJob</ref>();</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/>processKilled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;stoppedReclusterState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotOutputTreatmentOver(){</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/>processOutputsFinished<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noRclusterState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classKlustersApp_10498cf3621cee3770053fa4ecd62fcd5" kindref="member">doesActiveDisplayContainProcessWidget</ref>())<sp/>updateUndoRedoDisplay();</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;reclusterViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::updateUndoRedoDisplay(){</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentNbUndo<sp/>&gt;<sp/>0)<sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;undoState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;emptyUndoState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentNbRedo<sp/>==<sp/>0)<sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;emptyRedoState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKlustersApp_10f5dd24aa870c8602a9eb71076c53be2" kindref="member">KlustersApp::widgetAddToDisplay</ref>(<ref refid="classKlustersView_1293293dc2641e78395b7184d115e7805" kindref="member">KlustersView::DisplayType</ref><sp/>displayType,KDockWidget*<sp/>docWidget){</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();<sp/></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>newWidgetType<sp/>=<sp/>view-&gt;<ref refid="classKlustersView_1c210d60b0eb959cd865cad9c45f0479b" kindref="member">addView</ref>(docWidget,displayType,backgroundColor,statusBar(),displayTimeInterval,waveformsGain,channelPositions);</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/>isInit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//prevent<sp/>the<sp/>spine<sp/>boxes<sp/>or<sp/>the<sp/>lineedit<sp/>and<sp/>the<sp/>editline<sp/>to<sp/>trigger<sp/>during<sp/>initialisation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(newWidgetType)</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(displayType){</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersView::CLUSTERS:</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>dimension<sp/>spine<sp/>boxes<sp/>with<sp/>the<sp/>initial<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensionX-&gt;setValue(1);</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensionY-&gt;setValue(2);</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;clusterViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensionX-&gt;show();</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/>dimensionY-&gt;show();</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/>featureXLabel-&gt;show();</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersView::WAVEFORMS:</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;waveformsViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/>overlayPresentation-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/>meanPresentation-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/>timeFrameMode-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/>duration-&gt;hide();</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/>durationLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/>start-&gt;hide();</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/>startLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/>spikesTodisplay-&gt;setValue(DEFAULT_NB_SPIKES_DISPLAYED);</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/>spikesTodisplay-&gt;show();</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/>spikesTodisplayLabel-&gt;show();<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersView::CORRELATIONS:</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;correlationViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>lineEdit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/>scaleByMax-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/>correlogramTimeFrame<sp/>=<sp/>INITIAL_CORRELOGRAMS_HALF_TIME_FRAME.toInt()<sp/>*<sp/>2<sp/>+<sp/>1;<sp/></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/>binSize<sp/>=<sp/>DEFAULT_BIN_SIZE.toInt();</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/>correlogramsHalfDuration-&gt;setText(QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(correlogramTimeFrame<sp/>/<sp/>2));<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/>binSizeBox-&gt;setText(QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(binSize));</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/>correlogramsHalfDuration-&gt;show();</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/>correlogramsHalfDurationLabel-&gt;show();</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/>binSizeBox-&gt;show();</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/>binSizeLabel-&gt;show();</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>shoulder<sp/>line<sp/>menu<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/>shoulderLine-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersView::ERROR_MATRIX<sp/>:</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;errorMatrixViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;groupingAssistantDisplayExists&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>errorMatrixExists<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersView::OVERVIEW:</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersView::GROUPING_ASSISTANT_VIEW:</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersView::TRACES:</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;traceViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>showHideLabels-&gt;setChecked(view-&gt;<ref refid="classKlustersView_1ecfe28088cbdcd3f26b555e992add190" kindref="member">getLabelStatus</ref>());<sp/><sp/></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>browsing<sp/>possibility<sp/>of<sp/>the<sp/>traceView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(view-&gt;<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>!=<sp/>0)<sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;traceViewBrowsingState&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/>isInit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//now<sp/>a<sp/>change<sp/>in<sp/>a<sp/>spine<sp/>box<sp/><sp/>or<sp/>the<sp/>lineedit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/></highlight><highlight class="comment">//will<sp/>trigger<sp/>an<sp/>update<sp/>of<sp/>the<sp/>view<sp/>contains<sp/>in<sp/>the<sp/>acative<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>select<sp/>time<sp/>tool<sp/>is<sp/>useful<sp/>only<sp/>if<sp/>both<sp/>a<sp/>clusterView<sp/>and<sp/>a<sp/>traceView<sp/>are<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(view-&gt;<ref refid="classKlustersView_10b4abd5cd3fd932d76aa3c14ccd1a0d8" kindref="member">containsClusterView</ref>()<sp/>&amp;&amp;<sp/>view-&gt;<ref refid="classKlustersView_163634c9778eddef2cb44472cbdb0d8b6" kindref="member">containsTraceView</ref>())<sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;traceViewClusterViewState&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="2496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKlustersApp_131ada5d03f8482a6a236249ae4975415" kindref="member">KlustersApp::widgetRemovedFromDisplay</ref>(<ref refid="classKlustersView_1293293dc2641e78395b7184d115e7805" kindref="member">KlustersView::DisplayType</ref><sp/>displayType){</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(displayType){</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersView::CLUSTERS:</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noClusterViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/>dimensionX-&gt;hide();</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/>dimensionY-&gt;hide();</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/>featureXLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersView::WAVEFORMS:</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/>timeFrameMode-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/>overlayPresentation-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/>meanPresentation-&gt;setChecked(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noWaveformsViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/>duration-&gt;hide();</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/>durationLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/>start-&gt;hide();</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/>startLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/>spikesTodisplay-&gt;hide();</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/>spikesTodisplayLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersView::CORRELATIONS:</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noCorrelationViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/>correlogramsHalfDuration-&gt;hide();</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/>correlogramsHalfDurationLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/>binSizeBox-&gt;hide();</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/>binSizeLabel-&gt;hide();</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersView::ERROR_MATRIX<sp/>:</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noErrorMatrixViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;groupingAssistantDisplayNotExists&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/>errorMatrixExists<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersView::OVERVIEW:</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersView::GROUPING_ASSISTANT_VIEW:</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>KlustersView::TRACES:</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noTraceViewState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="2538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKlustersApp_1e96fbff62ecc16ebfb812c14f923485f" kindref="member">KlustersApp::updateDimensionSpinBoxes</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimensionX,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dimensionY){</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/>isInit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//prevent<sp/>the<sp/>spine<sp/>boxes<sp/>or<sp/>the<sp/>lineedit<sp/>and<sp/>the<sp/>editline<sp/>to<sp/>trigger<sp/>during<sp/>initialisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>dimension<sp/>spine<sp/>boxes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/>this-&gt;dimensionX-&gt;setValue(dimensionX);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/>this-&gt;dimensionY-&gt;setValue(dimensionY);</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/>this-&gt;dimensionX-&gt;show();</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/>this-&gt;dimensionY-&gt;show();</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"></highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/>isInit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//now<sp/>a<sp/>change<sp/>in<sp/>a<sp/>spine<sp/>box<sp/><sp/>or<sp/>the<sp/>lineedit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/></highlight><highlight class="comment">//will<sp/>trigger<sp/>an<sp/>update<sp/>of<sp/>the<sp/>view<sp/>contains<sp/>in<sp/>the<sp/>active<sp/>display.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::renameActiveDisplay(){</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/>KDockWidget*<sp/>current;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>active<sp/>tab</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/>current<sp/>=<sp/>static_cast&lt;KDockWidget*&gt;(tabsParent-&gt;currentPage());</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/>QString<sp/>newLabel<sp/>=<sp/>KInputDialog::getText(i18n(</highlight><highlight class="stringliteral">&quot;New<sp/>Display<sp/>label&quot;</highlight><highlight class="normal">),i18n(</highlight><highlight class="stringliteral">&quot;Type<sp/>in<sp/>the<sp/>new<sp/>display<sp/>label&quot;</highlight><highlight class="normal">),current-&gt;tabPageLabel());</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!newLabel.isEmpty()){</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/>tabsParent-&gt;setTabLabel(current,newLabel);</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/>current-&gt;setTabPageLabel(newLabel);</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="2564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotShowLabels(){</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>currentView<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentView-&gt;<ref refid="classKlustersView_163634c9778eddef2cb44472cbdb0d8b6" kindref="member">containsTraceView</ref>())<sp/>currentView-&gt;<ref refid="classKlustersView_1cd6ad061530fadc9cd45e054224061cc" kindref="member">showLabelsUpdate</ref>(showHideLabels-&gt;isChecked());</highlight></codeline>
<codeline lineno="2569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKlustersApp_1181734dfbde1d4093c44dce74434240e" kindref="member">KlustersApp::updateCorrelogramViewVariables</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>binSize,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeWindow,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isShoulderLine,<sp/><ref refid="classData_17c467cbdd19a0b0ccde482baed716155" kindref="member">Data::ScaleMode</ref><sp/>correlationScale){</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/>isInit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//prevent<sp/>the<sp/>boxes<sp/>or<sp/>menu<sp/>entry<sp/>to<sp/>trigger<sp/>during<sp/>initialisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>boxes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/>this-&gt;binSize<sp/>=<sp/>binSize;</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/>binSizeBox-&gt;setText(QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(binSize));</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/></highlight><highlight class="comment">//timeWindow<sp/>is<sp/>the<sp/>time<sp/>frame<sp/>use<sp/>to<sp/>compute<sp/>the<sp/>correlograms,<sp/>the<sp/>lineedit<sp/>correlogramsHalfDuration<sp/>contains<sp/>half<sp/>of<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/>correlogramTimeFrame<sp/>=<sp/>timeWindow;</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/></highlight><highlight class="comment">//int<sp/>k<sp/>=<sp/>((static_cast&lt;float&gt;(correlogramTimeFrame)<sp/>/<sp/>static_cast&lt;float&gt;(binSize))<sp/>-<sp/>1)<sp/>/<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/></highlight><highlight class="comment">//correlogramsHalfDuration-&gt;setText(QString(&quot;%1&quot;).arg(k<sp/>*<sp/>binSize));<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/>correlogramsHalfDuration-&gt;setText(QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(static_cast&lt;int&gt;(correlogramTimeFrame<sp/>/<sp/>2)));<sp/></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/>shoulderLine-&gt;setChecked(isShoulderLine);</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(correlationScale){</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Data::RAW<sp/>:</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/>noScale-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Data::MAX<sp/>:</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/>scaleByMax-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Data::SHOULDER<sp/>:</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/>scaleByShouler-&gt;setChecked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/>}<sp/></highlight></codeline>
<codeline lineno="2595"><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/>isInit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//now<sp/>a<sp/>change<sp/>in<sp/>the<sp/>boxes<sp/>or<sp/>menu<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/></highlight><highlight class="comment">//will<sp/>trigger<sp/>an<sp/>update<sp/>of<sp/>the<sp/>view<sp/>contains<sp/>in<sp/>the<sp/>active<sp/>display.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotShowNextCluster(){</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"></highlight><highlight class="comment">//Trigger<sp/>ths<sp/>action<sp/>only<sp/>if<sp/>the<sp/>active<sp/>display<sp/>does<sp/>not<sp/>contain<sp/>a<sp/>ProcessWidget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classKlustersApp_10498cf3621cee3770053fa4ecd62fcd5" kindref="member">doesActiveDisplayContainProcessWidget</ref>()){</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/>view-&gt;<ref refid="classKlustersView_11e1577e911077fe13a1c07d15ff88e49" kindref="member">showNextCluster</ref>();</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/>}<sp/></highlight></codeline>
<codeline lineno="2606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotShowPreviousCluster(){</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"></highlight><highlight class="comment">//Trigger<sp/>ths<sp/>action<sp/>only<sp/>if<sp/>the<sp/>active<sp/>display<sp/>does<sp/>not<sp/>contain<sp/>a<sp/>ProcessWidget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classKlustersApp_10498cf3621cee3770053fa4ecd62fcd5" kindref="member">doesActiveDisplayContainProcessWidget</ref>()){</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/>view-&gt;<ref refid="classKlustersView_19c5123c6adf810d44df7fc952a658845" kindref="member">showPreviousCluster</ref>();</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/>}<sp/></highlight></codeline>
<codeline lineno="2614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>KlustersApp::slotSpikesDeleted(){</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>browsing<sp/>possibility<sp/>of<sp/>the<sp/>traceView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><ref refid="classKlustersView" kindref="compound">KlustersView</ref>*<sp/>view<sp/>=<sp/><ref refid="classKlustersApp_1ffec18f34c31a3c7a04b32b38df1b57b" kindref="member">activeView</ref>();</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(view-&gt;<ref refid="classKlustersView_163634c9778eddef2cb44472cbdb0d8b6" kindref="member">containsTraceView</ref>()<sp/>&amp;&amp;<sp/>view-&gt;<ref refid="classKlustersView_1ee0d5fb1697d8aefcdf7a0f817b13eba" kindref="member">clusters</ref>().size()<sp/>!=<sp/>0)<sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;traceViewBrowsingState&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>slotStateChanged(</highlight><highlight class="stringliteral">&quot;noTraceViewBrowsingState&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight></codeline>
<codeline lineno="2621"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/lynn/CMBN/Klusters/klusters/src/klusters.cpp"/>
  </compounddef>
</doxygen>
