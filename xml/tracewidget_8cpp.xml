<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.1">
  <compounddef id="tracewidget_8cpp" kind="file">
    <compoundname>tracewidget.cpp</compoundname>
    <includes refid="tracewidget_8h" local="yes">tracewidget.h</includes>
    <includes local="no">qstring.h</includes>
    <includes local="no">kdebug.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="2648">
        <label>baseframe.h</label>
        <link refid="baseframe_8h-source"/>
        <childnode refid="2633" relation="include">
        </childnode>
        <childnode refid="2649" relation="include">
        </childnode>
        <childnode refid="2650" relation="include">
        </childnode>
        <childnode refid="2651" relation="include">
        </childnode>
        <childnode refid="2655" relation="include">
        </childnode>
      </node>
      <node id="2657">
        <label>dataprovider.h</label>
        <link refid="dataprovider_8h-source"/>
        <childnode refid="2658" relation="include">
        </childnode>
        <childnode refid="2659" relation="include">
        </childnode>
      </node>
      <node id="2651">
        <label>zoomwindow.h</label>
        <link refid="zoomwindow_8h-source"/>
        <childnode refid="2652" relation="include">
        </childnode>
        <childnode refid="2653" relation="include">
        </childnode>
        <childnode refid="2654" relation="include">
        </childnode>
      </node>
      <node id="2632">
        <label>tracewidget.h</label>
        <link refid="tracewidget_8h-source"/>
        <childnode refid="2633" relation="include">
        </childnode>
        <childnode refid="2634" relation="include">
        </childnode>
        <childnode refid="2635" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
        <childnode refid="2637" relation="include">
        </childnode>
        <childnode refid="2638" relation="include">
        </childnode>
        <childnode refid="2639" relation="include">
        </childnode>
        <childnode refid="2640" relation="include">
        </childnode>
        <childnode refid="2641" relation="include">
        </childnode>
        <childnode refid="2642" relation="include">
        </childnode>
        <childnode refid="2643" relation="include">
        </childnode>
        <childnode refid="2644" relation="include">
        </childnode>
        <childnode refid="2654" relation="include">
        </childnode>
      </node>
      <node id="2664">
        <label>qstring.h</label>
      </node>
      <node id="2658">
        <label>qobject.h</label>
      </node>
      <node id="2644">
        <label>traceview.h</label>
        <link refid="traceview_8h-source"/>
        <childnode refid="2633" relation="include">
        </childnode>
        <childnode refid="2645" relation="include">
        </childnode>
        <childnode refid="2646" relation="include">
        </childnode>
        <childnode refid="2647" relation="include">
        </childnode>
        <childnode refid="2648" relation="include">
        </childnode>
        <childnode refid="2656" relation="include">
        </childnode>
        <childnode refid="2643" relation="include">
        </childnode>
        <childnode refid="2654" relation="include">
        </childnode>
      </node>
      <node id="2659">
        <label>kurl.h</label>
      </node>
      <node id="2652">
        <label>qrect.h</label>
      </node>
      <node id="2665">
        <label>kdebug.h</label>
      </node>
      <node id="2635">
        <label>qspinbox.h</label>
      </node>
      <node id="2660">
        <label>array.h</label>
        <link refid="array_8h-source"/>
        <childnode refid="2661" relation="include">
        </childnode>
        <childnode refid="2655" relation="include">
        </childnode>
      </node>
      <node id="2649">
        <label>qframe.h</label>
      </node>
      <node id="2643">
        <label>kstatusbar.h</label>
      </node>
      <node id="2631">
        <label>tracewidget.cpp</label>
        <link refid="tracewidget.cpp"/>
        <childnode refid="2632" relation="include">
        </childnode>
        <childnode refid="2664" relation="include">
        </childnode>
        <childnode refid="2665" relation="include">
        </childnode>
        <childnode refid="2655" relation="include">
        </childnode>
      </node>
      <node id="2639">
        <label>qscrollbar.h</label>
      </node>
      <node id="2663">
        <label>qptrlist.h</label>
      </node>
      <node id="2653">
        <label>qpoint.h</label>
      </node>
      <node id="2656">
        <label>tracesprovider.h</label>
        <link refid="tracesprovider_8h-source"/>
        <childnode refid="2657" relation="include">
        </childnode>
        <childnode refid="2660" relation="include">
        </childnode>
        <childnode refid="2662" relation="include">
        </childnode>
        <childnode refid="2663" relation="include">
        </childnode>
        <childnode refid="2658" relation="include">
        </childnode>
      </node>
      <node id="2650">
        <label>qcursor.h</label>
      </node>
      <node id="2641">
        <label>qpainter.h</label>
      </node>
      <node id="2638">
        <label>qlabel.h</label>
      </node>
      <node id="2654">
        <label>math.h</label>
      </node>
      <node id="2633">
        <label>qwidget.h</label>
      </node>
      <node id="2637">
        <label>qlineedit.h</label>
      </node>
      <node id="2655">
        <label>iostream</label>
      </node>
      <node id="2647">
        <label>qpair.h</label>
      </node>
      <node id="2636">
        <label>qvalidator.h</label>
      </node>
      <node id="2640">
        <label>qhbox.h</label>
      </node>
      <node id="2646">
        <label>qdict.h</label>
      </node>
      <node id="2642">
        <label>qstyle.h</label>
      </node>
      <node id="2645">
        <label>qpixmap.h</label>
      </node>
      <node id="2661">
        <label>cstring</label>
      </node>
      <node id="2634">
        <label>qvbox.h</label>
      </node>
      <node id="2662">
        <label>types.h</label>
        <link refid="types_8h-source"/>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tracewidget.cpp<sp/><sp/>-<sp/><sp/>description</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>begin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Wed<sp/>Mar<sp/>17<sp/>2004</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>copyright<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(C)<sp/>2004<sp/>by<sp/>Lynn<sp/>Hazan</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>email<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>lynn.hazan.myrealbox.com</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//include<sp/>files<sp/>for<sp/>the<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tracewidget.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>files<sp/>for<sp/>QT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qstring.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//includes<sp/>files<sp/>for<sp/>KDE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kdebug.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//General<sp/>C++<sp/>include<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><ref refid="classTraceWidget_1b50e20ff6e32561871e5aaba5b0fdd98" kindref="member">TraceWidget::TraceWidget</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>startTime,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>duration,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>greyScale,<ref refid="classTracesProvider" kindref="compound">TracesProvider</ref>&amp;<sp/>tracesProvider,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multiColumns,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verticalLines,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>raster,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>waveforms,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>labelsDisplay,QValueList&lt;int&gt;&amp;<sp/>channelsToDisplay,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gain,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>acquisitionGain,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classChannelColors" kindref="compound">ChannelColors</ref>*<sp/>channelColors,QMap&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>QValueList&lt;int&gt;<sp/>&gt;*<sp/>groupsChannels,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QMap&lt;int,int&gt;*<sp/>channelsGroups,QValueList&lt;int&gt;&amp;<sp/>channelOffsets,QValueList&lt;int&gt;&amp;<sp/>gains,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QValueList&lt;int&gt;&amp;<sp/>skippedChannels,QWidget*<sp/>parent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,QColor<sp/>backgroundColor,KStatusBar*<sp/>statusBar,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minSize,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSize,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowTopLeft,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowBottomRight,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>border):</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QVBox(parent,name),timeWindow(duration),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>view(tracesProvider,greyScale,multiColumns,verticalLines,raster,waveforms,labelsDisplay,channelsToDisplay,gain,acquisitionGain,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startTime,timeWindow,channelColors,groupsChannels,channelsGroups,channelOffsets,gains,skippedChannels,this,name,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>backgroundColor,statusBar,minSize,maxSize,windowTopLeft,windowBottomRight,border),startTime(startTime),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validator(this),isInit(true),updateView(true){</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>recordingLength<sp/>=<sp/>tracesProvider.<ref refid="classTracesProvider_17e7bff8bdd97abf5a4a31e24cfa839ac" kindref="member">recordingLength</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>selectionWidgets<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QHBox(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>setMargin(0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>setSpacing(0);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>setStretchFactor(selectionWidgets,0);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>setStretchFactor(&amp;view,200);<sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>setFocusPolicy(QWidget::StrongFocus);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>initSelectionWidgets();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>adjustSize();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>connect(&amp;view,SIGNAL(channelsSelected(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QValueList&lt;int&gt;&amp;)),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotChannelsSelected(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QValueList&lt;int&gt;&amp;)));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>connect(&amp;view,SIGNAL(setStartAndDuration(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotSetStartAndDuration(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>connect(&amp;view,SIGNAL(eventModified(QString,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotEventModified(QString,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>connect(&amp;view,SIGNAL(eventRemoved(QString,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotEventRemoved(QString,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>connect(&amp;view,SIGNAL(eventAdded(QString,QString,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotEventAdded(QString,QString,</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>isInit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">TraceWidget::~TraceWidget(){</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TraceWidget::changeBackgroundColor(QColor<sp/>color){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/>view.<ref refid="classBaseFrame_1ebb3ce33f4a37c3eb2ee72474050fa37" kindref="member">changeBackgroundColor</ref>(color);<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/>update();<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTraceWidget_11fa59c875f93e8eff216e098d5b368d0" kindref="member">TraceWidget::setGreyScale</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>grey){</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>view.<ref refid="classTraceView_103e396b245b7ee974be1e7c08111645b" kindref="member">setGreyScale</ref>(grey);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TraceWidget::initSelectionWidgets(){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>QFont<sp/>font(</highlight><highlight class="stringliteral">&quot;Helvetica&quot;</highlight><highlight class="normal">,9);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Create<sp/>and<sp/>initialize<sp/>the<sp/>spin<sp/>boxe<sp/><sp/>and<sp/>lineEdit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>startLabel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QLabel(</highlight><highlight class="stringliteral">&quot;Start<sp/>time&quot;</highlight><highlight class="normal">,selectionWidgets);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>startLabel-&gt;setFrameStyle(QFrame::ToolBarPanel|QFrame::Plain);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>startLabel-&gt;setFont(font);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>minutePart<sp/>=<sp/>recordingLength<sp/>/<sp/>60000;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remainingSeconds<sp/>=<sp/>static_cast&lt;int&gt;(fmod(static_cast&lt;double&gt;(recordingLength),60000));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>secondPart<sp/>=<sp/>remainingSeconds<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>milisecondPart<sp/>=<sp/>static_cast&lt;int&gt;(fmod(static_cast&lt;double&gt;(remainingSeconds),1000));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbMinutes<sp/>=<sp/>startTime<sp/>/<sp/>60000;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>remainingSeconds<sp/>=<sp/>static_cast&lt;int&gt;(fmod(static_cast&lt;double&gt;(startTime),60000));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbSeconds<sp/>=<sp/>remainingSeconds<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remainingMiliseconds<sp/>=<sp/>static_cast&lt;int&gt;(fmod(static_cast&lt;double&gt;(remainingSeconds),1000));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>startMinute<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QSpinBox(0,minutePart,1,selectionWidgets,</highlight><highlight class="stringliteral">&quot;minStart&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>startMinute-&gt;setSuffix(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>min&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>startMinute-&gt;setWrapping(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>startMinute-&gt;setValue(nbMinutes);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>startSecond<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QSpinBox(0,recordingLength/1000,1,selectionWidgets,</highlight><highlight class="stringliteral">&quot;sStart&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>startSecond-&gt;setSuffix(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>s&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>startSecond-&gt;setValue(nbSeconds);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>startMilisecond<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QSpinBox(0,recordingLength,1,selectionWidgets,</highlight><highlight class="stringliteral">&quot;msStart&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>startMilisecond-&gt;setSuffix(<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ms&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>startMilisecond-&gt;setValue(remainingMiliseconds);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>durationLabel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QLabel(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>Duration<sp/>(ms)&quot;</highlight><highlight class="normal">,selectionWidgets);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>durationLabel-&gt;setFrameStyle(QFrame::ToolBarPanel|QFrame::Plain);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>durationLabel-&gt;setFont(font);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>duration<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QLineEdit(QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(timeWindow),selectionWidgets);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>duration-&gt;setMinimumSize(50,duration-&gt;minimumHeight());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>duration-&gt;setMaximumSize(50,duration-&gt;maximumHeight());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>duration-&gt;setMaxLength(5);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//duration<sp/>will<sp/>only<sp/>accept<sp/>integers<sp/>between<sp/>0<sp/>and<sp/>a<sp/>max<sp/>equal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//to<sp/>maximum<sp/>of<sp/>time<sp/>for<sp/>the<sp/>current<sp/>document<sp/>(set<sp/>when<sp/>the<sp/>document<sp/>will<sp/>be<sp/>opened)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>duration-&gt;setValidator(&amp;validator);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>connect(startMinute,SIGNAL(valueChanged(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotStartMinuteTimeUpdated(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>connect(startSecond,SIGNAL(valueChanged(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotStartSecondTimeUpdated(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>connect(startMilisecond,SIGNAL(valueChanged(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotStartMilisecondTimeUpdated(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>connect(duration,SIGNAL(returnPressed()),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotDurationUpdated()));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Create<sp/>and<sp/>initialize<sp/>the<sp/>scrollbar.<sp/>The<sp/>line<sp/>step<sp/>is<sp/>a<sp/>20iest<sp/>of<sp/>the<sp/>page<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>pageStep<sp/>=<sp/>timeWindow;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>lineStep<sp/>=<sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>static_cast&lt;float&gt;(static_cast&lt;float&gt;(timeWindow)<sp/>/<sp/>static_cast&lt;float&gt;(20))));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>scrollBar<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QScrollBar::QScrollBar(0,recordingLength<sp/>-<sp/>timeWindow,lineStep,pageStep,pageStep,Qt::Horizontal,selectionWidgets);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>scrollBar-&gt;setValue(startTime);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>connect(scrollBar,SIGNAL(sliderReleased()),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotScrollBarUpdated()));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>connect(scrollBar,SIGNAL(nextLine()),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotScrollBarUpdated()));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>connect(scrollBar,SIGNAL(nextPage()),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotScrollBarUpdated()));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>connect(scrollBar,SIGNAL(prevLine()),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotScrollBarUpdated()));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>connect(scrollBar,SIGNAL(prevPage()),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotScrollBarUpdated()));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//enable<sp/>the<sp/>user<sp/>to<sp/>use<sp/>the<sp/>keyboard<sp/>to<sp/>interact<sp/>with<sp/>the<sp/>scrollbar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>scrollBar-&gt;setMouseTracking(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>scrollBar-&gt;setFocusPolicy(QWidget::StrongFocus);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>connect(scrollBar,SIGNAL(valueChanged(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)),</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>SLOT(slotScrollBarUpdated()));<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>selectionWidgets-&gt;setMargin(0);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>selectionWidgets-&gt;setSpacing(0);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>selectionWidgets-&gt;setStretchFactor(startLabel,0);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>selectionWidgets-&gt;setStretchFactor(startMinute,0);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>selectionWidgets-&gt;setStretchFactor(startSecond,0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>selectionWidgets-&gt;setStretchFactor(startMilisecond,0);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>selectionWidgets-&gt;setStretchFactor(durationLabel,0);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>selectionWidgets-&gt;setStretchFactor(duration,0);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>selectionWidgets-&gt;setStretchFactor(scrollBar,200);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTraceWidget_1d989b83f81235c6df2a17e6fc2978028" kindref="member">TraceWidget::samplingRateModified</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>length){</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>recordingLength<sp/>=<sp/>length;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>view.<ref refid="classTraceView_1688771f14317976a1bc2d523b5b0fa05" kindref="member">samplingRateModified</ref>(length);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Reset<sp/>the<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="classTraceWidget_1d1c39916587b8db09e500f756d5fb5d2" kindref="member">slotSetStartAndDuration</ref>(0,50);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTraceWidget_13c1aee2f245120fa6be62594e6d0b5c5" kindref="member">TraceWidget::keyPressEvent</ref>(QKeyEvent*<sp/>event){</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(event-&gt;key()){</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::Key_Plus:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>the<sp/>duration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>timeWindow<sp/>=<sp/>timeWindow<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>duration-&gt;setText(QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(timeWindow));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>slotDurationUpdated();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::Key_Minus:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reduce<sp/>the<sp/>duration<sp/>of<sp/>an<sp/>half</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>timeWindow<sp/>=<sp/>timeWindow<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>duration-&gt;setText(QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(timeWindow));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>slotDurationUpdated();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TraceWidget::slotDurationUpdated(){</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isInit<sp/>&amp;&amp;<sp/>updateView){</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Modify<sp/>updateView<sp/>to<sp/>prevent<sp/>the<sp/>scrollBar<sp/>to<sp/>trigger<sp/>a<sp/>changeEvent<sp/>while<sp/>been<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>updateView<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>timeWindow<sp/>=<sp/>(duration-&gt;displayText()).toLong();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Test<sp/>if<sp/>the<sp/>time<sp/>window<sp/>is<sp/>bigger<sp/>than<sp/>the<sp/>time<sp/>of<sp/>the<sp/>recording,<sp/>if<sp/>so<sp/>fix<sp/>it<sp/>to<sp/>the<sp/>time<sp/>of<sp/>the<sp/>recording</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeWindow<sp/>&gt;<sp/>recordingLength){</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/>timeWindow<sp/>=<sp/>recordingLength;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/>duration-&gt;setText(QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(timeWindow));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Test<sp/>if<sp/>the<sp/>time<sp/>window<sp/>is<sp/>inferior<sp/>to<sp/>1<sp/>ms,<sp/>if<sp/>so<sp/>fix<sp/>set<sp/>it<sp/>to<sp/>the<sp/>minimum<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeWindow<sp/>&lt;<sp/>1){</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/>timeWindow<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/>duration-&gt;setText(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Test<sp/>if<sp/>we<sp/>go<sp/>over<sp/>the<sp/>time<sp/>of<sp/>the<sp/>recording<sp/>if<sp/>so<sp/>keep<sp/>the<sp/>time<sp/>window<sp/>and<sp/>move<sp/>back<sp/>in<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((startTime<sp/>+<sp/>timeWindow)<sp/>&gt;<sp/>recordingLength)<sp/>correctStartTime();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/>startMinute-&gt;setMaxValue(minutePart);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/>startSecond-&gt;setMaxValue(recordingLength/1000);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/>startMilisecond-&gt;setMaxValue(recordingLength);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//beyond<sp/>10<sp/>ms<sp/>the<sp/>lineStep<sp/>is<sp/>fixe<sp/>at<sp/>1<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeWindow<sp/>&lt;<sp/>10)<sp/>lineStep<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>lineStep<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>static_cast&lt;float&gt;(static_cast&lt;float&gt;(timeWindow)<sp/>/<sp/>static_cast&lt;float&gt;(20))));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>pageStep<sp/>=<sp/>timeWindow;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>scrollBar-&gt;setMaxValue(recordingLength<sp/>-<sp/>timeWindow);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>scrollBar-&gt;setLineStep(lineStep);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>scrollBar-&gt;setPageStep(pageStep);<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>updateView<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Inform<sp/>the<sp/>traceView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>view.<ref refid="classTraceView_19f7957aa400f6d89f046b738b5355cfa" kindref="member">displayTimeFrame</ref>(startTime,timeWindow);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Inform<sp/>the<sp/>listeners<sp/>of<sp/>the<sp/>modification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="classTraceWidget_1751e6ef64462695ca4dd2e68badde8ea" kindref="member">updateStartAndDuration</ref>(startTime,timeWindow);<sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TraceWidget::correctStartTime(){<sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//update<sp/>the<sp/>selection<sp/>widgets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extraMinutes<sp/>=<sp/>timeWindow<sp/>/<sp/>60000;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remainingSeconds<sp/>=<sp/>static_cast&lt;int&gt;(fmod(static_cast&lt;double&gt;(timeWindow),60000));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extraSeconds<sp/>=<sp/>remainingSeconds<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extraMiliseconds<sp/>=<sp/>static_cast&lt;int&gt;(fmod(static_cast&lt;double&gt;(remainingSeconds),1000));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbMinutes<sp/>=<sp/>minutePart<sp/>-<sp/>extraMinutes;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbSeconds<sp/>=<sp/>secondPart<sp/>-<sp/>extraSeconds;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbMiliseconds<sp/>=<sp/>milisecondPart<sp/>-<sp/>extraMiliseconds;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbMiliseconds<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>additionalSeconds<sp/>=<sp/>static_cast&lt;int&gt;(abs(nbMiliseconds)<sp/>/<sp/>1000);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>startMilisecond-&gt;setMaxValue(recordingLength);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>startMilisecond-&gt;setValue(1000<sp/>-<sp/>extraMiliseconds<sp/>+<sp/>milisecondPart);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(additionalSeconds<sp/>==<sp/>0)<sp/>additionalSeconds<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>nbSeconds<sp/>-=<sp/>additionalSeconds;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>startMilisecond-&gt;setMaxValue(recordingLength);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>startMilisecond-&gt;setValue(nbMiliseconds);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbSeconds<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>additionalMinutes<sp/>=<sp/>static_cast&lt;int&gt;(abs(nbSeconds)<sp/>/<sp/>60);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(additionalMinutes<sp/>==<sp/>0)<sp/>additionalMinutes<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>nbMinutes<sp/>-=<sp/>additionalMinutes;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbMinutes<sp/>&lt;=<sp/>0){</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>startSecond-&gt;setMaxValue(0);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>startSecond-&gt;setValue(0);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>startSecond-&gt;setMaxValue(recordingLength/1000);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>startSecond-&gt;setValue(59<sp/>+<sp/>nbSeconds<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>startSecond-&gt;setMaxValue(recordingLength/1000);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>startSecond-&gt;setValue(nbSeconds);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbMinutes<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>startMinute-&gt;setMaxValue(0);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>startMinute-&gt;setValue(0);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>startSecond-&gt;setMaxValue(0);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>startSecond-&gt;setValue(0);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>startMilisecond-&gt;setMaxValue(0);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>startMilisecond-&gt;setValue(0);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>startMinute-&gt;setMaxValue(nbMinutes);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>startMinute-&gt;setValue(nbMinutes);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/>startTime<sp/>=<sp/>startMinute-&gt;value()*<sp/>60000<sp/>+<sp/>startSecond-&gt;value()<sp/>*<sp/>1000<sp/>+<sp/>startMilisecond-&gt;value();<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/>scrollBar-&gt;setMaxValue(recordingLength<sp/>-<sp/>timeWindow);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/>scrollBar-&gt;setValue(startTime);</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TraceWidget::slotStartMinuteTimeUpdated(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start){</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isInit<sp/>&amp;&amp;<sp/>updateView){</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Modify<sp/>updateView<sp/>to<sp/>prevent<sp/>the<sp/>scrollBar<sp/>and<sp/>other<sp/>spinboxes<sp/>to<sp/>trigger<sp/>a<sp/>changeEvent<sp/>while<sp/>been<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>updateView<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>modifiedStartTime<sp/>=<sp/>start<sp/>*<sp/>60000<sp/>+<sp/>startSecond-&gt;value()<sp/>*<sp/>1000<sp/>+<sp/>startMilisecond-&gt;value();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/></highlight><highlight class="comment">//Test<sp/>if<sp/>we<sp/>go<sp/>over<sp/>the<sp/>time<sp/>of<sp/>the<sp/>recording<sp/>if<sp/>so<sp/>keep<sp/>the<sp/>time<sp/>window<sp/>and<sp/>move<sp/>back<sp/>in<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((modifiedStartTime<sp/>+<sp/>timeWindow)<sp/>&gt;<sp/>recordingLength)<sp/>correctStartTime();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/>startTime<sp/>=<sp/>modifiedStartTime;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/>startMinute-&gt;setMaxValue(minutePart);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/>startSecond-&gt;setMaxValue(recordingLength/1000);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/>startMilisecond-&gt;setMaxValue(recordingLength);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/>scrollBar-&gt;setValue(startTime);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>updateView<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Inform<sp/>the<sp/>traceView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>view.<ref refid="classTraceView_19f7957aa400f6d89f046b738b5355cfa" kindref="member">displayTimeFrame</ref>(startTime,timeWindow);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Inform<sp/>listern<sp/>of<sp/>the<sp/>modification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="classTraceWidget_1751e6ef64462695ca4dd2e68badde8ea" kindref="member">updateStartAndDuration</ref>(startTime,timeWindow);<sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TraceWidget::slotStartSecondTimeUpdated(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start){</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isInit<sp/>&amp;&amp;<sp/>updateView){</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Modify<sp/>updateView<sp/>to<sp/>prevent<sp/>the<sp/>scrollBar<sp/>and<sp/>other<sp/>spinboxes<sp/>to<sp/>trigger<sp/>a<sp/>changeEvent<sp/>while<sp/>been<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>updateView<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>modifiedStartTime<sp/>=<sp/>startMinute-&gt;value()<sp/>*<sp/>60000<sp/>+<sp/>start<sp/>*<sp/>1000<sp/>+<sp/>startMilisecond-&gt;value();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Test<sp/>if<sp/>we<sp/>go<sp/>over<sp/>the<sp/>time<sp/>of<sp/>the<sp/>recording<sp/>if<sp/>so<sp/>keep<sp/>the<sp/>time<sp/>window<sp/>and<sp/>move<sp/>back<sp/>in<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((modifiedStartTime<sp/>+<sp/>timeWindow)<sp/>&gt;<sp/>recordingLength)<sp/>correctStartTime();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(start<sp/>&gt;<sp/>59){</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remainingSeconds<sp/>=<sp/>static_cast&lt;int&gt;(fmod(static_cast&lt;double&gt;(start),60));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/>startSecond-&gt;setValue(remainingSeconds);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>additionalMinutes<sp/>=<sp/>static_cast&lt;int&gt;(abs(start)<sp/>/<sp/>60);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(additionalMinutes<sp/>==<sp/>0)<sp/>additionalMinutes<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbMinutes<sp/>=<sp/>startMinute-&gt;value()<sp/>+<sp/>additionalMinutes;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbMinutes<sp/>&gt;<sp/>minutePart)<sp/>correctStartTime();<sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>startMinute-&gt;setValue(nbMinutes);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>startTime<sp/>=<sp/>startMinute-&gt;value()*<sp/>60000<sp/>+<sp/>startSecond-&gt;value()<sp/>*<sp/>1000<sp/>+<sp/>startMilisecond-&gt;value();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>scrollBar-&gt;setMaxValue(recordingLength<sp/>-<sp/>timeWindow);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>scrollBar-&gt;setValue(startTime);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/>startTime<sp/>=<sp/>modifiedStartTime;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/>startMinute-&gt;setMaxValue(minutePart);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/>startSecond-&gt;setMaxValue(recordingLength/1000);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/>startMilisecond-&gt;setMaxValue(recordingLength);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/>scrollBar-&gt;setValue(startTime);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>updateView<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Inform<sp/>the<sp/>traceView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>view.<ref refid="classTraceView_19f7957aa400f6d89f046b738b5355cfa" kindref="member">displayTimeFrame</ref>(startTime,timeWindow);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Inform<sp/>listern<sp/>of<sp/>the<sp/>modification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="classTraceWidget_1751e6ef64462695ca4dd2e68badde8ea" kindref="member">updateStartAndDuration</ref>(startTime,timeWindow);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TraceWidget::slotStartMilisecondTimeUpdated(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start){</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isInit<sp/>&amp;&amp;<sp/>updateView){</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Modify<sp/>updateView<sp/>to<sp/>prevent<sp/>the<sp/>scrollBar<sp/>to<sp/>trigger<sp/>a<sp/>changeEvent<sp/>while<sp/>been<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>updateView<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>modifiedStartTime<sp/>=<sp/>startMinute-&gt;value()<sp/>*<sp/>60000<sp/>+<sp/>startSecond-&gt;value()<sp/>*<sp/>1000<sp/>+<sp/>start;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Test<sp/>if<sp/>we<sp/>go<sp/>over<sp/>the<sp/>time<sp/>of<sp/>the<sp/>recording<sp/>if<sp/>so<sp/>keep<sp/>the<sp/>time<sp/>window<sp/>and<sp/>move<sp/>back<sp/>in<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((modifiedStartTime<sp/>+<sp/>timeWindow)<sp/>&gt;<sp/>recordingLength)<sp/>correctStartTime();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(start<sp/>&gt;<sp/>999){</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remainingMiliseconds<sp/>=<sp/>static_cast&lt;int&gt;(fmod(static_cast&lt;double&gt;(start),1000));</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/>startMilisecond-&gt;setValue(remainingMiliseconds);<sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>additionalSeconds<sp/>=<sp/>static_cast&lt;int&gt;(abs(start)<sp/>/<sp/>1000);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(additionalSeconds<sp/>==<sp/>0)<sp/>additionalSeconds<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbSeconds<sp/>=<sp/>startSecond-&gt;value()<sp/>+<sp/>additionalSeconds;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbSeconds<sp/>&gt;<sp/>59){</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remainingSeconds<sp/>=<sp/>static_cast&lt;int&gt;(fmod(static_cast&lt;double&gt;(nbSeconds),60));</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>startSecond-&gt;setValue(remainingSeconds);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>additionalMinutes<sp/>=<sp/>static_cast&lt;int&gt;(abs(nbSeconds)<sp/>/<sp/>60);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(additionalMinutes<sp/>==<sp/>0)<sp/>additionalMinutes<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbMinutes<sp/>=<sp/>startMinute-&gt;value()<sp/>+<sp/>additionalMinutes;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbMinutes<sp/>&gt;<sp/>minutePart)<sp/>correctStartTime();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>startMinute-&gt;setValue(nbMinutes);<sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>startTime<sp/>=<sp/>startMinute-&gt;value()*<sp/>60000<sp/>+<sp/>startSecond-&gt;value()<sp/>*<sp/>1000<sp/>+<sp/>startMilisecond-&gt;value();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>scrollBar-&gt;setMaxValue(recordingLength<sp/>-<sp/>timeWindow);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>scrollBar-&gt;setValue(startTime);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>startSecond-&gt;setValue(nbSeconds);<sp/></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>startTime<sp/>=<sp/>startMinute-&gt;value()*<sp/>60000<sp/>+<sp/>startSecond-&gt;value()<sp/>*<sp/>1000<sp/>+<sp/>startMilisecond-&gt;value();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>scrollBar-&gt;setMaxValue(recordingLength<sp/>-<sp/>timeWindow);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>scrollBar-&gt;setValue(startTime);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/>startTime<sp/>=<sp/>modifiedStartTime;<sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/>startMinute-&gt;setMaxValue(minutePart);<sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/>startSecond-&gt;setMaxValue(recordingLength/1000);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/>startMilisecond-&gt;setMaxValue(recordingLength);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/>scrollBar-&gt;setValue(startTime);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>updateView<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Inform<sp/>the<sp/>traceView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>view.<ref refid="classTraceView_19f7957aa400f6d89f046b738b5355cfa" kindref="member">displayTimeFrame</ref>(startTime,timeWindow);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Inform<sp/>listern<sp/>of<sp/>the<sp/>modification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="classTraceWidget_1751e6ef64462695ca4dd2e68badde8ea" kindref="member">updateStartAndDuration</ref>(startTime,timeWindow);<sp/><sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TraceWidget::slotScrollBarUpdated(){</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isInit<sp/>&amp;&amp;<sp/>updateView){</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Modify<sp/>updateView<sp/>to<sp/>prevent<sp/>the<sp/>spinboxes<sp/>to<sp/>trigger<sp/>a<sp/>changeEvent<sp/>while<sp/>been<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>updateView<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>modifiedStartTime<sp/>=<sp/>scrollBar-&gt;value();</highlight><highlight class="comment">//in<sp/>miliseconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(modifiedStartTime<sp/>==<sp/>startTime){</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/>updateView<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Test<sp/>if<sp/>we<sp/>go<sp/>over<sp/>the<sp/>time<sp/>of<sp/>the<sp/>recording<sp/>if<sp/>so<sp/>keep<sp/>the<sp/>time<sp/>window<sp/>and<sp/>move<sp/>back<sp/>in<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((modifiedStartTime<sp/>+<sp/>timeWindow)<sp/>&gt;<sp/>recordingLength)<sp/>correctStartTime();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/><sp/></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/>startTime<sp/>=<sp/>modifiedStartTime;<sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbMinutes<sp/>=<sp/>startTime<sp/>/<sp/>60000;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remainingSeconds<sp/>=<sp/>static_cast&lt;int&gt;(fmod(static_cast&lt;double&gt;(startTime),60000));</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbSeconds<sp/>=<sp/>remainingSeconds<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remainingMiliseconds<sp/>=<sp/>static_cast&lt;int&gt;(fmod(static_cast&lt;double&gt;(remainingSeconds),1000));</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/>startMinute-&gt;setValue(nbMinutes);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/>startSecond-&gt;setValue(nbSeconds);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/>startMilisecond-&gt;setValue(remainingMiliseconds);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/>startMinute-&gt;setMaxValue(minutePart);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/>startSecond-&gt;setMaxValue(recordingLength/1000);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/>startMilisecond-&gt;setMaxValue(recordingLength);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>updateView<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Inform<sp/>the<sp/>traceView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>view.<ref refid="classTraceView_19f7957aa400f6d89f046b738b5355cfa" kindref="member">displayTimeFrame</ref>(startTime,timeWindow);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Inform<sp/>listener<sp/>of<sp/>the<sp/>modification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="classTraceWidget_1751e6ef64462695ca4dd2e68badde8ea" kindref="member">updateStartAndDuration</ref>(startTime,timeWindow);<sp/><sp/></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTraceWidget_137c7e2a0863ccddb96b93e49bc71e9c0" kindref="member">TraceWidget::moveToTime</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>time){</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isInit<sp/>&amp;&amp;<sp/>updateView){</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Test<sp/>if<sp/>we<sp/>go<sp/>over<sp/>the<sp/>time<sp/>of<sp/>the<sp/>recording</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&gt;<sp/>recordingLength)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Modify<sp/>updateView<sp/>to<sp/>prevent<sp/>the<sp/>spinboxes<sp/>to<sp/>trigger<sp/>a<sp/>changeEvent<sp/>while<sp/>been<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>updateView<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Test<sp/>if<sp/>we<sp/>go<sp/>over<sp/>the<sp/>time<sp/>of<sp/>the<sp/>recording<sp/>if<sp/>so<sp/>keep<sp/>the<sp/>time<sp/>window<sp/>and<sp/>move<sp/>back<sp/>in<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((time<sp/>+<sp/>timeWindow)<sp/>&gt;<sp/>recordingLength)<sp/>correctStartTime();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/>scrollBar-&gt;setValue(time);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/>startTime<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbMinutes<sp/>=<sp/>startTime<sp/>/<sp/>60000;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remainingSeconds<sp/>=<sp/>static_cast&lt;int&gt;(fmod(static_cast&lt;double&gt;(startTime),60000));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbSeconds<sp/>=<sp/>remainingSeconds<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remainingMiliseconds<sp/>=<sp/>static_cast&lt;int&gt;(fmod(static_cast&lt;double&gt;(remainingSeconds),1000));</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/>startMinute-&gt;setValue(nbMinutes);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/>startSecond-&gt;setValue(nbSeconds);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/>startMilisecond-&gt;setValue(remainingMiliseconds);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>updateView<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Inform<sp/>the<sp/>traceView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>view.<ref refid="classTraceView_19f7957aa400f6d89f046b738b5355cfa" kindref="member">displayTimeFrame</ref>(startTime,timeWindow);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Inform<sp/>listern<sp/>of<sp/>the<sp/>modification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="classTraceWidget_1751e6ef64462695ca4dd2e68badde8ea" kindref="member">updateStartAndDuration</ref>(startTime,timeWindow);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTraceWidget_1d1c39916587b8db09e500f756d5fb5d2" kindref="member">TraceWidget::slotSetStartAndDuration</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>time,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>duration){</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isInit<sp/>&amp;&amp;<sp/>updateView){</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Test<sp/>if<sp/>we<sp/>go<sp/>over<sp/>the<sp/>time<sp/>of<sp/>the<sp/>recording</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(time<sp/>&gt;<sp/>recordingLength)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Modify<sp/>updateView<sp/>to<sp/>prevent<sp/>the<sp/>spinboxes<sp/>to<sp/>trigger<sp/>a<sp/>changeEvent<sp/>while<sp/>been<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>updateView<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//First<sp/>set<sp/>the<sp/>duration<sp/>then<sp/>the<sp/>start<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Duration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Test<sp/>if<sp/>the<sp/>time<sp/>window<sp/>is<sp/>inferior<sp/>to<sp/>1<sp/>ms,<sp/>if<sp/>so<sp/>fix<sp/>set<sp/>it<sp/>to<sp/>the<sp/>minimum<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(duration<sp/>&lt;<sp/>1)<sp/>duration<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>this-&gt;duration-&gt;setText(QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(duration));</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>timeWindow<sp/>=<sp/>duration;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Test<sp/>if<sp/>we<sp/>go<sp/>over<sp/>the<sp/>time<sp/>of<sp/>the<sp/>recording<sp/>if<sp/>so<sp/>keep<sp/>the<sp/>time<sp/>window<sp/>and<sp/>move<sp/>back<sp/>in<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((startTime<sp/>+<sp/>timeWindow)<sp/>&gt;<sp/>recordingLength)<sp/>correctStartTime();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/>startMinute-&gt;setMaxValue(minutePart);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/>startSecond-&gt;setMaxValue(recordingLength/1000);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/>startMilisecond-&gt;setMaxValue(recordingLength);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//beyond<sp/>10<sp/>ms<sp/>the<sp/>lineStep<sp/>is<sp/>fixe<sp/>at<sp/>1<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeWindow<sp/>&lt;<sp/>10)<sp/>lineStep<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>lineStep<sp/>=<sp/><sp/>static_cast&lt;long&gt;(floor(0.5<sp/>+<sp/>static_cast&lt;float&gt;(static_cast&lt;float&gt;(timeWindow)<sp/>/<sp/>static_cast&lt;float&gt;(20))));</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>pageStep<sp/>=<sp/>timeWindow;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>scrollBar-&gt;setMaxValue(recordingLength<sp/>-<sp/>timeWindow);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>scrollBar-&gt;setLineStep(lineStep);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>scrollBar-&gt;setPageStep(pageStep);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Start<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Test<sp/>if<sp/>we<sp/>go<sp/>over<sp/>the<sp/>time<sp/>of<sp/>the<sp/>recording<sp/>if<sp/>so<sp/>keep<sp/>the<sp/>time<sp/>window<sp/>and<sp/>move<sp/>back<sp/>in<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((time<sp/>+<sp/>timeWindow)<sp/>&gt;<sp/>recordingLength)<sp/>correctStartTime();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/>scrollBar-&gt;setValue(time);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/>startTime<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbMinutes<sp/>=<sp/>startTime<sp/>/<sp/>60000;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remainingSeconds<sp/>=<sp/>static_cast&lt;int&gt;(fmod(static_cast&lt;double&gt;(startTime),60000));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbSeconds<sp/>=<sp/>remainingSeconds<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remainingMiliseconds<sp/>=<sp/>static_cast&lt;int&gt;(fmod(static_cast&lt;double&gt;(remainingSeconds),1000));</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/>startMinute-&gt;setValue(nbMinutes);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/>startSecond-&gt;setValue(nbSeconds);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/>startMilisecond-&gt;setValue(remainingMiliseconds);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>updateView<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Inform<sp/>the<sp/>traceView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>view.<ref refid="classTraceView_19f7957aa400f6d89f046b738b5355cfa" kindref="member">displayTimeFrame</ref>(startTime,timeWindow);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Inform<sp/>listern<sp/>of<sp/>the<sp/>modification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>emit<sp/><ref refid="classTraceWidget_1751e6ef64462695ca4dd2e68badde8ea" kindref="member">updateStartAndDuration</ref>(startTime,timeWindow);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/lynn/CMBN/Klusters/klusters/src/tracewidget.cpp"/>
  </compounddef>
</doxygen>
