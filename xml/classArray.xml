<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.1">
  <compounddef id="classArray" kind="class" prot="public">
    <compoundname>Array</compoundname>
    <derivedcompoundref refid="classpArray" prot="public" virt="non-virtual">pArray&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="classSortableTable" prot="public" virt="non-virtual">SortableTable</derivedcompoundref>
    <includes refid="array_8h" local="no">array.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classArray_10327789f5c397680a6ae8c72913465ee" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long Array&lt; T &gt;::nbColumns</definition>
        <argsstring></argsstring>
        <name>nbColumns</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="162" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="159" bodyend="-1"/>
        <referencedby refid="classpArray_172ca638b08fb93c6dcf1b198466f9666" compoundref="array_8h" startline="192" endline="198">pArray&lt; EventDescription &gt;::copyAndPrependColumn</referencedby>
        <referencedby refid="classArray_132ea3e37fa1d0559201c40a4e006c0d9" compoundref="array_8h" startline="109" endline="113">Array&lt; EventDescription &gt;::copyAndPrependColumn</referencedby>
        <referencedby refid="classpArray_14617ff68b547a432a930314d4ab7042f" compoundref="array_8h" startline="206" endline="212">pArray&lt; EventDescription &gt;::copySubset</referencedby>
        <referencedby refid="classArray_119bcb349c3fccf22dfdbdf5076cb9a78" compoundref="array_8h" startline="121" endline="125">Array&lt; EventDescription &gt;::copySubset</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classArray_11d10cb71d33f6278f2ebad5b063f521a" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long Array&lt; T &gt;::nbRows</definition>
        <argsstring></argsstring>
        <name>nbRows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="163" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classArray_1e2cc2a9a3218834ff71f023903e9fdbc" prot="protected" static="no" mutable="no">
        <type>T *</type>
        <definition>T* Array&lt; T &gt;::array</definition>
        <argsstring></argsstring>
        <name>array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="164" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="164" bodyend="-1"/>
        <referencedby refid="classpArray_172ca638b08fb93c6dcf1b198466f9666" compoundref="array_8h" startline="192" endline="198">pArray&lt; EventDescription &gt;::copyAndPrependColumn</referencedby>
        <referencedby refid="classArray_132ea3e37fa1d0559201c40a4e006c0d9" compoundref="array_8h" startline="109" endline="113">Array&lt; EventDescription &gt;::copyAndPrependColumn</referencedby>
        <referencedby refid="classpArray_14617ff68b547a432a930314d4ab7042f" compoundref="array_8h" startline="206" endline="212">pArray&lt; EventDescription &gt;::copySubset</referencedby>
        <referencedby refid="classArray_119bcb349c3fccf22dfdbdf5076cb9a78" compoundref="array_8h" startline="121" endline="125">Array&lt; EventDescription &gt;::copySubset</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classArray_1858c11d8580f0dbd55ae3ce7b2373c7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Array&lt; T &gt;::Array</definition>
        <argsstring>(long nbOfRows, long nbOfColumns)</argsstring>
        <name>Array</name>
        <param>
          <type>long</type>
          <declname>nbOfRows</declname>
        </param>
        <param>
          <type>long</type>
          <declname>nbOfColumns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="38" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classArray_10a7e67e48d2bf8ebb26f743cfc3b50fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Array&lt; T &gt;::Array</definition>
        <argsstring>()</argsstring>
        <name>Array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="44" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classArray_132ccb701314abd4cc8775f188bfa6892" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Array&lt; T &gt;::~Array</definition>
        <argsstring>()</argsstring>
        <name>~Array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="46" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classArray_109210c530a317d5c6d6f8006d2df55e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Array&lt; T &gt;::setSize</definition>
        <argsstring>(long nbOfRows, long nbOfColumns)</argsstring>
        <name>setSize</name>
        <reimplementedby refid="classSortableTable_13b28ff382efb414251bcf9a4cf9e0679">setSize</reimplementedby>
        <param>
          <type>long</type>
          <declname>nbOfRows</declname>
        </param>
        <param>
          <type>long</type>
          <declname>nbOfColumns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="52" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classArray_10f2072faaac6dd6d5dfe27b80bb71b12" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T Array&lt; T &gt;::operator()</definition>
        <argsstring>(long row, long column) const</argsstring>
        <name>operator()</name>
        <param>
          <type>long</type>
          <declname>row</declname>
        </param>
        <param>
          <type>long</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Accessor <computeroutput>Array(i,j)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The rows and columns starts at 1.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>index </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>index </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the element (by value) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="66" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classArray_110bb4f5caa5b050f58fb4867eb45eb06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; Array&lt; T &gt;::operator()</definition>
        <argsstring>(long row, long column)</argsstring>
        <name>operator()</name>
        <param>
          <type>long</type>
          <declname>row</declname>
        </param>
        <param>
          <type>long</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Mutator <computeroutput>Array(i,j)</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>The rows and columns starts at 1.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>index </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>index </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the element (by value) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="76" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classArray_1e5e7f655a73a01c40f36b62d27e33f7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; Array&lt; T &gt;::operator[]</definition>
        <argsstring>(long position)</argsstring>
        <name>operator[]</name>
        <param>
          <type>long</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>Return the i element of the internal array by reference. </para>        </briefdescription>
        <detaileddescription>
<para>The position starts at 0.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>index </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the element (by value) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="86" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classArray_1d55af2bb256e18c4554faea8d8abce42" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long Array&lt; T &gt;::nbOfRows</definition>
        <argsstring>() const</argsstring>
        <name>nbOfRows</name>
        <briefdescription>
<para>Returns the number of rows in the array. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of rows </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="93" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classArray_1bf8d9f719e657139795c7804422c70fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long Array&lt; T &gt;::nbOfColumns</definition>
        <argsstring>() const</argsstring>
        <name>nbOfColumns</name>
        <briefdescription>
<para>Returns the number of columns in the array. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of columns </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="100" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classArray_132ea3e37fa1d0559201c40a4e006c0d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Array&lt; T &gt;::copyAndPrependColumn</definition>
        <argsstring>(Array &amp;source)</argsstring>
        <name>copyAndPrependColumn</name>
        <param>
          <type><ref refid="classArray" kindref="compound">Array</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Copies data from <computeroutput>source</computeroutput> to the current object prepending an empty column. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classArray" kindref="compound">Array</ref> containing the data to put in the current <ref refid="classArray" kindref="compound">Array</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="109" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classArray_119bcb349c3fccf22dfdbdf5076cb9a78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Array&lt; T &gt;::copySubset</definition>
        <argsstring>(Array &amp;source, long lastColumnToCopy)</argsstring>
        <name>copySubset</name>
        <param>
          <type><ref refid="classArray" kindref="compound">Array</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>long</type>
          <declname>lastColumnToCopy</declname>
        </param>
        <briefdescription>
<para>Copies a subset of data from <computeroutput>source</computeroutput> to the current object. </para>        </briefdescription>
        <detaileddescription>
<para>Copy from the first column to the <computeroutput>lastColumnToCopy</computeroutput>. Assumes that the <ref refid="classArray" kindref="compound">Array</ref> has the correct size. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classArray" kindref="compound">Array</ref> containing the data to put in the current <ref refid="classArray" kindref="compound">Array</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lastColumnToCopy</parametername>
</parameternamelist>
<parameterdescription>
<para>last column containing data to copy, start at 1. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="121" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="121" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classArray_12c6b0b43b54141d99bf184a7bab00bb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Array&lt; T &gt;::copySubset</definition>
        <argsstring>(Array &amp;source, long firstColumnToCopy, long lastColumnToCopy, long startingColumn)</argsstring>
        <name>copySubset</name>
        <param>
          <type><ref refid="classArray" kindref="compound">Array</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>long</type>
          <declname>firstColumnToCopy</declname>
        </param>
        <param>
          <type>long</type>
          <declname>lastColumnToCopy</declname>
        </param>
        <param>
          <type>long</type>
          <declname>startingColumn</declname>
        </param>
        <briefdescription>
<para>Copies a subset of data from <computeroutput>source</computeroutput> to the current object. </para>        </briefdescription>
        <detaileddescription>
<para>Copy from <computeroutput>firstColumnToCopy</computeroutput> to the <computeroutput>lastColumnToCopy</computeroutput> inserting them after <computeroutput>startingColumn</computeroutput>. Assumes that the <ref refid="classArray" kindref="compound">Array</ref> has the correct size. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classArray" kindref="compound">Array</ref> containing the data to put in the current <ref refid="classArray" kindref="compound">Array</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firstColumnToCopy</parametername>
</parameternamelist>
<parameterdescription>
<para>first column containing data to copy, start at 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lastColumnToCopy</parametername>
</parameternamelist>
<parameterdescription>
<para>last column containing data to copy, start at 1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startingColumn</parametername>
</parameternamelist>
<parameterdescription>
<para>column from where to start copying to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="135" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="135" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classArray_15720d22bba044d2ad5d83ada79243b54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Array&lt; T &gt;::fillWithZeros</definition>
        <argsstring>()</argsstring>
        <name>fillWithZeros</name>
        <briefdescription>
<para>Fills the array with zeros. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="145" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classArray_189229b69e79a04295a9b24e208ee46fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classArray" kindref="compound">Array</ref>&lt; T &gt; &amp;</type>
        <definition>Array&lt;T&gt;&amp; Array&lt; T &gt;::operator=</definition>
        <argsstring>(const Array&lt; T &gt; &amp;source)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classArray" kindref="compound">Array</ref>&lt; T &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="150" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="150" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This <ref refid="classArray" kindref="compound">Array</ref> class is a template class that provides arrays of simple types. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="classArray" kindref="compound">Array</ref> stores the array elements directly in the array. It can only deal with simple types. <ref refid="classArray" kindref="compound">Array</ref> provides an easy way to acess the elements through the parenthesis operator. <simplesect kind="author"><para>Lynn Hazan </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="691">
        <label>Array&lt; int &gt;</label>
        <link refid="classArray"/>
        <childnode refid="685" relation="template-instance">
          <edgelabel>&lt; int &gt;</edgelabel>
        </childnode>
      </node>
      <node id="690">
        <label>Array&lt; double &gt;</label>
        <link refid="classArray"/>
        <childnode refid="685" relation="template-instance">
          <edgelabel>&lt; double &gt;</edgelabel>
        </childnode>
      </node>
      <node id="686">
        <label>pArray&lt; T &gt;</label>
        <link refid="classpArray"/>
        <childnode refid="685" relation="public-inheritance">
        </childnode>
      </node>
      <node id="692">
        <label>Array&lt; EventDescription &gt;</label>
        <link refid="classArray"/>
        <childnode refid="685" relation="template-instance">
          <edgelabel>&lt; EventDescription &gt;</edgelabel>
        </childnode>
      </node>
      <node id="685">
        <label>Array&lt; T &gt;</label>
        <link refid="classArray"/>
      </node>
      <node id="687">
        <label>pArray&lt; EventDescription &gt;</label>
        <link refid="classpArray"/>
        <childnode refid="686" relation="template-instance">
          <edgelabel>&lt; EventDescription &gt;</edgelabel>
        </childnode>
        <childnode refid="692" relation="public-inheritance">
        </childnode>
      </node>
      <node id="689">
        <label>Array&lt; long &gt;</label>
        <link refid="classArray"/>
        <childnode refid="685" relation="template-instance">
          <edgelabel>&lt; long &gt;</edgelabel>
        </childnode>
      </node>
      <node id="688">
        <label>SortableTable&lt; long &gt;</label>
        <link refid="classSortableTable"/>
        <childnode refid="685" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="694">
        <label>T</label>
      </node>
      <node id="693">
        <label>Array&lt; T &gt;</label>
        <link refid="classArray"/>
        <childnode refid="694" relation="usage">
          <edgelabel>array</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/lynn/CMBN/Klusters/klusters/src/array.h" line="36" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/array.h" bodystart="36" bodyend="166"/>
    <listofallmembers>
      <member refid="classArray_1e2cc2a9a3218834ff71f023903e9fdbc" prot="protected" virt="non-virtual"><scope>Array</scope><name>array</name></member>
      <member refid="classArray_1858c11d8580f0dbd55ae3ce7b2373c7f" prot="public" virt="non-virtual"><scope>Array</scope><name>Array</name></member>
      <member refid="classArray_10a7e67e48d2bf8ebb26f743cfc3b50fc" prot="public" virt="non-virtual"><scope>Array</scope><name>Array</name></member>
      <member refid="classArray_132ea3e37fa1d0559201c40a4e006c0d9" prot="public" virt="non-virtual"><scope>Array</scope><name>copyAndPrependColumn</name></member>
      <member refid="classArray_119bcb349c3fccf22dfdbdf5076cb9a78" prot="public" virt="non-virtual"><scope>Array</scope><name>copySubset</name></member>
      <member refid="classArray_12c6b0b43b54141d99bf184a7bab00bb3" prot="public" virt="non-virtual"><scope>Array</scope><name>copySubset</name></member>
      <member refid="classArray_15720d22bba044d2ad5d83ada79243b54" prot="public" virt="non-virtual"><scope>Array</scope><name>fillWithZeros</name></member>
      <member refid="classArray_10327789f5c397680a6ae8c72913465ee" prot="protected" virt="non-virtual"><scope>Array</scope><name>nbColumns</name></member>
      <member refid="classArray_1bf8d9f719e657139795c7804422c70fc" prot="public" virt="non-virtual"><scope>Array</scope><name>nbOfColumns</name></member>
      <member refid="classArray_1d55af2bb256e18c4554faea8d8abce42" prot="public" virt="non-virtual"><scope>Array</scope><name>nbOfRows</name></member>
      <member refid="classArray_11d10cb71d33f6278f2ebad5b063f521a" prot="protected" virt="non-virtual"><scope>Array</scope><name>nbRows</name></member>
      <member refid="classArray_10f2072faaac6dd6d5dfe27b80bb71b12" prot="public" virt="non-virtual"><scope>Array</scope><name>operator()</name></member>
      <member refid="classArray_110bb4f5caa5b050f58fb4867eb45eb06" prot="public" virt="non-virtual"><scope>Array</scope><name>operator()</name></member>
      <member refid="classArray_189229b69e79a04295a9b24e208ee46fd" prot="public" virt="non-virtual"><scope>Array</scope><name>operator=</name></member>
      <member refid="classArray_1e5e7f655a73a01c40f36b62d27e33f7a" prot="public" virt="non-virtual"><scope>Array</scope><name>operator[]</name></member>
      <member refid="classArray_109210c530a317d5c6d6f8006d2df55e6" prot="public" virt="non-virtual"><scope>Array</scope><name>setSize</name></member>
      <member refid="classArray_132ccb701314abd4cc8775f188bfa6892" prot="public" virt="non-virtual"><scope>Array</scope><name>~Array</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
