<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.1">
  <compounddef id="errormatrixview_8cpp" kind="file">
    <compoundname>errormatrixview.cpp</compoundname>
    <includes refid="errormatrixview_8h" local="yes">errormatrixview.h</includes>
    <includes refid="errormatrixthread_8h" local="yes">errormatrixthread.h</includes>
    <includes refid="groupingassistant_8h" local="yes">groupingassistant.h</includes>
    <includes refid="array_8h" local="yes">array.h</includes>
    <includes refid="klustersview_8h" local="yes">klustersview.h</includes>
    <includes refid="klustersdoc_8h" local="yes">klustersdoc.h</includes>
    <includes refid="data_8h" local="yes">data.h</includes>
    <includes refid="timer_8h" local="yes">timer.h</includes>
    <includes local="no">qpaintdevicemetrics.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="1074">
        <label>qpaintdevicemetrics.h</label>
      </node>
      <node id="1024">
        <label>baseframe.h</label>
        <link refid="baseframe_8h-source"/>
        <childnode refid="1015" relation="include">
        </childnode>
        <childnode refid="1021" relation="include">
        </childnode>
        <childnode refid="1025" relation="include">
        </childnode>
        <childnode refid="1026" relation="include">
        </childnode>
        <childnode refid="1030" relation="include">
        </childnode>
      </node>
      <node id="1059">
        <label>qtimer.h</label>
      </node>
      <node id="1042">
        <label>qregion.h</label>
      </node>
      <node id="1043">
        <label>qfile.h</label>
      </node>
      <node id="1033">
        <label>pair.h</label>
        <link refid="pair_8h-source"/>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1030" relation="include">
        </childnode>
        <childnode refid="1035" relation="include">
        </childnode>
      </node>
      <node id="1069">
        <label>dataprovider.h</label>
        <link refid="dataprovider_8h-source"/>
        <childnode refid="1061" relation="include">
        </childnode>
        <childnode refid="1046" relation="include">
        </childnode>
      </node>
      <node id="1050">
        <label>klustersview.h</label>
        <link refid="klustersview_8h-source"/>
        <childnode refid="1051" relation="include">
        </childnode>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1023" relation="include">
        </childnode>
        <childnode refid="1015" relation="include">
        </childnode>
        <childnode refid="1053" relation="include">
        </childnode>
        <childnode refid="1054" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1020" relation="include">
        </childnode>
        <childnode refid="1055" relation="include">
        </childnode>
      </node>
      <node id="1066">
        <label>qiconview.h</label>
      </node>
      <node id="1018">
        <label>qvaluelist.h</label>
      </node>
      <node id="1020">
        <label>viewwidget.h</label>
        <link refid="viewwidget_8h-source"/>
        <childnode refid="1015" relation="include">
        </childnode>
        <childnode refid="1021" relation="include">
        </childnode>
        <childnode refid="1022" relation="include">
        </childnode>
        <childnode refid="1023" relation="include">
        </childnode>
        <childnode refid="1024" relation="include">
        </childnode>
      </node>
      <node id="1026">
        <label>zoomwindow.h</label>
        <link refid="zoomwindow_8h-source"/>
        <childnode refid="1027" relation="include">
        </childnode>
        <childnode refid="1028" relation="include">
        </childnode>
        <childnode refid="1029" relation="include">
        </childnode>
      </node>
      <node id="1034">
        <label>qstring.h</label>
      </node>
      <node id="1035">
        <label>stdlib.h</label>
      </node>
      <node id="1061">
        <label>qobject.h</label>
      </node>
      <node id="1070">
        <label>channelcolors.h</label>
        <link refid="channelcolors_8h-source"/>
        <childnode refid="1019" relation="include">
        </childnode>
        <childnode refid="1017" relation="include">
        </childnode>
        <childnode refid="1018" relation="include">
        </childnode>
      </node>
      <node id="1046">
        <label>kurl.h</label>
      </node>
      <node id="1027">
        <label>qrect.h</label>
      </node>
      <node id="1047">
        <label>stdexcept</label>
      </node>
      <node id="1060">
        <label>klustersdoc.h</label>
        <link refid="klustersdoc_8h-source"/>
        <childnode refid="1061" relation="include">
        </childnode>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1019" relation="include">
        </childnode>
        <childnode refid="1028" relation="include">
        </childnode>
        <childnode refid="1062" relation="include">
        </childnode>
        <childnode refid="1046" relation="include">
        </childnode>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1054" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1063" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
        <childnode refid="1070" relation="include">
        </childnode>
        <childnode refid="1071" relation="include">
        </childnode>
      </node>
      <node id="1031">
        <label>array.h</label>
        <link refid="array_8h-source"/>
        <childnode refid="1032" relation="include">
        </childnode>
        <childnode refid="1030" relation="include">
        </childnode>
      </node>
      <node id="1013">
        <label>errormatrixview.cpp</label>
        <link refid="errormatrixview.cpp"/>
        <childnode refid="1014" relation="include">
        </childnode>
        <childnode refid="1036" relation="include">
        </childnode>
        <childnode refid="1049" relation="include">
        </childnode>
        <childnode refid="1031" relation="include">
        </childnode>
        <childnode refid="1050" relation="include">
        </childnode>
        <childnode refid="1060" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1072" relation="include">
        </childnode>
        <childnode refid="1074" relation="include">
        </childnode>
        <childnode refid="1030" relation="include">
        </childnode>
      </node>
      <node id="1023">
        <label>kstatusbar.h</label>
      </node>
      <node id="1021">
        <label>qframe.h</label>
      </node>
      <node id="1017">
        <label>qcolor.h</label>
      </node>
      <node id="1019">
        <label>qptrlist.h</label>
      </node>
      <node id="1028">
        <label>qpoint.h</label>
      </node>
      <node id="1049">
        <label>groupingassistant.h</label>
        <link refid="groupingassistant_8h-source"/>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1031" relation="include">
        </childnode>
        <childnode refid="1039" relation="include">
        </childnode>
      </node>
      <node id="1038">
        <label>sortabletable.h</label>
        <link refid="sortabletable_8h-source"/>
        <childnode refid="1031" relation="include">
        </childnode>
        <childnode refid="1039" relation="include">
        </childnode>
      </node>
      <node id="1040">
        <label>clusteruserinformation.h</label>
        <link refid="clusteruserinformation_8h-source"/>
      </node>
      <node id="1067">
        <label>qtooltip.h</label>
      </node>
      <node id="1036">
        <label>errormatrixthread.h</label>
        <link refid="errormatrixthread_8h-source"/>
        <childnode refid="1014" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1031" relation="include">
        </childnode>
        <childnode refid="1049" relation="include">
        </childnode>
        <childnode refid="1045" relation="include">
        </childnode>
      </node>
      <node id="1051">
        <label>kprinter.h</label>
      </node>
      <node id="1071">
        <label>clustersprovider.h</label>
        <link refid="clustersprovider_8h-source"/>
        <childnode refid="1069" relation="include">
        </childnode>
        <childnode refid="1031" relation="include">
        </childnode>
        <childnode refid="1039" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1019" relation="include">
        </childnode>
        <childnode refid="1061" relation="include">
        </childnode>
      </node>
      <node id="1068">
        <label>tracesprovider.h</label>
        <link refid="tracesprovider_8h-source"/>
        <childnode refid="1069" relation="include">
        </childnode>
        <childnode refid="1031" relation="include">
        </childnode>
        <childnode refid="1039" relation="include">
        </childnode>
        <childnode refid="1019" relation="include">
        </childnode>
        <childnode refid="1061" relation="include">
        </childnode>
      </node>
      <node id="1048">
        <label>vector</label>
      </node>
      <node id="1064">
        <label>qvariant.h</label>
      </node>
      <node id="1054">
        <label>itemcolors.h</label>
        <link refid="itemcolors_8h-source"/>
        <childnode refid="1019" relation="include">
        </childnode>
        <childnode refid="1017" relation="include">
        </childnode>
        <childnode refid="1018" relation="include">
        </childnode>
      </node>
      <node id="1052">
        <label>kdockwidget.h</label>
      </node>
      <node id="1025">
        <label>qcursor.h</label>
      </node>
      <node id="1056">
        <label>qpainter.h</label>
      </node>
      <node id="1014">
        <label>errormatrixview.h</label>
        <link refid="errormatrixview_8h-source"/>
        <childnode refid="1015" relation="include">
        </childnode>
        <childnode refid="1016" relation="include">
        </childnode>
        <childnode refid="1017" relation="include">
        </childnode>
        <childnode refid="1018" relation="include">
        </childnode>
        <childnode refid="1019" relation="include">
        </childnode>
        <childnode refid="1020" relation="include">
        </childnode>
        <childnode refid="1031" relation="include">
        </childnode>
        <childnode refid="1033" relation="include">
        </childnode>
      </node>
      <node id="1029">
        <label>math.h</label>
      </node>
      <node id="1072">
        <label>timer.h</label>
        <link refid="timer_8h-source"/>
        <childnode refid="1073" relation="include">
        </childnode>
      </node>
      <node id="1015">
        <label>qwidget.h</label>
      </node>
      <node id="1073">
        <label>sys/time.h</label>
      </node>
      <node id="1030">
        <label>iostream</label>
      </node>
      <node id="1053">
        <label>qvaluevector.h</label>
      </node>
      <node id="1045">
        <label>qthread.h</label>
      </node>
      <node id="1062">
        <label>qfileinfo.h</label>
      </node>
      <node id="1063">
        <label>clusterPalette.h</label>
        <link refid="clusterPalette_8h-source"/>
        <childnode refid="1064" relation="include">
        </childnode>
        <childnode refid="1015" relation="include">
        </childnode>
        <childnode refid="1065" relation="include">
        </childnode>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1030" relation="include">
        </childnode>
      </node>
      <node id="1058">
        <label>qpointarray.h</label>
      </node>
      <node id="1041">
        <label>qdict.h</label>
      </node>
      <node id="1055">
        <label>correlationview.h</label>
        <link refid="correlationview_8h-source"/>
        <childnode refid="1026" relation="include">
        </childnode>
        <childnode refid="1020" relation="include">
        </childnode>
        <childnode refid="1033" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1021" relation="include">
        </childnode>
        <childnode refid="1056" relation="include">
        </childnode>
        <childnode refid="1057" relation="include">
        </childnode>
        <childnode refid="1022" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1059" relation="include">
        </childnode>
        <childnode refid="1018" relation="include">
        </childnode>
        <childnode refid="1019" relation="include">
        </childnode>
      </node>
      <node id="1016">
        <label>qmap.h</label>
      </node>
      <node id="1057">
        <label>qstyle.h</label>
      </node>
      <node id="1044">
        <label>qmutex.h</label>
      </node>
      <node id="1022">
        <label>qpixmap.h</label>
      </node>
      <node id="1032">
        <label>cstring</label>
      </node>
      <node id="1065">
        <label>qvbox.h</label>
      </node>
      <node id="1037">
        <label>data.h</label>
        <link refid="data_8h-source"/>
        <childnode refid="1031" relation="include">
        </childnode>
        <childnode refid="1038" relation="include">
        </childnode>
        <childnode refid="1033" relation="include">
        </childnode>
        <childnode refid="1039" relation="include">
        </childnode>
        <childnode refid="1040" relation="include">
        </childnode>
        <childnode refid="1019" relation="include">
        </childnode>
        <childnode refid="1018" relation="include">
        </childnode>
        <childnode refid="1041" relation="include">
        </childnode>
        <childnode refid="1042" relation="include">
        </childnode>
        <childnode refid="1016" relation="include">
        </childnode>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1044" relation="include">
        </childnode>
        <childnode refid="1045" relation="include">
        </childnode>
        <childnode refid="1046" relation="include">
        </childnode>
        <childnode refid="1030" relation="include">
        </childnode>
        <childnode refid="1047" relation="include">
        </childnode>
        <childnode refid="1029" relation="include">
        </childnode>
        <childnode refid="1048" relation="include">
        </childnode>
      </node>
      <node id="1039">
        <label>types.h</label>
        <link refid="types_8h-source"/>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errormatrixview.cpp<sp/><sp/>-<sp/><sp/>description</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>begin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Mon<sp/>Jan<sp/>5<sp/>2004</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>copyright<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(C)<sp/>2004<sp/>by<sp/>Lynn<sp/>Hazan</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>email<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>lynn.hazan@myrealbox.com</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//include<sp/>files<sp/>for<sp/>the<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;errormatrixview.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;errormatrixthread.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;groupingassistant.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;array.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;klustersview.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;klustersdoc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;data.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;timer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>files<sp/>for<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qpaintdevicemetrics.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//General<sp/>C++<sp/>include<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">ErrorMatrixView::ErrorMatrixView(<ref refid="classKlustersDoc" kindref="compound">KlustersDoc</ref>&amp;<sp/>doc,<ref refid="classKlustersView" kindref="compound">KlustersView</ref>&amp;<sp/>view,QColor<sp/>backgroundColor,KStatusBar*<sp/>statusBar,QWidget<sp/>*parent,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal">maxSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowTopLeft<sp/>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowBottomRight,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>border)<sp/>:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classViewWidget" kindref="compound">ViewWidget</ref>(doc,view,backgroundColor,statusBar,parent,name,minSize,maxSize,windowTopLeft,windowBottomRight,border),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataReady(false),nbColors(100),cutoffProbability(0.1),init(true),hasBeenRenumbered(false),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbActions(0),nbRedo(0),isNotUpToDate(false),nbPreviousUndo(0),nbPreviousRedo(0),goingToDie(false)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>list<sp/>owns<sp/>its<sp/>objects,<sp/>it<sp/>will<sp/>delete<sp/>the<sp/>items<sp/>that<sp/>are<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/>threadsToBeKill.setAutoDelete(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//The<sp/>treads<sp/>will<sp/>be<sp/>delete<sp/>only<sp/>from<sp/>threadsToBeKill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>drawing<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/>abscissaMin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/>ordinateMax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/>cellWidth<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/>initializeColorMap();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight><highlight class="comment">//Compute<sp/>the<sp/>error<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/>updateMatrixContents();</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">ErrorMatrixView::~ErrorMatrixView(){</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/></highlight><highlight class="comment">//Ask<sp/>the<sp/>threads<sp/>to<sp/>stop<sp/>as<sp/>soon<sp/>as<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><ref refid="classErrorMatrixView_1be7fdec65331be47d4bfca91637cc256" kindref="member">willBeKilled</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/></highlight><highlight class="comment">//Wait<sp/>until<sp/>all<sp/>the<sp/>threads<sp/>have<sp/>finish<sp/>before<sp/>quiting<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>it<sp/>may<sp/>endup<sp/>in<sp/>a<sp/>crash<sp/>of<sp/>the<sp/>application.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classErrorMatrixThread" kindref="compound">ErrorMatrixThread</ref>*<sp/>errorMatrixThread<sp/>=<sp/>threadsToBeKill.first();<sp/>errorMatrixThread;<sp/>errorMatrixThread<sp/>=<sp/>threadsToBeKill.next())</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!errorMatrixThread-&gt;wait()<sp/>&amp;&amp;<sp/>!dataReady){};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>probabilities;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_13fa450bd9e0ac2a7b6d9e89854aaf3b9" kindref="member">ErrorMatrixView::isThreadsRunning</ref>(){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(threadsToBeKill.count()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_10a45bd29e0fec237388d46d316f37e59" kindref="member">ErrorMatrixView::customEvent</ref>(QCustomEvent*<sp/>event){</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/></highlight><highlight class="comment">//Event<sp/>sent<sp/>by<sp/>a<sp/>ErrorMatrixThread<sp/>to<sp/>inform<sp/>that<sp/>the<sp/>data<sp/>are<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(event-&gt;type()<sp/>==<sp/>QEvent::User<sp/>+<sp/>600){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="classErrorMatrixThread_1_1ErrorMatrixEvent" kindref="compound">ErrorMatrixThread::ErrorMatrixEvent</ref>*<sp/>errorMatrixEvent<sp/>=<sp/>(<ref refid="classErrorMatrixThread_1_1ErrorMatrixEvent" kindref="compound">ErrorMatrixThread::ErrorMatrixEvent</ref>*)<sp/>event;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>event<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classErrorMatrixThread" kindref="compound">ErrorMatrixThread</ref>*<sp/>errorMatrixThread<sp/>=<sp/>errorMatrixEvent-&gt;parentThread();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>probabilities<sp/>=<sp/>errorMatrixThread-&gt;<ref refid="classErrorMatrixThread_13b7618bab79ada20d430688fbd0f6009" kindref="member">getProbabilities</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>clusterList<sp/>=<sp/>errorMatrixThread-&gt;<ref refid="classErrorMatrixThread_126129dc8616bde1d36f8a013211d6015" kindref="member">getClusterList</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>computedClusterList<sp/>=<sp/>errorMatrixThread-&gt;<ref refid="classErrorMatrixThread_1308ff2068b632eaeb6ce4359f9d21e2a" kindref="member">getComputedClusterList</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>ignoreClusterIndex<sp/>=<sp/>errorMatrixThread-&gt;<ref refid="classErrorMatrixThread_1eb8ab08fab225e145b197ebd06ba78df" kindref="member">getIgnoreClusterIndex</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>to<sp/>be<sp/>sure<sp/>the<sp/>thread<sp/>has<sp/>return<sp/>from<sp/>his<sp/>run<sp/>method.<sp/>Even<sp/>if<sp/>the<sp/>send<sp/>of<sp/>the<sp/>event<sp/>is<sp/>the<sp/>last</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//action<sp/>of<sp/>the<sp/>run<sp/>method<sp/>it<sp/>seems<sp/>that<sp/>the<sp/>event<sp/>loop<sp/>can<sp/>be<sp/>pretty<sp/>fast<sp/>and<sp/>the<sp/>run<sp/>has<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//return<sp/>when<sp/>the<sp/>event<sp/>is<sp/>received<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!errorMatrixThread-&gt;wait()){};</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Delete<sp/>the<sp/>errorMatrixThread,<sp/>this<sp/>is<sp/>done<sp/>by<sp/>removing<sp/>it<sp/>from<sp/>threadsToBeKill<sp/>as<sp/>auto-deletion<sp/>is<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>threadsToBeKill.remove(errorMatrixThread);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!goingToDie){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Each<sp/>time<sp/>the<sp/>matrix<sp/>is<sp/>modified,<sp/>the<sp/>size<sp/>of<sp/>the<sp/>window<sp/>is<sp/>recalculated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>updateWindow();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>dataReady<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>setCursor(Qt::ArrowCursor);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>widget</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>update();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_195bbcba77f32f6253f9d70f989c4afdb" kindref="member">ErrorMatrixView::updateMatrixContents</ref>(){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!goingToDie){<sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>setCursor(Qt::WaitCursor);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="classErrorMatrixThread" kindref="compound">ErrorMatrixThread</ref>*<sp/>thread<sp/>=<sp/>computeMatrix();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>threadsToBeKill.append(thread);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Reset<sp/>the<sp/>information<sp/>used<sp/>to<sp/>show<sp/>that<sp/>the<sp/>matrix<sp/>is<sp/>not<sp/>up<sp/>to<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>modifiedClusterList.clear();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>selectedPairs.clear();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>hasBeenRenumbered<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>renumbering.clear();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>deletedMap.clear();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>nbActions<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>nbRedo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>nbPreviousUndo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>nbPreviousRedo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><ref refid="classErrorMatrixThread" kindref="compound">ErrorMatrixThread</ref>*<sp/>ErrorMatrixView::computeMatrix(){<sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>creation<sp/>of<sp/>a<sp/>thread<sp/>automatically<sp/>start<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixThread" kindref="compound">ErrorMatrixThread</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_196ee8dbf3a50f580d76f024c281f7a45" kindref="member">data</ref>());<sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ErrorMatrixView::updateWindow(){</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbOfClusters<sp/>=<sp/>clusterList.size();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/>widthBorder<sp/>=<sp/>(cellWidth<sp/>*<sp/>nbOfClusters)<sp/>/<sp/>30;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/>heightBorder<sp/>=<sp/>(cellWidth<sp/>*<sp/>nbOfClusters)<sp/>/<sp/>30;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/>abscissaMax<sp/>=<sp/>2<sp/>*<sp/>widthBorder<sp/>+<sp/>(cellWidth<sp/>*<sp/>nbOfClusters);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/>ordinateMin<sp/>=<sp/>-(2<sp/>*<sp/>heightBorder<sp/>+<sp/>(cellWidth<sp/>*<sp/>nbOfClusters));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><ref refid="classBaseFrame_15b9fe7f64b7737c193c4427a5ab8c271" kindref="member">window</ref><sp/>=<sp/><ref refid="classZoomWindow" kindref="compound">ZoomWindow</ref>(QRect(QPoint(abscissaMin,ordinateMin),QPoint(abscissaMax,ordinateMax)));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/></highlight><highlight class="comment">//update<sp/>the<sp/>drawing<sp/>mode<sp/>if<sp/>needed<sp/>(if<sp/>UPDATE,<sp/>no<sp/>change<sp/>is<sp/>need<sp/>it).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>REFRESH)<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW<sp/>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_149882967374ab5a4731805f0025248e8" kindref="member">ErrorMatrixView::drawContents</ref>(QPainter*<sp/>p){</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>==<sp/>REDRAW){</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>QRect<sp/>contentsRec<sp/>=<sp/>contentsRect();<sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>viewport<sp/>=<sp/>QRect(contentsRec.left()<sp/>+<sp/>15,contentsRec.top(),contentsRec.width()<sp/>-<sp/>15,contentsRec.height()<sp/>-<sp/>15);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Resize<sp/>the<sp/>double<sp/>buffer<sp/>with<sp/>the<sp/>width<sp/>and<sp/>the<sp/>height<sp/>of<sp/>the<sp/>widget(QFrame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>.resize(contentsRec.width(),contentsRec.height());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Create<sp/>a<sp/>painter<sp/>to<sp/>paint<sp/>on<sp/>the<sp/>double<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>QPainter<sp/>painter;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>painter.begin(&amp;<ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>window<sp/>(part<sp/>of<sp/>the<sp/>world<sp/>I<sp/>want<sp/>to<sp/>show)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>QRect<sp/>r((QRect)<ref refid="classBaseFrame_15b9fe7f64b7737c193c4427a5ab8c271" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>painter.setWindow(r.left(),r.top(),r.width()-1,r.height()-1);</highlight><highlight class="comment">//hack<sp/>because<sp/>Qt<sp/>QRect<sp/>is<sp/>used<sp/>differently<sp/>in<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>viewport<sp/>(part<sp/>of<sp/>the<sp/>device<sp/>I<sp/>want<sp/>to<sp/>write<sp/>on).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//By<sp/>default,<sp/>the<sp/>viewport<sp/>is<sp/>the<sp/>same<sp/>as<sp/>the<sp/>device&apos;s<sp/>rectangle<sp/>(contentsRec),<sp/>taking<sp/>a<sp/>smaller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//one<sp/>will<sp/>ensure<sp/>that<sp/>the<sp/>legends<sp/>(cluster<sp/>ids)<sp/>will<sp/>not<sp/>ovelap<sp/>a<sp/>correlogram.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>painter.setViewport(viewport);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Fill<sp/>the<sp/>double<sp/>buffer<sp/>with<sp/>the<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>.fill(backgroundColor());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Paint<sp/>the<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataReady)drawMatrix(painter);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataReady<sp/>&amp;&amp;<sp/>init){</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Allowed<sp/>to<sp/>detect<sp/>where<sp/>the<sp/>mouse<sp/>is<sp/>in<sp/>order<sp/>to<sp/>write<sp/>the<sp/>corresponding<sp/>probability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//in<sp/>the<sp/>status<sp/>bar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>setMouseTracking(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>init<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//reset<sp/>transformation<sp/>due<sp/>to<sp/>setWindow<sp/>and<sp/>setViewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>painter.resetXForm()<sp/>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>cluster<sp/>Ids<sp/>along<sp/>the<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>drawClusterIds(painter);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Closes<sp/>the<sp/>painter<sp/>on<sp/>the<sp/>double<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>painter.end();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Back<sp/>to<sp/>the<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REFRESH;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/></highlight><highlight class="comment">//if<sp/>drawContentsMode<sp/>==<sp/>REFRESH,<sp/>we<sp/>reuse<sp/>the<sp/>double<sp/>buffer<sp/>(pixmap)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>double<sp/>buffer<sp/>(pixmap)<sp/>by<sp/>copying<sp/>it<sp/>into<sp/>the<sp/>paint<sp/>device.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/>p-&gt;drawPixmap(0,<sp/>0,<sp/><ref refid="classViewWidget_1091c72490041f8e45689b1dc4d693d5e" kindref="member">doublebuffer</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ErrorMatrixView::drawClusterIds(QPainter&amp;<sp/>painter){</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/>QFont<sp/>f(</highlight><highlight class="stringliteral">&quot;Helvetica&quot;</highlight><highlight class="normal">,8);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/>painter.setFont(f);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/>painter.setPen(<ref refid="classBaseFrame_146ae781de9307957e8a1eb0a5f5a64c6" kindref="member">colorLegend</ref>);<sp/></highlight><highlight class="comment">//set<sp/>the<sp/>color<sp/>for<sp/>the<sp/>legends.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>absciss<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>abscissa<sp/>of<sp/>the<sp/>legend<sp/>for<sp/>the<sp/>current<sp/>matrix<sp/>cell.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/>uint<sp/>X<sp/>=<sp/>abscissaMin<sp/>+<sp/>widthBorder<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/></highlight><highlight class="comment">//The<sp/>ordinate<sp/>of<sp/>the<sp/>legend<sp/>for<sp/>the<sp/>current<sp/>matrix<sp/>cell.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/>uint<sp/>Y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>clusterList.begin();<sp/>iterator<sp/>!=<sp/>clusterList.end();<sp/>++iterator){</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//the<sp/>abscissa<sp/>is<sp/>increase<sp/>by<sp/>the<sp/>font<sp/>size<sp/>to<sp/>adjust<sp/>for<sp/>conversion<sp/>from<sp/>world<sp/>coordinates<sp/>to<sp/>viewport<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>QRect<sp/>r(<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(X,-Y).x()<sp/>+<sp/>15,<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(X,-Y).y()<sp/>+<sp/>2,<ref refid="classBaseFrame_1f7ebfc8274c67f570b5051977cefe9b2" kindref="member">worldToViewportWidth</ref>(cellWidth),12);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>painter.drawText(r,Qt::AlignHCenter,QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(*iterator));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>X<sp/>+=<sp/>cellWidth;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>ordinate<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/>X<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/>Y<sp/>=<sp/>heightBorder<sp/>+<sp/>clusterList.size()<sp/>*<sp/>cellWidth<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>clusterList.begin();<sp/>iterator<sp/>!=<sp/>clusterList.end();<sp/>++iterator){</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>QRect<sp/>r(<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(X,-Y).x(),<ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">worldToViewport</ref>(X,-Y).y(),15,<ref refid="classBaseFrame_1af257590f63f103f946f599add211cd5" kindref="member">worldToViewportHeight</ref>(cellWidth));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>painter.drawText(r,Qt::AlignCenter,QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(*iterator));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>Y<sp/>-=<sp/>cellWidth;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ErrorMatrixView::drawMatrix(QPainter&amp;<sp/>painter){</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(modifiedClusterList.size()<sp/>&gt;<sp/>0<sp/>||<sp/>hasBeenRenumbered<sp/>||<sp/>isNotUpToDate){</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>a<sp/>red<sp/>rectangle<sp/>around<sp/>the<sp/>matrix<sp/>to<sp/>warn<sp/>the<sp/>user<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>matrix<sp/>is<sp/>not<sp/>up<sp/>to<sp/>date<sp/>anymore.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/>QPen<sp/>pen(red,4,SolidLine);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>painter.setPen(pen);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/>painter.drawRect(abscissaMin<sp/>+<sp/>widthBorder<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ordinateMin<sp/>+<sp/>heightBorder<sp/>-<sp/>2,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(clusterList.size()<sp/>*<sp/>cellWidth)<sp/>+<sp/>4,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(clusterList.size()<sp/>*<sp/>cellWidth)<sp/><sp/>+<sp/>5);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/>painter.setPen(black);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>abscissaMin<sp/>+<sp/>widthBorder;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>ordinateMin<sp/>+<sp/>heightBorder;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbClusters<sp/>=<sp/>clusterList.size();<sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clusterIndex<sp/>=<sp/>1;<sp/>clusterIndex<sp/>&lt;=<sp/>nbClusters;<sp/>++clusterIndex){</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clusterIndex2<sp/>=<sp/>1;<sp/>clusterIndex2<sp/>&lt;=<sp/>nbClusters;<sp/>++clusterIndex2){<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((clusterIndex<sp/>==<sp/>clusterIndex2)<sp/>||<sp/>ignoreClusterIndex.contains(clusterIndex)<sp/>||<sp/>ignoreClusterIndex.contains(clusterIndex2)){</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.setBrush(black);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.drawRect(x,y,cellWidth<sp/>+<sp/>1,cellWidth<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>probability<sp/>=<sp/>(*probabilities)(clusterIndex,clusterIndex2);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>probColorIndex<sp/>=<sp/>static_cast&lt;int&gt;(probability<sp/>*<sp/>nbColors<sp/>/<sp/>cutoffProbability);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(probColorIndex<sp/>&gt;=<sp/>nbColors)<sp/>probColorIndex<sp/>=<sp/>nbColors<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.setBrush(colorMap[probColorIndex]);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>painter.drawRect(x,y,cellWidth<sp/>+<sp/>1,cellWidth<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>cellWidth;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>abscissaMin<sp/>+<sp/>widthBorder;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>y<sp/>+=<sp/>cellWidth;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ErrorMatrixView::initializeColorMap(){</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;i&lt;nbColors;i++){</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>QColor<sp/>color;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>static_cast&lt;int&gt;(359<sp/>*<sp/>0.7<sp/>*<sp/>(1<sp/>-<sp/>static_cast&lt;float&gt;(i)<sp/>/<sp/>nbColors));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>color.setHsv(x,255,255);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>colorMap.insert(i,color);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_18638881f0a749ff652986be3065b1e3d" kindref="member">ErrorMatrixView::mouseMoveEvent</ref>(QMouseEvent*<sp/>e){</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Write<sp/>the<sp/>current<sp/>probability<sp/>in<sp/>the<sp/>statusbar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>QPoint<sp/>current<sp/>=<sp/><ref refid="classBaseFrame_11d2cf80aab1a6867fd30f61cb53f4dc5" kindref="member">viewportToWorld</ref>(e-&gt;x()<sp/>-<sp/>15,e-&gt;y());</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>abscissaMin<sp/>+<sp/>widthBorder;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>ordinateMin<sp/>+<sp/>heightBorder;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cluster1Index<sp/>=<sp/>static_cast&lt;int&gt;((current.x()<sp/>-<sp/>x)<sp/>/<sp/>cellWidth);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cluster2Index<sp/>=<sp/>static_cast&lt;int&gt;((current.y()<sp/>-<sp/>y)<sp/>/<sp/>cellWidth);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexMax<sp/>=<sp/>clusterList.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((cluster1Index<sp/>&gt;<sp/>-1)<sp/>&amp;&amp;<sp/>(cluster1Index<sp/>&lt;=<sp/>indexMax)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(cluster2Index<sp/>&gt;<sp/>-1)<sp/>&amp;&amp;<sp/>(cluster2Index<sp/>&lt;=<sp/>indexMax)){</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>statusBar-&gt;changeItem(</highlight><highlight class="stringliteral">&quot;Clusters<sp/>(&quot;</highlight><highlight class="normal"><sp/>+<sp/>QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(clusterList[cluster2Index])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg(clusterList[cluster1Index])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;):<sp/>p<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString(</highlight><highlight class="stringliteral">&quot;%1&quot;</highlight><highlight class="normal">).arg((*probabilities)(cluster2Index<sp/>+<sp/>1,cluster1Index<sp/>+<sp/>1)),1);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_1aaaa6d453f04fba350ee12b41c2f445d" kindref="member">ErrorMatrixView::mouseReleaseEvent</ref>(QMouseEvent*<sp/>e){</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/></highlight><highlight class="comment">//Select<sp/>the<sp/>clusters<sp/>corresponding<sp/>to<sp/>the<sp/>current<sp/>cell<sp/>of<sp/>the<sp/>matrix<sp/>(if<sp/>they<sp/>still<sp/>exist)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/>QPoint<sp/>current<sp/>=<sp/><ref refid="classBaseFrame_11d2cf80aab1a6867fd30f61cb53f4dc5" kindref="member">viewportToWorld</ref>(e-&gt;x()<sp/>-15,e-&gt;y());</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>abscissaMin<sp/>+<sp/>widthBorder;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>ordinateMin<sp/>+<sp/>heightBorder;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cluster1Index<sp/>=<sp/>static_cast&lt;int&gt;((current.x()<sp/>-<sp/>x)<sp/>/<sp/>cellWidth);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cluster2Index<sp/>=<sp/>static_cast&lt;int&gt;((current.y()<sp/>-<sp/>y)<sp/>/<sp/>cellWidth);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cluster1<sp/>=<sp/>clusterList[cluster1Index];</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cluster2<sp/>=<sp/>clusterList[cluster2Index];</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><ref refid="classPair" kindref="compound">Pair</ref><sp/>pair(cluster1,cluster2);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/>QValueList&lt;int&gt;<sp/>clustersToShow;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/>QValueList&lt;int&gt;<sp/>previousSelectedClusters;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/>QValueList&lt;dataType&gt;<sp/>existingClusters<sp/>=<sp/><ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_196ee8dbf3a50f580d76f024c281f7a45" kindref="member">data</ref>().<ref refid="classData_1279ec9099627b78207e2bb5300c133ec" kindref="member">clusterIds</ref>();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/></highlight><highlight class="comment">//Check<sp/>if<sp/>the<sp/>clusters<sp/>still<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(existingClusters.contains(static_cast&lt;dataType&gt;(cluster1))){</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>clustersToShow.append(cluster1);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>previousSelectedClusters.append(cluster1);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>pair.setX(-1);<sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(existingClusters.contains(static_cast&lt;dataType&gt;(cluster2))){</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>clustersToShow.append(cluster2);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>previousSelectedClusters.append(cluster2);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>pair.setY(-1);<sp/><sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>user<sp/>control<sp/>click<sp/>a<sp/>second<sp/>time<sp/>on<sp/>a<sp/>cell<sp/>of<sp/>the<sp/>matrix<sp/>this<sp/>will<sp/>deselect<sp/>the<sp/>corresponding<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((e-&gt;state()<sp/>&amp;<sp/>Qt::ControlButton)<sp/>&amp;&amp;<sp/>selectedPairs.contains(pair)){<sp/><sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>selectedPairs.remove(pair);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>clustersToShow.clear();</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>QValueList&lt;Pair&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>selectedPairs.begin();<sp/>iterator<sp/>!=<sp/>selectedPairs.end();<sp/>++iterator){</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstCluster<sp/>=<sp/>static_cast&lt;Pair&gt;(*iterator).getX();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secondCluster<sp/>=<sp/>static_cast&lt;Pair&gt;(*iterator).getY();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(firstCluster<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>existingClusters.contains(static_cast&lt;dataType&gt;(firstCluster))){</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>clustersToShow.append(firstCluster);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>previousSelectedClusters.append(firstCluster);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(secondCluster<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>existingClusters.contains(static_cast&lt;dataType&gt;(secondCluster))){</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>clustersToShow.append(secondCluster);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>previousSelectedClusters.append(secondCluster);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_1c67031ece1a596aa7573e287775c5a90" kindref="member">shownClustersUpdate</ref>(clustersToShow,previousSelectedClusters);<sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/>}<sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(e-&gt;state()<sp/>&amp;<sp/>Qt::ControlButton){</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Store<sp/>the<sp/>selected<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/>selectedPairs.append(pair);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_11d81e60eb44470fe77719494837d1047" kindref="member">addClustersToActiveView</ref>(clustersToShow);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/>selectedPairs.clear();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Store<sp/>the<sp/>selected<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/>selectedPairs.append(pair);<sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><ref refid="classViewWidget_1b8bdf22293e76d9a143fb84488d52fc4" kindref="member">doc</ref>.<ref refid="classKlustersDoc_1c67031ece1a596aa7573e287775c5a90" kindref="member">shownClustersUpdate</ref>(clustersToShow);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_1be3e01992541a5adc96bbc6dbd54dbd1" kindref="member">ErrorMatrixView::clustersGrouped</ref>(QValueList&lt;int&gt;&amp;<sp/>groupedClusters,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newClusterId){</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;<sp/>deletedList;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Store<sp/>all<sp/>the<sp/>grouped<sp/>clusters,<sp/>used<sp/>in<sp/>the<sp/>error<sp/>matrix,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//in<sp/>the<sp/>modifiedClusterList<sp/>and<sp/>ask<sp/>to<sp/>redraw<sp/>the<sp/>error<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//in<sp/>order<sp/>to<sp/>signal<sp/>to<sp/>the<sp/>user<sp/>that<sp/>the<sp/>error<sp/>matrix<sp/>in<sp/>no<sp/>more<sp/>up<sp/>to<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>groupedClusters.begin();<sp/>iterator<sp/>!=<sp/>groupedClusters.end();<sp/>++iterator)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clusterList.contains(*iterator)){</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>modifiedClusterList.append(*iterator);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>deletedList.append(*iterator);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>deletedMap.insert(newClusterId,deletedList);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>nbActions++;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_1b2b1bd0d12fa78b9d24438fd683ec58d" kindref="member">ErrorMatrixView::clustersDeleted</ref>(QValueList&lt;int&gt;&amp;<sp/>deletedClusters,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destinationCluster){<sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;<sp/>deletedList;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Store<sp/>all<sp/>the<sp/>deletedClusters<sp/>clusters,<sp/>used<sp/>in<sp/>the<sp/>error<sp/>matrix,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//in<sp/>the<sp/>modifiedClusterList<sp/>and<sp/>ask<sp/>to<sp/>redraw<sp/>the<sp/>error<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//in<sp/>order<sp/>to<sp/>signal<sp/>to<sp/>the<sp/>user<sp/>that<sp/>the<sp/>error<sp/>matrix<sp/>in<sp/>no<sp/>more<sp/>up<sp/>to<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>deletedClusters.begin();<sp/>iterator<sp/>!=<sp/>deletedClusters.end();<sp/>++iterator)</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clusterList.contains(*iterator)){</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>modifiedClusterList.append(*iterator);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>deletedList.append(*iterator);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>deletedMap.insert(destinationCluster,deletedList);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>nbActions++;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_18f3ec2d125523a383b2a744c970a001f" kindref="member">ErrorMatrixView::removeSpikesFromClusters</ref>(QValueList&lt;int&gt;&amp;<sp/>fromClusters,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destinationClusterId,QValueList&lt;int&gt;&amp;<sp/>emptiedClusters){</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>fromClusters.begin();<sp/>iterator<sp/>!=<sp/>fromClusters.end();<sp/>++iterator)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clusterList.contains(*iterator)){</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>modifiedClusterList.append(*iterator);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;<sp/>deletedList;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>emptiedClusters.begin();<sp/>iterator<sp/>!=<sp/>emptiedClusters.end();<sp/>++iterator)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clusterList.contains(*iterator)){</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>modifiedClusterList.append(*iterator);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>deletedList.append(*iterator);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>deletedMap.insert(destinationClusterId,deletedList);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>nbActions++;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_1200d21282cb7cbd54d6e841bc1271e32" kindref="member">ErrorMatrixView::newClusterAdded</ref>(QValueList&lt;int&gt;&amp;<sp/>fromClusters,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clusterId,QValueList&lt;int&gt;&amp;<sp/>emptiedClusters){</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>fromClusters.begin();<sp/>iterator<sp/>!=<sp/>fromClusters.end();<sp/>++iterator)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clusterList.contains(*iterator)){</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>modifiedClusterList.append(*iterator);<sp/></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;<sp/>deletedList;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>emptiedClusters.begin();<sp/>iterator<sp/>!=<sp/>emptiedClusters.end();<sp/>++iterator)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clusterList.contains(*iterator)){</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>modifiedClusterList.append(*iterator);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>deletedList.append(*iterator);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>deletedMap.insert(clusterId,deletedList);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>nbActions++;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_124c27c88a90d54981101097e4f60462a" kindref="member">ErrorMatrixView::newClustersAdded</ref>(QMap&lt;int,int&gt;&amp;<sp/>fromToNewClusterIds,QValueList&lt;int&gt;&amp;<sp/>emptiedClusters){</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;<sp/>fromClusters<sp/>=<sp/>fromToNewClusterIds.keys();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Store<sp/>all<sp/>the<sp/>clusters<sp/>from<sp/>where<sp/>spikes<sp/>have<sp/>been<sp/>taken,<sp/>used<sp/>in<sp/>the<sp/>error<sp/>matrix,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//in<sp/>the<sp/>modifiedClusterList<sp/>and<sp/>ask<sp/>to<sp/>redraw<sp/>the<sp/>error<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//in<sp/>order<sp/>to<sp/>signal<sp/>to<sp/>the<sp/>user<sp/>that<sp/>the<sp/>error<sp/>matrix<sp/>in<sp/>no<sp/>more<sp/>up<sp/>to<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>fromClusters.begin();<sp/>iterator<sp/>!=<sp/>fromClusters.end();<sp/>++iterator)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clusterList.contains(*iterator)){</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>modifiedClusterList.append(*iterator);<sp/><sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>nbActions++;<sp/></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_124c27c88a90d54981101097e4f60462a" kindref="member">ErrorMatrixView::newClustersAdded</ref>(QValueList&lt;int&gt;&amp;<sp/>clustersToRecluster){</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/></highlight><highlight class="comment">//Store<sp/>all<sp/>the<sp/>automatically<sp/>reclustered<sp/>clusters,<sp/>used<sp/>in<sp/>the<sp/>error<sp/>matrix,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/></highlight><highlight class="comment">//in<sp/>the<sp/>modifiedClusterList<sp/>and<sp/>ask<sp/>to<sp/>redraw<sp/>the<sp/>error<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/></highlight><highlight class="comment">//in<sp/>order<sp/>to<sp/>signal<sp/>to<sp/>the<sp/>user<sp/>that<sp/>the<sp/>error<sp/>matrix<sp/>in<sp/>no<sp/>more<sp/>up<sp/>to<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>clustersToRecluster.begin();<sp/>iterator<sp/>!=<sp/>clustersToRecluster.end();<sp/>++iterator)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clusterList.contains(*iterator)){</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>modifiedClusterList.append(*iterator);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/>nbActions++;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;<sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_12f84c47e90fd2d6725a292521768631c" kindref="member">ErrorMatrixView::renumber</ref>(QMap&lt;int,int&gt;&amp;<sp/>clusterIdsOldNew){</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>hasBeenRenumbered<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>nbActions++;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>renumbering.insert(nbActions,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_169b1ae818a8104a13154ea79529c6ad9" kindref="member">ErrorMatrixView::undoRenumbering</ref>(QMap&lt;int,int&gt;&amp;<sp/>clusterIdsNewOld){</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbActions<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/>renumbering.remove(nbActions);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(renumbering.isEmpty())<sp/>hasBeenRenumbered<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/>nbActions--;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/>nbRedo++;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbActions<sp/>==<sp/>0)<sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousUndo<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>nbPreviousRedo++;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousUndo<sp/>==<sp/>1){</highlight><highlight class="comment">//There<sp/>was<sp/>a<sp/>redo<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>nbPreviousUndo--;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="comment">//nbPreviousUndo<sp/>&gt;1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>nbPreviousUndo--;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>nbPreviousRedo++;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_1b5450c1a803893d54a708771ec9b600c" kindref="member">ErrorMatrixView::undoAdditionModification</ref>(QValueList&lt;int&gt;&amp;<sp/>addedClusters,QValueList&lt;int&gt;&amp;<sp/>updatedClusters){</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbActions<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>nbActions--;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>nbRedo++;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>updatedClusters.begin();<sp/>iterator<sp/>!=<sp/>updatedClusters.end();<sp/>++iterator){</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(modifiedClusterList.contains(*iterator)){</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>modifiedClusterList.remove(*iterator);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(deletedMap.contains(*iterator)){</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QValueList&lt;int&gt;<sp/>deletedList<sp/>=<sp/>deletedMap[*iterator];</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator2;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator2<sp/>=<sp/>deletedList.begin();<sp/>iterator2<sp/>!=<sp/>deletedList.end();<sp/>++iterator2)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>modifiedClusterList.remove(*iterator2);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousUndo<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/>nbPreviousRedo++;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousUndo<sp/>==<sp/>1){</highlight><highlight class="comment">//There<sp/>was<sp/>a<sp/>redo<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/>nbPreviousUndo--;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="comment">//nbPreviousUndo<sp/>&gt;1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/>nbPreviousUndo--;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/>nbPreviousRedo++;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_16e0559b8888f3e0e2c3353b9cf28ec95" kindref="member">ErrorMatrixView::undoAddition</ref>(QValueList&lt;int&gt;&amp;<sp/>addedClusters){</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbActions<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>nbActions--;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>nbRedo++;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>addedClusters.begin();<sp/>iterator<sp/>!=<sp/>addedClusters.end();<sp/>++iterator){</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(deletedMap.contains(*iterator)){</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QValueList&lt;int&gt;<sp/>deletedList<sp/>=<sp/>deletedMap[*iterator];</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator2;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator2<sp/>=<sp/>deletedList.begin();<sp/>iterator2<sp/>!=<sp/>deletedList.end();<sp/>++iterator2)</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>modifiedClusterList.remove(*iterator2);<sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousUndo<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/>nbPreviousRedo++;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousUndo<sp/>==<sp/>1){</highlight><highlight class="comment">//There<sp/>was<sp/>a<sp/>redo<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/>nbPreviousUndo--;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="comment">//nbPreviousUndo<sp/>&gt;1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/>nbPreviousUndo--;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/>nbPreviousRedo++;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_13ed3cac1cb79ffba02d9a4c9c75f34b9" kindref="member">ErrorMatrixView::undoModification</ref>(QValueList&lt;int&gt;&amp;<sp/>updatedClusters){</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbActions<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>nbActions--;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>nbRedo++;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>updatedClusters.begin();<sp/>iterator<sp/>!=<sp/>updatedClusters.end();<sp/>++iterator){</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(modifiedClusterList.contains(*iterator)){</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>modifiedClusterList.remove(*iterator);<sp/></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(deletedMap.contains(*iterator)){</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>QValueList&lt;int&gt;<sp/>deletedList<sp/>=<sp/>deletedMap[*iterator];</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator2;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator2<sp/>=<sp/>deletedList.begin();<sp/>iterator2<sp/>!=<sp/>deletedList.end();<sp/>++iterator2){</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>modifiedClusterList.remove(*iterator2);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousUndo<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/>nbPreviousRedo++;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousUndo<sp/>==<sp/>1){</highlight><highlight class="comment">//There<sp/>was<sp/>a<sp/>redo<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/>nbPreviousUndo--;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight><highlight class="comment">//nbPreviousUndo<sp/>&gt;1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/>nbPreviousUndo--;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/>nbPreviousRedo++;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_13207f1a1d5724f6869aa10e641ed2fe4" kindref="member">ErrorMatrixView::redoRenumbering</ref>(QMap&lt;int,int&gt;&amp;<sp/>clusterIdsOldNew){</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousRedo<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>nbPreviousRedo--;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbPreviousRedo<sp/>&gt;<sp/>1){</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>nbPreviousRedo--;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>nbPreviousUndo++;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbActions<sp/>&gt;<sp/>0<sp/>||<sp/>(nbActions<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>nbRedo<sp/>&gt;<sp/>0)){</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>nbActions++;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>nbRedo--;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>renumbering.insert(nbActions,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>hasBeenRenumbered<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousRedo<sp/>==<sp/>0){</highlight><highlight class="comment">//there<sp/>was<sp/>no<sp/>previous<sp/>undo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/>nbPreviousUndo++;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_15d7b4bbb266d3af918c912d0ee37b7c6" kindref="member">ErrorMatrixView::redoAdditionModification</ref>(QValueList&lt;int&gt;&amp;<sp/>addedClusters,QValueList&lt;int&gt;&amp;<sp/>modifiedClusters,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isModifiedByDeletion,QValueList&lt;int&gt;&amp;<sp/>deletedClusters){</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousRedo<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>nbPreviousRedo--;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbPreviousRedo<sp/>&gt;<sp/>1){</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>nbPreviousRedo--;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>nbPreviousUndo++;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbActions<sp/>&gt;<sp/>0<sp/>||<sp/>(nbActions<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>nbRedo<sp/>&gt;<sp/>0)){</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>nbActions++;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>nbRedo--;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>modifiedClusters.begin();<sp/>iterator<sp/>!=<sp/>modifiedClusters.end();<sp/>++iterator)</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clusterList.contains(*iterator)){</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>modifiedClusterList.append(*iterator);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>deletedClusters.begin();<sp/>iterator<sp/>!=<sp/>deletedClusters.end();<sp/>++iterator)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clusterList.contains(*iterator)){</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>modifiedClusterList.append(*iterator);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousRedo<sp/>==<sp/>0){</highlight><highlight class="comment">//there<sp/>was<sp/>no<sp/>previous<sp/>undo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/>nbPreviousUndo++;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_1817a9cbb4b65621f7613f1d034e24be0" kindref="member">ErrorMatrixView::redoAddition</ref>(QValueList&lt;int&gt;&amp;<sp/>addedClusters,QValueList&lt;int&gt;&amp;<sp/>deletedClusters){</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousRedo<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/>nbPreviousRedo--;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbPreviousRedo<sp/>&gt;<sp/>1){</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/>nbPreviousRedo--;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>nbPreviousUndo++;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbActions<sp/>&gt;<sp/>0<sp/>||<sp/>(nbActions<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>nbRedo<sp/>&gt;<sp/>0)){</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>nbActions++;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>nbRedo--;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>deletedClusters.begin();<sp/>iterator<sp/>!=<sp/>deletedClusters.end();<sp/>++iterator)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clusterList.contains(*iterator)){</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>modifiedClusterList.append(*iterator);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousRedo<sp/>==<sp/>0){</highlight><highlight class="comment">//there<sp/>was<sp/>no<sp/>previous<sp/>undo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/>nbPreviousUndo++;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_16a89bb07d7a1314431956527e9359931" kindref="member">ErrorMatrixView::redoModification</ref>(QValueList&lt;int&gt;&amp;<sp/>updatedClusters,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isModifiedByDeletion,QValueList&lt;int&gt;&amp;<sp/>deletedClusters){</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousRedo<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>nbPreviousRedo--;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbPreviousRedo<sp/>&gt;<sp/>1){</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>nbPreviousRedo--;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>nbPreviousUndo++;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbActions<sp/>&gt;<sp/>0<sp/>||<sp/>(nbActions<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>nbRedo<sp/>&gt;<sp/>0)){</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>nbActions++;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>nbRedo--;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>updatedClusters.begin();<sp/>iterator<sp/>!=<sp/>updatedClusters.end();<sp/>++iterator)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(modifiedClusterList.contains(*iterator))<sp/>modifiedClusterList.remove(*iterator);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clusterList.contains(*iterator)){</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>modifiedClusterList.append(*iterator);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>deletedClusters.begin();<sp/>iterator<sp/>!=<sp/>deletedClusters.end();<sp/>++iterator)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clusterList.contains(*iterator)){</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>modifiedClusterList.append(*iterator);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousRedo<sp/>==<sp/>0){</highlight><highlight class="comment">//there<sp/>was<sp/>no<sp/>previous<sp/>undo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/>nbPreviousUndo++;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/>}<sp/></highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_14bbf5248d4b4999c40359c9d1d5d3571" kindref="member">ErrorMatrixView::redoDeletion</ref>(QValueList&lt;int&gt;&amp;<sp/>deletedClusters){</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousRedo<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>nbPreviousRedo--;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbPreviousRedo<sp/>&gt;<sp/>1){</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>nbPreviousRedo--;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>nbPreviousUndo++;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbActions<sp/>&gt;<sp/>0<sp/>||<sp/>(nbActions<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>nbRedo<sp/>&gt;<sp/>0)){</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>nbActions++;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/>nbRedo--;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>QValueList&lt;int&gt;::iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iterator<sp/>=<sp/>deletedClusters.begin();<sp/>iterator<sp/>!=<sp/>deletedClusters.end();<sp/>++iterator)</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(clusterList.contains(*iterator)){</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>modifiedClusterList.append(*iterator);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nbPreviousRedo<sp/>==<sp/>0){</highlight><highlight class="comment">//there<sp/>was<sp/>no<sp/>previous<sp/>undo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/>isNotUpToDate<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/>nbPreviousUndo++;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_1be7fdec65331be47d4bfca91637cc256" kindref="member">ErrorMatrixView::willBeKilled</ref>(){</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!goingToDie){</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>goingToDie<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//inform<sp/>the<sp/>running<sp/>threads<sp/>to<sp/>stop<sp/>processing<sp/>as<sp/>soon<sp/>as<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="classErrorMatrixThread" kindref="compound">ErrorMatrixThread</ref>*<sp/>errorMatrixThread<sp/>=<sp/>threadsToBeKill.first();<sp/>errorMatrixThread;<sp/>errorMatrixThread<sp/>=<sp/>threadsToBeKill.next())</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/>errorMatrixThread-&gt;<ref refid="classErrorMatrixThread_15a0dc607bc355fd64ad76b0f62d46e98" kindref="member">stopProcessing</ref>();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classErrorMatrixView_138a7990d11741fb42db186e607dcb386" kindref="member">ErrorMatrixView::print</ref>(QPainter&amp;<sp/>printPainter,QPaintDeviceMetrics&amp;<sp/>metrics,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>whiteBackground){</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>double<sp/>buffer<sp/>(pixmap)<sp/>by<sp/>copying<sp/>it<sp/>into<sp/>the<sp/>printer<sp/>device<sp/>throught<sp/>the<sp/>painter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>QRect<sp/>viewportOld<sp/>=<sp/>QRect(viewport.left(),viewport.top(),viewport.width(),viewport.height());</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>left<sp/>margin<sp/>is<sp/>not<sp/>visible<sp/>(the<sp/>user<sp/>zoomed<sp/>without<sp/>taking<sp/>it<sp/>in<sp/>his<sp/>selection),<sp/>the<sp/>viewport<sp/>and<sp/>the<sp/>printer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//have<sp/>the<sp/>same<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/>QRect<sp/>r((QRect)<ref refid="classBaseFrame_15b9fe7f64b7737c193c4427a5ab8c271" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>viewport<sp/>=<sp/>QRect(printPainter.viewport().left()<sp/>+<sp/>15,printPainter.viewport().top(),printPainter.viewport().width()<sp/>-<sp/>15,printPainter.viewport().height()-15);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>window<sp/>(part<sp/>of<sp/>the<sp/>world<sp/>I<sp/>want<sp/>to<sp/>show)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/>printPainter.setWindow(r.left(),r.top(),r.width()-1,r.height()-1);</highlight><highlight class="comment">//hack<sp/>because<sp/>Qt<sp/>QRect<sp/>is<sp/>used<sp/>differently<sp/>in<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>viewport<sp/>(part<sp/>of<sp/>the<sp/>device<sp/>I<sp/>want<sp/>to<sp/>write<sp/>on).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//By<sp/>default,<sp/>the<sp/>viewport<sp/>is<sp/>the<sp/>same<sp/>as<sp/>the<sp/>device&apos;s<sp/>rectangle<sp/>(contentsRec),<sp/>taking<sp/>a<sp/>smaller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//one<sp/>will<sp/>ensure<sp/>that<sp/>the<sp/>legends<sp/>(cluster<sp/>ids)<sp/>will<sp/>not<sp/>ovelap<sp/>a<sp/>correlogram.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/>printPainter.setViewport(viewport);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Fill<sp/>the<sp/>background<sp/>with<sp/>the<sp/>background<sp/>color<sp/>and<sp/>ensure<sp/>we<sp/>draw<sp/>the<sp/>same<sp/>portion<sp/>of<sp/>the<sp/>world<sp/>than<sp/>on<sp/>the<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>QRect<sp/>back<sp/>=<sp/>QRect(r.left(),r.top(),r.width(),r.height());</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>heightRatio<sp/>=<sp/>(static_cast&lt;float&gt;(back.height())/static_cast&lt;float&gt;(metrics.height()));</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>back.setBottom(r.top()<sp/>+<sp/>r.height()<sp/>-<sp/>1<sp/>+<sp/>static_cast&lt;long&gt;(15<sp/>*<sp/>heightRatio));</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>widthRatio<sp/>=<sp/>(static_cast&lt;float&gt;(back.width())/static_cast&lt;float&gt;(metrics.width()));</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r.left()<sp/>==<sp/>0)<sp/>back.setLeft(r.left()<sp/>-<sp/>static_cast&lt;long&gt;(15<sp/>*<sp/>widthRatio));</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>QColor<sp/>colorLegendTmp<sp/>=<sp/><ref refid="classBaseFrame_146ae781de9307957e8a1eb0a5f5a64c6" kindref="member">colorLegend</ref>;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>QColor<sp/>background=<sp/>backgroundColor();</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(whiteBackground){</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><ref refid="classBaseFrame_146ae781de9307957e8a1eb0a5f5a64c6" kindref="member">colorLegend</ref><sp/>=<sp/>black;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/>setPaletteBackgroundColor(white);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/>printPainter.fillRect(back,backgroundColor());</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>printPainter.setClipRect(back,QPainter::CoordPainter);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Paint<sp/>the<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/>drawMatrix(printPainter);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//reset<sp/>transformation<sp/>due<sp/>to<sp/>setWindow<sp/>and<sp/>setViewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>printPainter.resetXForm();</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Draw<sp/>the<sp/>cluster<sp/>Ids<sp/>along<sp/>the<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>drawClusterIds(printPainter);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>printPainter.setClipping(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Restore<sp/>the<sp/>colors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(whiteBackground){</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><ref refid="classBaseFrame_146ae781de9307957e8a1eb0a5f5a64c6" kindref="member">colorLegend</ref><sp/>=<sp/>colorLegendTmp;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/>setPaletteBackgroundColor(background);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Restore<sp/>the<sp/>previous<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>viewport<sp/>=<sp/>QRect(viewportOld.left(),viewportOld.top(),viewportOld.width(),viewportOld.height());</highlight></codeline>
<codeline lineno="864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/lynn/CMBN/Klusters/klusters/src/errormatrixview.cpp"/>
  </compounddef>
</doxygen>
