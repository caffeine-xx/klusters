<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.1">
  <compounddef id="baseframe_8cpp" kind="file">
    <compoundname>baseframe.cpp</compoundname>
    <includes refid="baseframe_8h" local="yes">baseframe.h</includes>
    <includes local="no">qpaintdevice.h</includes>
    <includes local="no">qpainter.h</includes>
    <includes local="no">qstyle.h</includes>
    <includes local="no">kiconloader.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="118">
        <label>baseframe.h</label>
        <link refid="baseframe_8h-source"/>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>zoomwindow.h</label>
        <link refid="zoomwindow_8h-source"/>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>kiconloader.h</label>
      </node>
      <node id="123">
        <label>qrect.h</label>
      </node>
      <node id="120">
        <label>qframe.h</label>
      </node>
      <node id="124">
        <label>qpoint.h</label>
      </node>
      <node id="127">
        <label>qpaintdevice.h</label>
      </node>
      <node id="121">
        <label>qcursor.h</label>
      </node>
      <node id="128">
        <label>qpainter.h</label>
      </node>
      <node id="125">
        <label>math.h</label>
      </node>
      <node id="119">
        <label>qwidget.h</label>
      </node>
      <node id="126">
        <label>iostream</label>
      </node>
      <node id="117">
        <label>baseframe.cpp</label>
        <link refid="baseframe.cpp"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>qstyle.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseframe.cpp<sp/><sp/>-<sp/><sp/>description</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>begin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Wed<sp/>Feb<sp/>18<sp/>2004</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>copyright<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(C)<sp/>2004<sp/>by<sp/>Lynn<sp/>Hazan</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>email<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>lynn.hazan@myrealbox.com</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//include<sp/>files<sp/>for<sp/>the<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;baseframe.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>files<sp/>for<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qpaintdevice.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qpainter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qstyle.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>files<sp/>for<sp/>kde</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kiconloader.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//include<sp/>files<sp/>for<sp/>c/c++<sp/>libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//General<sp/>C++<sp/>include<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="classBaseFrame_1042d27fb77a59e37912653348f9883f3" kindref="member">BaseFrame:: BaseFrame</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Xborder,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Yborder,QWidget*<sp/>parent,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,QColor<sp/>backgroundColor,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minSize,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSize<sp/>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowTopLeft<sp/>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowBottomRight,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>border):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QFrame(parent,name,WRepaintNoErase|WResizeNoErase),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIN_SIZE(minSize),MAX_SIZE(maxSize),BORDER(border),WINDOW_TOP_LEFT(windowTopLeft),WINDOW_BOTTOM_RIGHT(windowBottomRight),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport(QRect()),window<sp/>(QRect(QPoint(0,-WINDOW_TOP_LEFT),QPoint(WINDOW_BOTTOM_RIGHT,0))),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstClick(0,0),isDoubleClick(false),rubber(0),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>drawContentsMode(REDRAW),Xborder(Xborder),Yborder(Yborder),isRubberBandToBeDrawn(false),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wholeHeightRectangle(false){</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Setting<sp/>of<sp/>the<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>setLineWidth<sp/>(BORDER);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>setPaletteBackgroundColor(backgroundColor);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>setFrameStyle(QFrame::Box|QFrame::Plain);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>backgroundColor.hsv(&amp;h,&amp;s,&amp;v);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((s<sp/>&lt;=<sp/>80<sp/>&amp;&amp;<sp/>v<sp/>&gt;=<sp/>240)<sp/>||<sp/>(s<sp/>&lt;=<sp/>40<sp/>&amp;&amp;<sp/>v<sp/>&gt;=<sp/>220))<sp/>colorLegend<sp/>=<sp/>black;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>colorLegend<sp/>=<sp/>white;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>minimum<sp/>size<sp/>to<sp/>ensure<sp/>that<sp/>the<sp/>frame<sp/>rectangle<sp/>may<sp/>never<sp/>be<sp/>null<sp/>or<sp/>invalid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>setMinimumSize(static_cast&lt;int&gt;(MIN_SIZE*1.05)<sp/><sp/>+<sp/>2<sp/>*<sp/>BORDER,MIN_SIZE<sp/><sp/>+<sp/>2<sp/>*<sp/>BORDER);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>setMaximumSize(MAX_SIZE<sp/>+<sp/>2<sp/>*<sp/>BORDER,MAX_SIZE<sp/>+<sp/>2<sp/>*<sp/>BORDER);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Create<sp/>and<sp/>set<sp/>the<sp/>zoom<sp/>cursor<sp/>(a<sp/>magnifier).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>KIconLoader<sp/>*loader<sp/>=<sp/>KGlobal::iconLoader();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>zoomCursor<sp/>=<sp/>QCursor(loader-&gt;loadIcon(</highlight><highlight class="stringliteral">&quot;zoom_cursor&quot;</highlight><highlight class="normal">,<sp/>KIcon::User),7,7);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">BaseFrame::~BaseFrame(){</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BaseFrame::changeBackgroundColor(QColor<sp/>color){</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>setPaletteBackgroundColor(color);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>color.hsv(&amp;h,&amp;s,&amp;v);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s<sp/>&lt;=<sp/>80<sp/>&amp;&amp;<sp/>v<sp/>&gt;=<sp/>240<sp/>||<sp/>(s<sp/>&lt;=<sp/>40<sp/>&amp;&amp;<sp/>v<sp/>&gt;=<sp/>220))<sp/><ref refid="classBaseFrame_146ae781de9307957e8a1eb0a5f5a64c6" kindref="member">colorLegend</ref><sp/>=<sp/>black;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="classBaseFrame_146ae781de9307957e8a1eb0a5f5a64c6" kindref="member">colorLegend</ref><sp/>=<sp/>white;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classBaseFrame_1154d190f81125058199ed6770c5152b6" kindref="member">BaseFrame::mousePressEvent</ref>(QMouseEvent*<sp/>e){</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref><sp/>==<sp/>ZOOM<sp/>||<sp/><ref refid="classBaseFrame_1fc0aaeb9c105479f46868dc9d4b01a6e" kindref="member">isRubberBandToBeDrawn</ref>){</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Test<sp/>if<sp/>a<sp/>selected<sp/>rectangle<sp/>exist,<sp/>if<sp/>so<sp/>draw<sp/>it<sp/>and<sp/>delete<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_13af90d61c65b68208c68adb5dd895549" kindref="member">rubber</ref>){</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classBaseFrame_1c1183e155932c92026c2e8e9553905ea" kindref="member">drawRubber</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rubber;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rubber<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(e-&gt;button()<sp/>==<sp/>QMouseEvent::LeftButton){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Assign<sp/>firstClick</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect<sp/>r((QRect)<ref refid="classBaseFrame_15b9fe7f64b7737c193c4427a5ab8c271" kindref="member">window</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r.left()<sp/>!=<sp/>0)<sp/><ref refid="classBaseFrame_12aa532f84a5f6f97c2fe4b51c0a51ce1" kindref="member">firstClick</ref><sp/>=<sp/><ref refid="classBaseFrame_11d2cf80aab1a6867fd30f61cb53f4dc5" kindref="member">viewportToWorld</ref>(e-&gt;x(),e-&gt;y()<sp/>-<sp/>Yborder);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="classBaseFrame_12aa532f84a5f6f97c2fe4b51c0a51ce1" kindref="member">firstClick</ref><sp/>=<sp/><ref refid="classBaseFrame_11d2cf80aab1a6867fd30f61cb53f4dc5" kindref="member">viewportToWorld</ref>(e-&gt;x()<sp/>-<sp/>Xborder,e-&gt;y()<sp/>-<sp/>Yborder);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Construct<sp/>the<sp/>rubber<sp/>starting<sp/>on<sp/>the<sp/>selected<sp/>point<sp/>(width<sp/>=<sp/>1<sp/>and<sp/>not<sp/>0<sp/>because<sp/>bottomRight<sp/>=<sp/>left+width-1,<sp/>same<sp/>trick<sp/>for<sp/>height<sp/>;0))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//or<sp/>using<sp/>only<sp/>the<sp/>abscissa<sp/>and<sp/>the<sp/>ordinate<sp/>if<sp/>the<sp/>top<sp/>of<sp/>the<sp/>window<sp/>if<sp/>the<sp/>rubber<sp/>band<sp/>has<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//drawn<sp/>on<sp/>whole<sp/>the<sp/>height<sp/>of<sp/>the<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1fc0aaeb9c105479f46868dc9d4b01a6e" kindref="member">isRubberBandToBeDrawn</ref><sp/>&amp;&amp;<sp/><ref refid="classBaseFrame_1b96c798f9995cdf917d56ebda2fdfd3e" kindref="member">wholeHeightRectangle</ref>)<sp/>rubber<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QRect(<ref refid="classBaseFrame_12aa532f84a5f6f97c2fe4b51c0a51ce1" kindref="member">firstClick</ref>.x(),r.top(),1,1);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>rubber<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QRect(<ref refid="classBaseFrame_12aa532f84a5f6f97c2fe4b51c0a51ce1" kindref="member">firstClick</ref>.x(),<ref refid="classBaseFrame_12aa532f84a5f6f97c2fe4b51c0a51ce1" kindref="member">firstClick</ref>.y(),1,1);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classBaseFrame_17b6086bb37e3ad0c56a8b8eb166b3d9e" kindref="member">BaseFrame::mouseReleaseEvent</ref>(QMouseEvent*<sp/>e){</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/></highlight><highlight class="comment">//We<sp/>do<sp/>not<sp/>consider<sp/>the<sp/>other<sp/>button<sp/>events<sp/>but<sp/>we<sp/>consider<sp/>key<sp/>press</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(e-&gt;button()<sp/>&amp;<sp/>QMouseEvent::LeftButton){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isZoomed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1fc0aaeb9c105479f46868dc9d4b01a6e" kindref="member">isRubberBandToBeDrawn</ref>){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Test<sp/>if<sp/>a<sp/>selected<sp/>rectangle<sp/>exist,<sp/>if<sp/>so<sp/>draw<sp/>it<sp/>and<sp/>delete<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rubber){</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classBaseFrame_1c1183e155932c92026c2e8e9553905ea" kindref="member">drawRubber</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rubber;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>rubber<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref><sp/>==<sp/>ZOOM){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>double<sp/>click,<sp/>only<sp/>update<sp/>isDoubleClick,<sp/>action<sp/>has<sp/>been<sp/>taken<sp/>in<sp/>mouseDoubleClickEvent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_1c9c373aa1730932c563bc99779dc600f" kindref="member">isDoubleClick</ref>){</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isDoubleClick<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Test<sp/>if<sp/>a<sp/>selected<sp/>rectangle<sp/>exist,<sp/>if<sp/>so<sp/>draw<sp/>it<sp/>and<sp/>delete<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rubber){</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classBaseFrame_1c1183e155932c92026c2e8e9553905ea" kindref="member">drawRubber</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>rubber;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>rubber<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Calculate<sp/>the<sp/>selected<sp/>point<sp/>in<sp/>world<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>QPoint<sp/>secondClick;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>QRect<sp/>r((QRect)window);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r.left()<sp/>!=<sp/>0)<sp/>secondClick<sp/>=<sp/><ref refid="classBaseFrame_11d2cf80aab1a6867fd30f61cb53f4dc5" kindref="member">viewportToWorld</ref>(e-&gt;x(),e-&gt;y()<sp/>-<sp/>Yborder);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>secondClick<sp/>=<sp/><ref refid="classBaseFrame_11d2cf80aab1a6867fd30f61cb53f4dc5" kindref="member">viewportToWorld</ref>(e-&gt;x()<sp/>-<sp/>Xborder,e-&gt;y()<sp/>-<sp/>Yborder);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>distance<sp/>between<sp/>the<sp/>first<sp/>and<sp/>second<sp/>selected<sp/>points<sp/>are<sp/>&gt;<sp/>5:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>user<sp/>wanted<sp/>to<sp/>draw<sp/>a<sp/>rectangle<sp/>otherwise<sp/>he<sp/>intended<sp/>to<sp/>select<sp/>a<sp/>single<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((abs(secondClick.x()<sp/>-<sp/><ref refid="classBaseFrame_12aa532f84a5f6f97c2fe4b51c0a51ce1" kindref="member">firstClick</ref>.x())<sp/>&gt;<sp/>5)<sp/>||<sp/>(abs(secondClick.y()<sp/>-<sp/><ref refid="classBaseFrame_12aa532f84a5f6f97c2fe4b51c0a51ce1" kindref="member">firstClick</ref>.y())<sp/>&gt;<sp/>5)){</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CAUTION<sp/>this<sp/>correction<sp/>is<sp/>intended<sp/>to<sp/>compensate<sp/>for<sp/>a<sp/>selection<sp/>in<sp/>the<sp/>left<sp/>margin<sp/>which<sp/>is<sp/>not<sp/>part<sp/>of<sp/>the<sp/>widget&apos;window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>widget<sp/>contains<sp/>a<sp/>left<sp/>margin<sp/>and<sp/>draws<sp/>in<sp/>the<sp/>negative<sp/>abscisses<sp/>this<sp/>correction<sp/>will<sp/>not<sp/>work.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_12aa532f84a5f6f97c2fe4b51c0a51ce1" kindref="member">firstClick</ref>.x()<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>Xborder<sp/>&gt;<sp/>0)<sp/><ref refid="classBaseFrame_12aa532f84a5f6f97c2fe4b51c0a51ce1" kindref="member">firstClick</ref>.setX(0);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(secondClick.x()<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>Xborder<sp/>&gt;<sp/>0)<sp/>secondClick.setX(0);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>isZoomed<sp/>=<sp/>window.zoom(<ref refid="classBaseFrame_12aa532f84a5f6f97c2fe4b51c0a51ce1" kindref="member">firstClick</ref>,<sp/>secondClick);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>factor;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Shrink<sp/>asked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(e-&gt;state()<sp/>&amp;<sp/>Qt::ShiftButton)<sp/>factor<sp/>=<sp/>static_cast&lt;float&gt;(0.5);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Enlarge<sp/>asked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>factor<sp/>=<sp/>static_cast&lt;float&gt;(2);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//modify<sp/>the<sp/>window<sp/>rectangle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>isZoomed<sp/>=<sp/>window.zoom(factor,<sp/>secondClick);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isZoomed){</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>update();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classBaseFrame_1e0bc9fac62c249065e52f3d393e84cf7" kindref="member">BaseFrame::mouseMoveEvent</ref>(QMouseEvent*<sp/>e){</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//We<sp/>do<sp/>not<sp/>consider<sp/>the<sp/>other<sp/>button<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(e-&gt;state()<sp/>==<sp/>Qt::LeftButton){</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Test<sp/>if<sp/>a<sp/>selected<sp/>rectangle<sp/>exist,<sp/>if<sp/>so<sp/>draw<sp/>to<sp/>erase<sp/>the<sp/>previous<sp/>one,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//update<sp/>it<sp/>and<sp/>draw<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rubber){</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QPoint<sp/>current;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>QRect<sp/>r((QRect)window);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(r.left()<sp/>!=<sp/>0)<sp/>current<sp/>=<sp/><ref refid="classBaseFrame_11d2cf80aab1a6867fd30f61cb53f4dc5" kindref="member">viewportToWorld</ref>(e-&gt;x(),e-&gt;y()<sp/>-<sp/>Yborder);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>current<sp/>=<sp/><ref refid="classBaseFrame_11d2cf80aab1a6867fd30f61cb53f4dc5" kindref="member">viewportToWorld</ref>(e-&gt;x()-<sp/>Xborder,e-&gt;y()<sp/>-<sp/>Yborder);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(current<sp/>==<sp/>rubber-&gt;bottomRight())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//did<sp/>not<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classBaseFrame_1c1183e155932c92026c2e8e9553905ea" kindref="member">drawRubber</ref>();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>rubber-&gt;setRight(current.x());</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>ordinate<sp/>is<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>window<sp/>if<sp/>the<sp/>rubber<sp/>band<sp/>has<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//drawn<sp/>on<sp/>whole<sp/>the<sp/>height<sp/>of<sp/>the<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isRubberBandToBeDrawn<sp/>&amp;&amp;<sp/><ref refid="classBaseFrame_1b96c798f9995cdf917d56ebda2fdfd3e" kindref="member">wholeHeightRectangle</ref>)<sp/>rubber-&gt;setBottom(r.bottom());<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>rubber-&gt;setBottom(current.y());</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classBaseFrame_1c1183e155932c92026c2e8e9553905ea" kindref="member">drawRubber</ref>();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classBaseFrame_161ed8b87d4046aa64b74855f200b4e1b" kindref="member">BaseFrame::mouseDoubleClickEvent</ref>(QMouseEvent*<sp/>e){</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classBaseFrame_13bac911fa71469ffae97a2cc1d7c5ac8" kindref="member">mode</ref><sp/>==<sp/>ZOOM){</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((e-&gt;button()<sp/>==<sp/>QMouseEvent::LeftButton)<sp/>&amp;&amp;<sp/>!(e-&gt;state()<sp/>&amp;<sp/>Qt::ShiftButton)){</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Reset<sp/>to<sp/>the<sp/>initial<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>window.reset();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>update();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>boolean<sp/>so<sp/>in<sp/>mouserelease<sp/>we<sp/>know<sp/>that<sp/>we<sp/>do<sp/>not<sp/>have<sp/>to<sp/>zoom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>isDoubleClick<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classBaseFrame_1327a39135fa2ee76c5366c6277310c63" kindref="member">BaseFrame::resizeEvent</ref>(QResizeEvent*<sp/>e){</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="classBaseFrame_1dda2f5f4c168321c208349db2e7b5ed9" kindref="member">drawContentsMode</ref><sp/>=<sp/>REDRAW;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">QPoint<sp/><ref refid="classBaseFrame_11d2cf80aab1a6867fd30f61cb53f4dc5" kindref="member">BaseFrame::viewportToWorld</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vy){</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Coordinates<sp/>in<sp/>the<sp/>viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>viewportX<sp/>=<sp/>vx;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>viewportY<sp/>=<sp/>vy;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Coordinates<sp/>in<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>windowX;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>windowY;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Coordinates<sp/>in<sp/>the<sp/>world</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>worldX;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>worldY;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>coordinates<sp/>of<sp/>a<sp/>point<sp/>take<sp/>the<sp/>frame<sp/>width<sp/>into<sp/>account<sp/>so<sp/>we<sp/>have<sp/>to<sp/>substract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//it<sp/>from<sp/>the<sp/>coordinates<sp/>to<sp/>have<sp/>the<sp/>position<sp/>inside<sp/>the<sp/>viewport<sp/>(viewport:<sp/>rectangle<sp/>inside<sp/>the<sp/>frame).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>viewportX<sp/>-=<sp/>frameWidth();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>viewportY<sp/>-=<sp/>frameWidth();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//We<sp/>have<sp/>to<sp/>translate<sp/>the<sp/>viewport&apos;s<sp/>coordinates<sp/>to<sp/>window&apos;s<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//NB:<sp/>the<sp/>window<sp/>is<sp/>the<sp/>part<sp/>of<sp/>the<sp/>world<sp/>which<sp/>is<sp/>drawn<sp/>in<sp/>the<sp/>viewport.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>transformation<sp/>is<sp/>done<sp/>by<sp/>using<sp/>the<sp/>following<sp/>formula:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//windowX<sp/>=<sp/>viewportX<sp/>*<sp/>(windowWidth/viewportWidth)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//windowY<sp/>=<sp/>viewportY<sp/>*<sp/>(windowHeight/viewportHeight)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>windowX<sp/>=<sp/>viewportX<sp/>*<sp/>(static_cast&lt;float&gt;(((QRect)window).width())/static_cast&lt;float&gt;(viewport.width()));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>windowY<sp/>=<sp/>viewportY<sp/>*<sp/>(static_cast&lt;float&gt;(((QRect)window).height())/static_cast&lt;float&gt;(viewport.height()));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>final<sp/>step<sp/>is<sp/>to<sp/>translate<sp/>the<sp/>window&apos;s<sp/>coordinates<sp/>to<sp/>world&apos;s<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//For<sp/>that,<sp/>we<sp/>need<sp/>the<sp/>world&apos;s<sp/>coordinates<sp/>of<sp/>the<sp/>window<sp/>center<sp/>of<sp/>coordinates<sp/>(WindowCoordinatesCenter):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//WindowCoordinatesCenterX<sp/>=<sp/>((QRect)window).left()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//WindowCoordinatesCenterY<sp/>=<sp/>((QRect)window).top()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>transformation<sp/>is<sp/>done<sp/>by<sp/>using<sp/>the<sp/>following<sp/>formula:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//worldX<sp/>=<sp/>WindowCoordinatesCenterX<sp/>+<sp/>windowX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//worldY<sp/>=<sp/>WindowCoordinatesCenterY<sp/>+<sp/>windowY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>worldX<sp/>=<sp/>((QRect)window).left()<sp/>+<sp/>windowX;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>worldY<sp/>=<sp/>((QRect)window).top()<sp/>+<sp/>windowY;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPoint(static_cast&lt;int&gt;(worldX),static_cast&lt;int&gt;(worldY));</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">QPoint<sp/><ref refid="classBaseFrame_12b50027b15770de7f37b59917152c69b" kindref="member">BaseFrame::worldToViewport</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wy){</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Coordinates<sp/>in<sp/>the<sp/>viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>viewportX;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>viewportY;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Coordinates<sp/>in<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>windowX;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>windowY;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Coordinates<sp/>in<sp/>the<sp/>world</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>worldX<sp/>=<sp/>wx;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>worldY<sp/>=<sp/>wy;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//We<sp/>have<sp/>to<sp/>translate<sp/>the<sp/>world&apos;s<sp/>coordinates<sp/>to<sp/>window&apos;s<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//For<sp/>that,<sp/>we<sp/>need<sp/>the<sp/>world&apos;s<sp/>coordinates<sp/>of<sp/>the<sp/>window<sp/>center<sp/>of<sp/>coordinates<sp/>(WindowCoordinatesCenter):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//WindowCoordinatesCenterX<sp/>=<sp/>((QRect)window).left()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//WindowCoordinatesCenterY<sp/>=<sp/>((QRect)window).top()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>transformation<sp/>is<sp/>done<sp/>by<sp/>using<sp/>the<sp/>following<sp/>formula:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//windowX<sp/>=<sp/>worldX<sp/>-<sp/>WindowCoordinatesCenterX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//windowY<sp/>=<sp/>worldY<sp/>-<sp/>WindowCoordinatesCenterY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>windowX<sp/>=<sp/>worldX<sp/>-<sp/>((QRect)window).left();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>windowY<sp/>=<sp/>worldY<sp/>-<sp/>((QRect)window).top();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//We<sp/>have<sp/>now<sp/>to<sp/>translate<sp/>the<sp/>window&apos;s<sp/>coordinates<sp/>to<sp/>viewport&apos;s<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//NB:<sp/>the<sp/>window<sp/>is<sp/>the<sp/>part<sp/>of<sp/>the<sp/>world<sp/>which<sp/>is<sp/>drawn<sp/>in<sp/>the<sp/>viewport.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>transformation<sp/>is<sp/>done<sp/>by<sp/>using<sp/>the<sp/>following<sp/>formula:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//viewportX<sp/>=<sp/>windowX<sp/>*<sp/>(viewportWidth/windowWidth)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//viewportY<sp/>=<sp/>windowY<sp/>*<sp/>(viewportHeight/windowHeight)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>viewportX<sp/>=<sp/>windowX<sp/>*<sp/>(static_cast&lt;float&gt;(viewport.width())/static_cast&lt;float&gt;(((QRect)window).width()));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>viewportY<sp/>=<sp/>windowY<sp/>*<sp/>(static_cast&lt;float&gt;(viewport.height())/static_cast&lt;float&gt;(((QRect)window).height()));</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>coordinates<sp/>of<sp/>a<sp/>point<sp/>take<sp/>the<sp/>frame<sp/>width<sp/>into<sp/>account<sp/>so<sp/>we<sp/>have<sp/>to<sp/>substract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//it<sp/>from<sp/>the<sp/>coordinates<sp/>to<sp/>have<sp/>the<sp/>position<sp/>inside<sp/>the<sp/>viewport<sp/>(viewport:<sp/>rectangle<sp/>inside<sp/>the<sp/>frame).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>viewportX<sp/>+=<sp/>frameWidth();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>viewportY<sp/>+=<sp/>frameWidth();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QPoint(static_cast&lt;int&gt;(viewportX),static_cast&lt;int&gt;(viewportY));</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classBaseFrame_1282acf96cb3e2cf1889da54236d1623e" kindref="member">BaseFrame::worldToViewportAbscissa</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>wx){</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Coordinate<sp/>in<sp/>the<sp/>viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>viewportX;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Coordinate<sp/>in<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>windowX;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Coordinate<sp/>in<sp/>the<sp/>world</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>worldX<sp/>=<sp/>wx;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//We<sp/>have<sp/>to<sp/>translate<sp/>the<sp/>world&apos;s<sp/>coordinate<sp/>to<sp/>window&apos;s<sp/>coordinate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//For<sp/>that,<sp/>we<sp/>need<sp/>the<sp/>world&apos;s<sp/>coordinates<sp/>of<sp/>the<sp/>window<sp/>center<sp/>of<sp/>coordinates<sp/>(WindowCoordinatesCenter):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//WindowCoordinatesCenterX<sp/>=<sp/>((QRect)window).left()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>transformation<sp/>is<sp/>done<sp/>by<sp/>using<sp/>the<sp/>following<sp/>formula:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//windowX<sp/>=<sp/>worldX<sp/>-<sp/>WindowCoordinatesCenterX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>windowX<sp/>=<sp/>worldX<sp/>-<sp/>((QRect)window).left();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//We<sp/>have<sp/>now<sp/>to<sp/>translate<sp/>the<sp/>window&apos;s<sp/>coordinate<sp/>to<sp/>viewport&apos;s<sp/>coordinate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//NB:<sp/>the<sp/>window<sp/>is<sp/>the<sp/>part<sp/>of<sp/>the<sp/>world<sp/>which<sp/>is<sp/>drawn<sp/>in<sp/>the<sp/>viewport.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>transformation<sp/>is<sp/>done<sp/>by<sp/>using<sp/>the<sp/>following<sp/>formula:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//viewportX<sp/>=<sp/>windowX<sp/>*<sp/>(viewportWidth/windowWidth)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>viewportX<sp/>=<sp/>windowX<sp/>*<sp/>(static_cast&lt;float&gt;(viewport.width())/static_cast&lt;float&gt;(((QRect)window).width()));</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>coordinates<sp/>of<sp/>a<sp/>point<sp/>take<sp/>the<sp/>frame<sp/>width<sp/>into<sp/>account<sp/>so<sp/>we<sp/>have<sp/>to<sp/>substract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//it<sp/>from<sp/>the<sp/>coordinates<sp/>to<sp/>have<sp/>the<sp/>position<sp/>inside<sp/>the<sp/>viewport<sp/>(viewport:<sp/>rectangle<sp/>inside<sp/>the<sp/>frame).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>viewportX<sp/>+=<sp/>frameWidth();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static_cast&lt;long&gt;(viewportX);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classBaseFrame_1a66187fbc3b1a9978f7604a17a04071b" kindref="member">BaseFrame::worldToViewportOrdinate</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>wy){</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Coordinate<sp/>in<sp/>the<sp/>viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>viewportY;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Coordinate<sp/>in<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>windowY;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Coordinate<sp/>in<sp/>the<sp/>world</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>worldY<sp/>=<sp/>wy;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//We<sp/>have<sp/>to<sp/>translate<sp/>the<sp/>world&apos;s<sp/>coordinate<sp/>to<sp/>window&apos;s<sp/>coordinate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//For<sp/>that,<sp/>we<sp/>need<sp/>the<sp/>world&apos;s<sp/>coordinates<sp/>of<sp/>the<sp/>window<sp/>center<sp/>of<sp/>coordinates<sp/>(WindowCoordinatesCenter):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//WindowCoordinatesCenterY<sp/>=<sp/>((QRect)window).top()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>transformation<sp/>is<sp/>done<sp/>by<sp/>using<sp/>the<sp/>following<sp/>formula:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//windowY<sp/>=<sp/>worldY<sp/>-<sp/>WindowCoordinatesCenterY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>windowY<sp/>=<sp/>worldY<sp/>-<sp/>((QRect)window).top();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//We<sp/>have<sp/>now<sp/>to<sp/>translate<sp/>the<sp/>window&apos;s<sp/>coordinate<sp/>to<sp/>viewport&apos;s<sp/>coordinate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//NB:<sp/>the<sp/>window<sp/>is<sp/>the<sp/>part<sp/>of<sp/>the<sp/>world<sp/>which<sp/>is<sp/>drawn<sp/>in<sp/>the<sp/>viewport.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>transformation<sp/>is<sp/>done<sp/>by<sp/>using<sp/>the<sp/>following<sp/>formula:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//viewportY<sp/>=<sp/>windowY<sp/>*<sp/>(viewportHeight/windowHeight)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>viewportY<sp/>=<sp/>windowY<sp/>*<sp/>(static_cast&lt;float&gt;(viewport.height())/static_cast&lt;float&gt;(((QRect)window).height()));</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//The<sp/>coordinates<sp/>of<sp/>a<sp/>point<sp/>take<sp/>the<sp/>frame<sp/>width<sp/>into<sp/>account<sp/>so<sp/>we<sp/>have<sp/>to<sp/>substract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//it<sp/>from<sp/>the<sp/>coordinates<sp/>to<sp/>have<sp/>the<sp/>position<sp/>inside<sp/>the<sp/>viewport<sp/>(viewport:<sp/>rectangle<sp/>inside<sp/>the<sp/>frame).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>viewportY<sp/>+=<sp/>frameWidth();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static_cast&lt;long&gt;(viewportY);</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classBaseFrame_1c1183e155932c92026c2e8e9553905ea" kindref="member">BaseFrame::drawRubber</ref>(){</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!rubber)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>QPainter<sp/>painter;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.begin(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>window<sp/>(part<sp/>of<sp/>the<sp/>word<sp/>I<sp/>want<sp/>to<sp/>show)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>QRect<sp/>r((QRect)window);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.setWindow(r.left(),r.top(),r.width()-1,r.height()-1);</highlight><highlight class="comment">//hack<sp/>because<sp/>Qt<sp/>QRect<sp/>is<sp/>used<sp/>differently<sp/>in<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.setViewport(viewport);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.setRasterOp(NotROP);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.setPen(QPen(color0,1));</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.setBrush(NoBrush);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>QRect<sp/>normalizeRubber<sp/>=<sp/>rubber-&gt;normalize();<sp/></highlight><highlight class="comment">//not<sp/>mandatory<sp/>as<sp/>it<sp/>seems<sp/>that<sp/>drawPrimitive<sp/>does<sp/>the<sp/>job<sp/>(but<sp/>more<sp/>secure)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>style().drawPrimitive(QStyle::PE_FocusRect,<sp/>&amp;painter,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect(normalizeRubber.x(),<sp/>normalizeRubber.y(),<sp/>normalizeRubber.width(),normalizeRubber.height()),</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colorGroup(),<sp/>QStyle::Style_Default,<sp/>colorGroup().background()<sp/>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>painter.end();</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/lynn/CMBN/Klusters/klusters/src/baseframe.cpp"/>
  </compounddef>
</doxygen>
