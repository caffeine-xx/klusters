<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.1">
  <compounddef id="klustersxmlreader_8cpp" kind="file">
    <compoundname>klustersxmlreader.cpp</compoundname>
    <includes refid="klustersxmlreader_8h" local="yes">klustersxmlreader.h</includes>
    <includes refid="tags_8h" local="yes">tags.h</includes>
    <includes refid="clusteruserinformation_8h" local="yes">clusteruserinformation.h</includes>
    <includes local="no">kurl.h</includes>
    <includes local="no">kio/netaccess.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">qfileinfo.h</includes>
    <includes local="no">qstring.h</includes>
    <incdepgraph>
      <node id="1811">
        <label>qfile.h</label>
      </node>
      <node id="1803">
        <label>klustersxmlreader.h</label>
        <link refid="klustersxmlreader_8h-source"/>
        <childnode refid="1804" relation="include">
        </childnode>
        <childnode refid="1805" relation="include">
        </childnode>
        <childnode refid="1806" relation="include">
        </childnode>
        <childnode refid="1807" relation="include">
        </childnode>
        <childnode refid="1808" relation="include">
        </childnode>
        <childnode refid="1809" relation="include">
        </childnode>
        <childnode refid="1810" relation="include">
        </childnode>
        <childnode refid="1811" relation="include">
        </childnode>
        <childnode refid="1812" relation="include">
        </childnode>
      </node>
      <node id="1810">
        <label>qvaluelist.h</label>
      </node>
      <node id="1814">
        <label>qstring.h</label>
      </node>
      <node id="1804">
        <label>stdlib.h</label>
      </node>
      <node id="1816">
        <label>kurl.h</label>
      </node>
      <node id="1807">
        <label>libxml/parser.h</label>
      </node>
      <node id="1813">
        <label>tags.h</label>
        <link refid="tags_8h-source"/>
        <childnode refid="1814" relation="include">
        </childnode>
      </node>
      <node id="1815">
        <label>clusteruserinformation.h</label>
        <link refid="clusteruserinformation_8h-source"/>
      </node>
      <node id="1802">
        <label>klustersxmlreader.cpp</label>
        <link refid="klustersxmlreader.cpp"/>
        <childnode refid="1803" relation="include">
        </childnode>
        <childnode refid="1813" relation="include">
        </childnode>
        <childnode refid="1815" relation="include">
        </childnode>
        <childnode refid="1816" relation="include">
        </childnode>
        <childnode refid="1817" relation="include">
        </childnode>
        <childnode refid="1818" relation="include">
        </childnode>
        <childnode refid="1819" relation="include">
        </childnode>
        <childnode refid="1814" relation="include">
        </childnode>
      </node>
      <node id="1818">
        <label>iostream</label>
      </node>
      <node id="1808">
        <label>libxml/xpath.h</label>
      </node>
      <node id="1819">
        <label>qfileinfo.h</label>
      </node>
      <node id="1806">
        <label>libxml/tree.h</label>
      </node>
      <node id="1809">
        <label>libxml/xpathInternals.h</label>
      </node>
      <node id="1817">
        <label>kio/netaccess.h</label>
      </node>
      <node id="1812">
        <label>qmap.h</label>
      </node>
      <node id="1805">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="">
      <memberdef kind="variable" id="klustersxmlreader_8cpp_1a91b2faa6c339a9880a6bec1e82b9cc2" prot="public" static="no" mutable="no">
        <type>QString</type>
        <definition>QString version</definition>
        <argsstring></argsstring>
        <name>version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/klustersxmlreader.cpp" line="35" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/main.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="">
      <memberdef kind="variable" id="klustersxmlreader_8cpp_1a91b2faa6c339a9880a6bec1e82b9cc2" prot="public" static="no" mutable="no">
        <type>QString</type>
        <definition>QString version</definition>
        <argsstring></argsstring>
        <name>version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lynn/CMBN/Klusters/klusters/src/klustersxmlreader.cpp" line="35" bodyfile="/home/lynn/CMBN/Klusters/klusters/src/main.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>klustersxmlreader.cpp<sp/><sp/>-<sp/><sp/>description</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>begin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Tue<sp/>Mar<sp/>2<sp/>2004</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>copyright<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(C)<sp/>2004<sp/>by<sp/>Lynn<sp/>Hazan</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>email<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>lynn.hazan.myrealbox.com</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//application<sp/>specific<sp/>include<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;klustersxmlreader.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;tags.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;clusteruserinformation.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>include<sp/>files<sp/>for<sp/>KDE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kurl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kio/netaccess.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//General<sp/>C++<sp/>include<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//include<sp/>files<sp/>for<sp/>QT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qfileinfo.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qstring.h&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">klusters;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>QString<sp/>version;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">KlustersXmlReader::KlustersXmlReader():readVersion(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal">KlustersXmlReader::~KlustersXmlReader(){</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classKlustersXmlReader_1f1c83d6e527cef2fd0cebf9f41ef426c" kindref="member">KlustersXmlReader::parseFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QFile&amp;<sp/>file,fileType<sp/>type){</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/>this-&gt;type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Init<sp/>libxml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/>xmlInitParser();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>XML<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/>doc<sp/>=<sp/>xmlParseFile(file.name());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(doc<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>xpath<sp/>evaluation<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/>xpathContex<sp/>=<sp/>xmlXPathNewContext(doc);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xpathContex==<sp/>NULL){</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>xmlFreeDoc(doc);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/></highlight><highlight class="comment">//Read<sp/>the<sp/>document<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/>xmlNodePtr<sp/>rootElement<sp/>=<sp/>xmlDocGetRootElement(doc);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/>xmlChar*<sp/>versionTag<sp/>=<sp/>xmlCharStrdup(VERSION);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rootElement<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>xmlChar*<sp/>sVersion<sp/>=<sp/>xmlGetProp(rootElement,versionTag);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sVersion<sp/>!=<sp/>NULL)<sp/>readVersion<sp/>=<sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sVersion);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>xmlFree(sVersion);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/>xmlFree(versionTag);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKlustersXmlReader_115badaa4c6ebd596d15dae903ce9ad0c" kindref="member">KlustersXmlReader::closeFile</ref>(){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/></highlight><highlight class="comment">//Cleanup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/>xmlXPathFreeContext(xpathContex);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/>xmlFreeDoc(doc);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/></highlight><highlight class="comment">//Shutdown<sp/>libxml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/>xmlCleanupParser();</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classKlustersXmlReader_1351a9934bb1599df22cf5e9532cb1e43" kindref="member">KlustersXmlReader::getResolution</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/>xmlXPathObjectPtr<sp/>result;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/>xmlChar*<sp/>searchPath<sp/>=<sp/>xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;//&quot;</highlight><highlight class="normal"><sp/>+<sp/>ACQUISITION<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>BITS);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/></highlight><highlight class="comment">//Evaluate<sp/>xpath<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/>result<sp/>=<sp/>xmlXPathEvalExpression(searchPath,xpathContex);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>xmlNodeSetPtr<sp/>nodeset<sp/>=<sp/>result-&gt;nodesetval;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!xmlXPathNodeSetIsEmpty(nodeset)){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Should<sp/>be<sp/>only<sp/>one<sp/>resolution<sp/>element,<sp/>so<sp/>take<sp/>the<sp/>first<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>xmlChar*<sp/>sResolution<sp/>=<sp/>xmlNodeListGetString(doc,nodeset-&gt;nodeTab[0]-&gt;children,<sp/>1);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>resolution<sp/>=<sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sResolution).toInt();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>xmlFree(sResolution);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/>xmlFree(searchPath);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/>xmlXPathFreeObject(result);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resolution;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classKlustersXmlReader_1a9ee5e74870a19a59ed6a06f29c94877" kindref="member">KlustersXmlReader::getNbChannels</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbChannels<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/>xmlXPathObjectPtr<sp/>result;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/>xmlChar*<sp/>searchPath<sp/>=<sp/>xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;//&quot;</highlight><highlight class="normal"><sp/>+<sp/>ACQUISITION<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>NB_CHANNELS);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/></highlight><highlight class="comment">//Evaluate<sp/>xpath<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/>result<sp/>=<sp/>xmlXPathEvalExpression(searchPath,xpathContex);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>xmlNodeSetPtr<sp/>nodeset<sp/>=<sp/>result-&gt;nodesetval;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!xmlXPathNodeSetIsEmpty(nodeset)){</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Should<sp/>be<sp/>only<sp/>one<sp/>nbChannels<sp/>element,<sp/>so<sp/>take<sp/>the<sp/>first<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>xmlChar*<sp/>sNbChannels<sp/>=<sp/>xmlNodeListGetString(doc,nodeset-&gt;nodeTab[0]-&gt;children,<sp/>1);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/>nbChannels<sp/>=<sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sNbChannels).toInt();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/>xmlFree(sNbChannels);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/>xmlFree(searchPath);<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/>xmlXPathFreeObject(result);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nbChannels;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">QValueList&lt;int&gt;<sp/><ref refid="classKlustersXmlReader_14c0121c8c32c72d0ba70b5c2c57f879b" kindref="member">KlustersXmlReader::getNbChannelsByGroup</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>electrodeGroupID)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/>QValueList&lt;int&gt;<sp/>channels;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/>xmlXPathObjectPtr<sp/>result;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/>xmlChar*<sp/>searchPath<sp/>=<sp/>xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;//&quot;</highlight><highlight class="normal"><sp/>+<sp/>SPIKE<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>CHANNEL_GROUPS<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>GROUP);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/></highlight><highlight class="comment">//Evaluate<sp/>xpath<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/>result<sp/>=<sp/>xmlXPathEvalExpression(searchPath,xpathContex);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>!=<sp/>NULL){<sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>xmlNodeSetPtr<sp/>nodeset<sp/>=<sp/>result-&gt;nodesetval;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!xmlXPathNodeSetIsEmpty(nodeset)){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>on<sp/>all<sp/>the<sp/>GROUP<sp/>until<sp/>reaching<sp/>the<sp/>electrodeGroupID<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbGroups<sp/>=<sp/>nodeset-&gt;nodeNr;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nbGroups;<sp/>++i){</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((i<sp/>+<sp/>1)<sp/>!=<sp/>electrodeGroupID)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlNodePtr<sp/>child;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(child<sp/>=<sp/>nodeset-&gt;nodeTab[i]-&gt;children;child<sp/>!=<sp/>NULL;child<sp/>=<sp/>child-&gt;next){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//skip<sp/>the<sp/>carriage<sp/>return<sp/>(text<sp/>node<sp/>named<sp/>text<sp/>and<sp/>containing<sp/>/n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(child-&gt;type<sp/>==<sp/>XML_TEXT_NODE)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)child-&gt;name)<sp/>==<sp/>CHANNELS){<sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Should<sp/>be<sp/>only<sp/>one<sp/>CHANNELS<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlNodePtr<sp/>channel;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(channel<sp/>=<sp/>child-&gt;children;channel<sp/>!=<sp/>NULL;channel<sp/>=<sp/>channel-&gt;next){</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//skip<sp/>the<sp/>carriage<sp/>return<sp/>(text<sp/>node<sp/>named<sp/>text<sp/>and<sp/>containing<sp/>/n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channel-&gt;type<sp/>==<sp/>XML_TEXT_NODE)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)channel-&gt;name)<sp/>==<sp/>CHANNEL){</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar*<sp/>sId<sp/>=<sp/>xmlNodeListGetString(doc,channel-&gt;children,<sp/>1);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channelId<sp/>=<sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sId).toInt();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFree(sId);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channels.append(channelId);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((i<sp/>+<sp/>1)<sp/>==<sp/>electrodeGroupID)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/>xmlFree(searchPath);<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/>xmlXPathFreeObject(result);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>channels;<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classKlustersXmlReader_151ee30050331b6b0f29a664333baa48d" kindref="member">KlustersXmlReader::getSamplingRate</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samplingRate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/>xmlXPathObjectPtr<sp/>result;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/>xmlChar*<sp/>searchPath<sp/>=<sp/>xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;//&quot;</highlight><highlight class="normal"><sp/>+<sp/>ACQUISITION<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>SAMPLING_RATE);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/></highlight><highlight class="comment">//Evaluate<sp/>xpath<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/>result<sp/>=<sp/>xmlXPathEvalExpression(searchPath,xpathContex);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>xmlNodeSetPtr<sp/>nodeset<sp/>=<sp/>result-&gt;nodesetval;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!xmlXPathNodeSetIsEmpty(nodeset)){</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Should<sp/>be<sp/>only<sp/>one<sp/>sampling<sp/>rate<sp/>element<sp/>at<sp/>that<sp/>level,<sp/>so<sp/>take<sp/>the<sp/>first<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/>xmlChar*<sp/>sSamplingRate<sp/>=<sp/>xmlNodeListGetString(doc,nodeset-&gt;nodeTab[0]-&gt;children,<sp/>1);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/>samplingRate<sp/>=<sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sSamplingRate).toInt();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/>xmlFree(sSamplingRate);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/>xmlFree(searchPath);<sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/>xmlXPathFreeObject(result);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>samplingRate;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classKlustersXmlReader_19b3fe8d2f53fa5cf2405e10eb323a4c6" kindref="member">KlustersXmlReader::getNbSamples</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>electrodeGroupID)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbSamples<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/>xmlXPathObjectPtr<sp/>result;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/>xmlChar*<sp/>searchPath<sp/>=<sp/>xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;//&quot;</highlight><highlight class="normal"><sp/>+<sp/>SPIKE<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>CHANNEL_GROUPS<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>GROUP);<sp/></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/></highlight><highlight class="comment">//Evaluate<sp/>xpath<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/>result<sp/>=<sp/>xmlXPathEvalExpression(searchPath,xpathContex);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>xmlNodeSetPtr<sp/>nodeset<sp/>=<sp/>result-&gt;nodesetval;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!xmlXPathNodeSetIsEmpty(nodeset)){</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>on<sp/>all<sp/>the<sp/>GROUP<sp/>until<sp/>reaching<sp/>the<sp/>electrodeGroupID<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbGroups<sp/>=<sp/>nodeset-&gt;nodeNr;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nbGroups;<sp/>++i){</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((i<sp/>+<sp/>1)<sp/>!=<sp/>electrodeGroupID)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlNodePtr<sp/>child;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(child<sp/>=<sp/>nodeset-&gt;nodeTab[i]-&gt;children;child<sp/>!=<sp/>NULL;child<sp/>=<sp/>child-&gt;next){</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//skip<sp/>the<sp/>carriage<sp/>return<sp/>(text<sp/>node<sp/>named<sp/>text<sp/>and<sp/>containing<sp/>/n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(child-&gt;type<sp/>==<sp/>XML_TEXT_NODE)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)child-&gt;name)<sp/>==<sp/>NB_SAMPLES){<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Should<sp/>be<sp/>only<sp/>one<sp/>nbSamples<sp/>element,<sp/>so<sp/>take<sp/>the<sp/>first<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar*<sp/>sNbSamples<sp/>=<sp/>xmlNodeListGetString(doc,child-&gt;children,<sp/>1);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nbSamples<sp/>=<sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sNbSamples).toInt();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFree(sNbSamples);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((i<sp/>+<sp/>1)<sp/>==<sp/>electrodeGroupID)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/>xmlFree(searchPath);<sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/>xmlXPathFreeObject(result);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nbSamples;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classKlustersXmlReader_17cd9ef6dcce948e7f92cd5b546ca2a94" kindref="member">KlustersXmlReader::getPeakSampleIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>electrodeGroupID)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/>xmlXPathObjectPtr<sp/>result;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/>xmlChar*<sp/>searchPath<sp/>=<sp/>xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;//&quot;</highlight><highlight class="normal"><sp/>+<sp/>SPIKE<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>CHANNEL_GROUPS<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>GROUP);<sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/></highlight><highlight class="comment">//Evaluate<sp/>xpath<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/>result<sp/>=<sp/>xmlXPathEvalExpression(searchPath,xpathContex);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>xmlNodeSetPtr<sp/>nodeset<sp/>=<sp/>result-&gt;nodesetval;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!xmlXPathNodeSetIsEmpty(nodeset)){</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>on<sp/>all<sp/>the<sp/>GROUP<sp/>until<sp/>reaching<sp/>the<sp/>electrodeGroupID<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbGroups<sp/>=<sp/>nodeset-&gt;nodeNr;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nbGroups;<sp/>++i){</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((i<sp/>+<sp/>1)<sp/>!=<sp/>electrodeGroupID)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlNodePtr<sp/>child;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(child<sp/>=<sp/>nodeset-&gt;nodeTab[i]-&gt;children;child<sp/>!=<sp/>NULL;child<sp/>=<sp/>child-&gt;next){</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//skip<sp/>the<sp/>carriage<sp/>return<sp/>(text<sp/>node<sp/>named<sp/>text<sp/>and<sp/>containing<sp/>/n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(child-&gt;type<sp/>==<sp/>XML_TEXT_NODE)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)child-&gt;name)<sp/>==<sp/>PEAK_SAMPLE_INDEX){<sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Should<sp/>be<sp/>only<sp/>one<sp/>index<sp/>element,<sp/>so<sp/>take<sp/>the<sp/>first<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar*<sp/>sindex<sp/>=<sp/>xmlNodeListGetString(doc,child-&gt;children,<sp/>1);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sindex).toInt();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFree(sindex);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((i<sp/>+<sp/>1)<sp/>==<sp/>electrodeGroupID)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/>xmlFree(searchPath);<sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/>xmlXPathFreeObject(result);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index;<sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classKlustersXmlReader_17efbc3776fabd83b126c6aa70652359f" kindref="member">KlustersXmlReader::getNbFeatures</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>electrodeGroupID)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbFeatures<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/>xmlXPathObjectPtr<sp/>result;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/>xmlChar*<sp/>searchPath<sp/>=<sp/>xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;//&quot;</highlight><highlight class="normal"><sp/>+<sp/>SPIKE<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>CHANNEL_GROUPS<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>GROUP);<sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/></highlight><highlight class="comment">//Evaluate<sp/>xpath<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/>result<sp/>=<sp/>xmlXPathEvalExpression(searchPath,xpathContex);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>xmlNodeSetPtr<sp/>nodeset<sp/>=<sp/>result-&gt;nodesetval;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!xmlXPathNodeSetIsEmpty(nodeset)){</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>on<sp/>all<sp/>the<sp/>GROUP<sp/>until<sp/>reaching<sp/>the<sp/>electrodeGroupID<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbGroups<sp/>=<sp/>nodeset-&gt;nodeNr;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nbGroups;<sp/>++i){</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((i<sp/>+<sp/>1)<sp/>!=<sp/>electrodeGroupID)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>xmlNodePtr<sp/>child;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(child<sp/>=<sp/>nodeset-&gt;nodeTab[i]-&gt;children;child<sp/>!=<sp/>NULL;child<sp/>=<sp/>child-&gt;next){</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//skip<sp/>the<sp/>carriage<sp/>return<sp/>(text<sp/>node<sp/>named<sp/>text<sp/>and<sp/>containing<sp/>/n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(child-&gt;type<sp/>==<sp/>XML_TEXT_NODE)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)child-&gt;name)<sp/>==<sp/>NB_FEATURES){<sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Should<sp/>be<sp/>only<sp/>one<sp/>nbFeatures<sp/>element,<sp/>so<sp/>take<sp/>the<sp/>first<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar*<sp/>snbFeatures<sp/>=<sp/>xmlNodeListGetString(doc,child-&gt;children,<sp/>1);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nbFeatures<sp/>=<sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)snbFeatures).toInt();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFree(snbFeatures);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((i<sp/>+<sp/>1)<sp/>==<sp/>electrodeGroupID)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/>xmlFree(searchPath);<sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/>xmlXPathFreeObject(result);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nbFeatures;<sp/><sp/></highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classKlustersXmlReader_17cf1cdcd65a04ccd98c7a47a0e279feb" kindref="member">KlustersXmlReader::getVoltageRange</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>range<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/>xmlXPathObjectPtr<sp/>result;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/>xmlChar*<sp/>searchPath<sp/>=<sp/>xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;//&quot;</highlight><highlight class="normal"><sp/>+<sp/>ACQUISITION<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>VOLTAGE_RANGE);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/></highlight><highlight class="comment">//Evaluate<sp/>xpath<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/>result<sp/>=<sp/>xmlXPathEvalExpression(searchPath,xpathContex);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>xmlNodeSetPtr<sp/>nodeset<sp/>=<sp/>result-&gt;nodesetval;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!xmlXPathNodeSetIsEmpty(nodeset)){</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Should<sp/>be<sp/>only<sp/>one<sp/>range<sp/>element,<sp/>so<sp/>take<sp/>the<sp/>first<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/>xmlChar*<sp/>sRange<sp/>=<sp/>xmlNodeListGetString(doc,nodeset-&gt;nodeTab[0]-&gt;children,<sp/>1);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/>range<sp/>=<sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sRange).toInt();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/>xmlFree(sRange);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/>xmlFree(searchPath);<sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/>xmlXPathFreeObject(result);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>range;<sp/><sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classKlustersXmlReader_18b27e29d7b49de0466ef69f08103826e" kindref="member">KlustersXmlReader::getAmplification</ref>()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amplification<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/>xmlXPathObjectPtr<sp/>result;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/>xmlChar*<sp/>searchPath<sp/>=<sp/>xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;//&quot;</highlight><highlight class="normal"><sp/>+<sp/>ACQUISITION<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>AMPLIFICATION);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/></highlight><highlight class="comment">//Evaluate<sp/>xpath<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/>result<sp/>=<sp/>xmlXPathEvalExpression(searchPath,xpathContex);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>xmlNodeSetPtr<sp/>nodeset<sp/>=<sp/>result-&gt;nodesetval;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!xmlXPathNodeSetIsEmpty(nodeset)){</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Should<sp/>be<sp/>only<sp/>one<sp/>amplification<sp/>element,<sp/>so<sp/>take<sp/>the<sp/>first<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/>xmlChar*<sp/>sAmplification<sp/>=<sp/>xmlNodeListGetString(doc,nodeset-&gt;nodeTab[0]-&gt;children,<sp/>1);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/>amplification<sp/>=<sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sAmplification).toInt();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/>xmlFree(sAmplification);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/>xmlFree(searchPath);<sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/>xmlXPathFreeObject(result);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>amplification;<sp/><sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classKlustersXmlReader_153f101ab15add69915e45e079cfb6e7f" kindref="member">KlustersXmlReader::getOffset</ref>()</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/>xmlXPathObjectPtr<sp/>result;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/>xmlChar*<sp/>searchPath<sp/>=<sp/>xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;//&quot;</highlight><highlight class="normal"><sp/>+<sp/>ACQUISITION<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>OFFSET);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/></highlight><highlight class="comment">//Evaluate<sp/>xpath<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/>result<sp/>=<sp/>xmlXPathEvalExpression(searchPath,xpathContex);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>xmlNodeSetPtr<sp/>nodeset<sp/>=<sp/>result-&gt;nodesetval;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!xmlXPathNodeSetIsEmpty(nodeset)){</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Should<sp/>be<sp/>only<sp/>one<sp/>offset<sp/>element,<sp/>so<sp/>take<sp/>the<sp/>first<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/>xmlChar*<sp/>sOffset<sp/>=<sp/>xmlNodeListGetString(doc,nodeset-&gt;nodeTab[0]-&gt;children,<sp/>1);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/>offset<sp/>=<sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sOffset).toInt();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/>xmlFree(sOffset);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/>xmlFree(searchPath);<sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/>xmlXPathFreeObject(result);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classKlustersXmlReader_136fb2a96ae95ffdd6d68974793f1e4c5" kindref="member">KlustersXmlReader::getClusterUserInformation</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pGroup,<sp/>QMap&lt;int,ClusterUserInformation&gt;&amp;<sp/>clusterUserInformationMap)</highlight><highlight class="keyword">const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>xmlXPathObjectPtr<sp/>result;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>xmlChar*<sp/>searchPath<sp/>=<sp/>xmlCharStrdup(</highlight><highlight class="stringliteral">&quot;//&quot;</highlight><highlight class="normal"><sp/>+<sp/>UNITS<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>+<sp/>UNIT);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/></highlight><highlight class="comment">//Evaluate<sp/>xpath<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>xmlXPathEvalExpression(searchPath,xpathContex);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result<sp/>!=<sp/>NULL){</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNodeSetPtr<sp/>nodeset<sp/>=<sp/>result-&gt;nodesetval;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!xmlXPathNodeSetIsEmpty(nodeset)){</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>on<sp/>all<sp/>the<sp/>UNIT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbUnits<sp/>=<sp/>nodeset-&gt;nodeNr;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nbUnits;<sp/>++i){</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>groupId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clusterId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>structure<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>ID<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>quality<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>notes<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classClusterUserInformation" kindref="compound">ClusterUserInformation</ref><sp/>currentClusterUserInformation<sp/>=<sp/><ref refid="classClusterUserInformation" kindref="compound">ClusterUserInformation</ref>();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlNodePtr<sp/>child;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(child<sp/>=<sp/>nodeset-&gt;nodeTab[i]-&gt;children;child<sp/>!=<sp/>NULL;child<sp/>=<sp/>child-&gt;next){</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//skip<sp/>the<sp/>carriage<sp/>return<sp/>(text<sp/>node<sp/>named<sp/>text<sp/>and<sp/>containing<sp/>/n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(child-&gt;type<sp/>==<sp/>XML_TEXT_NODE)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)child-&gt;name)<sp/>==<sp/>GROUP){</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar*<sp/>sId<sp/>=<sp/>xmlNodeListGetString(doc,child-&gt;children,<sp/>1);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>groupId<sp/>=<sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sId).toInt();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFree(sId);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Group<sp/>is<sp/>the<sp/>first<sp/>tag<sp/>and<sp/>we<sp/>are<sp/>looking<sp/>only<sp/>for<sp/>the<sp/>units<sp/>having<sp/>a<sp/>groupId<sp/>equals<sp/>to<sp/>pGroup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(groupId<sp/>!=<sp/>pGroup){</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentClusterUserInformation.<ref refid="classClusterUserInformation_1ddf37a39d874d9d848b3ace340e8b563" kindref="member">setGroup</ref>(groupId);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)child-&gt;name)<sp/>==<sp/>CLUSTER){</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar*<sp/>sClusterId<sp/>=<sp/>xmlNodeListGetString(doc,child-&gt;children,<sp/>1);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusterId<sp/>=<sp/><sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sClusterId).toInt();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFree(sClusterId);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentClusterUserInformation.<ref refid="classClusterUserInformation_15651c6db325e23bbf6f4513cb0b6eaf8" kindref="member">setCluster</ref>(clusterId);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)child-&gt;name)<sp/>==<sp/>STRUCTURE){</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar*<sp/>sStructure<sp/>=<sp/>xmlNodeListGetString(doc,child-&gt;children,<sp/>1);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>structure<sp/>=<sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sStructure);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFree(sStructure);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentClusterUserInformation.<ref refid="classClusterUserInformation_1c8004cd9ad518d9bec19c76504ef1782" kindref="member">setStructure</ref>(structure);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)child-&gt;name)<sp/>==<sp/>TYPE){</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar*<sp/>sType<sp/>=<sp/>xmlNodeListGetString(doc,child-&gt;children,<sp/>1);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>type<sp/>=<sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sType);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFree(sType);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentClusterUserInformation.<ref refid="classClusterUserInformation_1250cb473d444b5a5edd53353e77b4bcc" kindref="member">setType</ref>(type);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)child-&gt;name)<sp/>==<sp/>ID){</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar*<sp/>sID<sp/>=<sp/>xmlNodeListGetString(doc,child-&gt;children,<sp/>1);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>ID<sp/>=<sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sID);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFree(sID);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentClusterUserInformation.<ref refid="classClusterUserInformation_186f7b9973d1523bf15312b7ad7df0240" kindref="member">setId</ref>(ID);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)child-&gt;name)<sp/>==<sp/>QUALITY){</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar*<sp/>sQuality<sp/>=<sp/>xmlNodeListGetString(doc,child-&gt;children,<sp/>1);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>quality<sp/>=<sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sQuality);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFree(sQuality);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentClusterUserInformation.<ref refid="classClusterUserInformation_1fd7fce4abc38d972738e17adda3c98d0" kindref="member">setQuality</ref>(quality);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)child-&gt;name)<sp/>==<sp/>NOTES){</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlChar*<sp/>sNotes<sp/>=<sp/>xmlNodeListGetString(doc,child-&gt;children,<sp/>1);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QString<sp/>notes<sp/>=<sp/>QString((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)sNotes);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFree(sNotes);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentClusterUserInformation.<ref refid="classClusterUserInformation_126fd6feea5d77bf987f3724d2c9acc86" kindref="member">setNotes</ref>(notes);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(groupId<sp/>==<sp/>pGroup){</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusterUserInformationMap.insert(clusterId,currentClusterUserInformation);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/lynn/CMBN/Klusters/klusters/src/klustersxmlreader.cpp"/>
  </compounddef>
</doxygen>
